<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="46316"><g><title>Coroutine (6 samples, 0.01%)</title><rect x="0.0000%" y="581" width="0.0130%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="591.50"></text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (87 samples, 0.19%)</title><rect x="0.0130%" y="581" width="0.1878%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="87"/><text x="0.2630%" y="591.50"></text></g><g><title>zend_object_release (7 samples, 0.02%)</title><rect x="0.1857%" y="565" width="0.0151%" height="15" fill="rgb(221,193,54)" fg:x="86" fg:w="7"/><text x="0.4357%" y="575.50"></text></g><g><title>ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER (64 samples, 0.14%)</title><rect x="0.2008%" y="581" width="0.1382%" height="15" fill="rgb(248,212,6)" fg:x="93" fg:w="64"/><text x="0.4508%" y="591.50"></text></g><g><title>__clock_gettime (43 samples, 0.09%)</title><rect x="0.3411%" y="581" width="0.0928%" height="15" fill="rgb(208,68,35)" fg:x="158" fg:w="43"/><text x="0.5911%" y="591.50"></text></g><g><title>__vdso_clock_gettime (32 samples, 0.07%)</title><rect x="0.3649%" y="565" width="0.0691%" height="15" fill="rgb(232,128,0)" fg:x="169" fg:w="32"/><text x="0.6149%" y="575.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.06%)</title><rect x="0.4340%" y="581" width="0.0583%" height="15" fill="rgb(207,160,47)" fg:x="201" fg:w="27"/><text x="0.6840%" y="591.50"></text></g><g><title>_emalloc (5 samples, 0.01%)</title><rect x="0.4944%" y="581" width="0.0108%" height="15" fill="rgb(228,23,34)" fg:x="229" fg:w="5"/><text x="0.7444%" y="591.50"></text></g><g><title>mi_find_page (7 samples, 0.02%)</title><rect x="0.5203%" y="581" width="0.0151%" height="15" fill="rgb(218,30,26)" fg:x="241" fg:w="7"/><text x="0.7703%" y="591.50"></text></g><g><title>mi_option_get (11 samples, 0.02%)</title><rect x="0.5376%" y="581" width="0.0237%" height="15" fill="rgb(220,122,19)" fg:x="249" fg:w="11"/><text x="0.7876%" y="591.50"></text></g><g><title>mi_segment_commit_mask (5 samples, 0.01%)</title><rect x="0.5614%" y="581" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="260" fg:w="5"/><text x="0.8114%" y="591.50"></text></g><g><title>operator new (9 samples, 0.02%)</title><rect x="0.5722%" y="581" width="0.0194%" height="15" fill="rgb(240,193,28)" fg:x="265" fg:w="9"/><text x="0.8222%" y="591.50"></text></g><g><title>swoole::BaseFactory::dispatch (8 samples, 0.02%)</title><rect x="0.6024%" y="581" width="0.0173%" height="15" fill="rgb(216,20,37)" fg:x="279" fg:w="8"/><text x="0.8524%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::main_func (10 samples, 0.02%)</title><rect x="0.6218%" y="581" width="0.0216%" height="15" fill="rgb(206,188,39)" fg:x="288" fg:w="10"/><text x="0.8718%" y="591.50"></text></g><g><title>swoole::coroutine::Context::swap_in (14 samples, 0.03%)</title><rect x="0.6564%" y="581" width="0.0302%" height="15" fill="rgb(217,207,13)" fg:x="304" fg:w="14"/><text x="0.9064%" y="591.50"></text></g><g><title>swoole::http::Context::end (161 samples, 0.35%)</title><rect x="0.6866%" y="581" width="0.3476%" height="15" fill="rgb(231,73,38)" fg:x="318" fg:w="161"/><text x="0.9366%" y="591.50"></text></g><g><title>zend_string_equal_content (6 samples, 0.01%)</title><rect x="1.0644%" y="549" width="0.0130%" height="15" fill="rgb(225,20,46)" fg:x="493" fg:w="6"/><text x="1.3144%" y="559.50"></text></g><g><title>zend_hash_find (17 samples, 0.04%)</title><rect x="1.0450%" y="581" width="0.0367%" height="15" fill="rgb(210,31,41)" fg:x="484" fg:w="17"/><text x="1.2950%" y="591.50"></text></g><g><title>zend_hash_find_bucket (8 samples, 0.02%)</title><rect x="1.0644%" y="565" width="0.0173%" height="15" fill="rgb(221,200,47)" fg:x="493" fg:w="8"/><text x="1.3144%" y="575.50"></text></g><g><title>zend_hash_func (6 samples, 0.01%)</title><rect x="1.0817%" y="581" width="0.0130%" height="15" fill="rgb(226,26,5)" fg:x="501" fg:w="6"/><text x="1.3317%" y="591.50"></text></g><g><title>zend_init_func_execute_data (19 samples, 0.04%)</title><rect x="1.0947%" y="581" width="0.0410%" height="15" fill="rgb(249,33,26)" fg:x="507" fg:w="19"/><text x="1.3447%" y="591.50"></text></g><g><title>zend_leave_helper_SPEC (382 samples, 0.82%)</title><rect x="1.1357%" y="581" width="0.8248%" height="15" fill="rgb(235,183,28)" fg:x="526" fg:w="382"/><text x="1.3857%" y="591.50"></text></g><g><title>zend_mm_alloc_pages (185 samples, 0.40%)</title><rect x="1.9604%" y="581" width="0.3994%" height="15" fill="rgb(221,5,38)" fg:x="908" fg:w="185"/><text x="2.2104%" y="591.50"></text></g><g><title>zim_swoole_http_request___destruct (58 samples, 0.13%)</title><rect x="2.3642%" y="581" width="0.1252%" height="15" fill="rgb(247,18,42)" fg:x="1095" fg:w="58"/><text x="2.6142%" y="591.50"></text></g><g><title>zim_swoole_http_response___destruct (14 samples, 0.03%)</title><rect x="2.4894%" y="581" width="0.0302%" height="15" fill="rgb(241,131,45)" fg:x="1153" fg:w="14"/><text x="2.7394%" y="591.50"></text></g><g><title>[[stack]] (1,211 samples, 2.61%)</title><rect x="0.0000%" y="597" width="2.6146%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1211"/><text x="0.2500%" y="607.50">[[..</text></g><g><title>zim_swoole_http_response_header (44 samples, 0.09%)</title><rect x="2.5196%" y="581" width="0.0950%" height="15" fill="rgb(225,111,53)" fg:x="1167" fg:w="44"/><text x="2.7696%" y="591.50"></text></g><g><title>[[vdso]] (5 samples, 0.01%)</title><rect x="2.6146%" y="597" width="0.0108%" height="15" fill="rgb(238,160,17)" fg:x="1211" fg:w="5"/><text x="2.8646%" y="607.50"></text></g><g><title>Context (23 samples, 0.05%)</title><rect x="2.6254%" y="581" width="0.0497%" height="15" fill="rgb(214,148,48)" fg:x="1216" fg:w="23"/><text x="2.8754%" y="591.50"></text></g><g><title>Coroutine (8 samples, 0.02%)</title><rect x="2.6751%" y="581" width="0.0173%" height="15" fill="rgb(232,36,49)" fg:x="1239" fg:w="8"/><text x="2.9251%" y="591.50"></text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (22 samples, 0.05%)</title><rect x="2.6945%" y="581" width="0.0475%" height="15" fill="rgb(209,103,24)" fg:x="1248" fg:w="22"/><text x="2.9445%" y="591.50"></text></g><g><title>ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER (5 samples, 0.01%)</title><rect x="2.7420%" y="581" width="0.0108%" height="15" fill="rgb(229,88,8)" fg:x="1270" fg:w="5"/><text x="2.9920%" y="591.50"></text></g><g><title>ZEND_SEND_VAL_EX_SPEC_CONST_UNUSED_QUICK_HANDLER (114 samples, 0.25%)</title><rect x="2.7528%" y="581" width="0.2461%" height="15" fill="rgb(213,181,19)" fg:x="1275" fg:w="114"/><text x="3.0028%" y="591.50"></text></g><g><title>__clock_gettime (114 samples, 0.25%)</title><rect x="2.9990%" y="581" width="0.2461%" height="15" fill="rgb(254,191,54)" fg:x="1389" fg:w="114"/><text x="3.2490%" y="591.50"></text></g><g><title>__vdso_clock_gettime (93 samples, 0.20%)</title><rect x="3.0443%" y="565" width="0.2008%" height="15" fill="rgb(241,83,37)" fg:x="1410" fg:w="93"/><text x="3.2943%" y="575.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.03%)</title><rect x="3.2473%" y="581" width="0.0302%" height="15" fill="rgb(233,36,39)" fg:x="1504" fg:w="14"/><text x="3.4973%" y="591.50"></text></g><g><title>_efree (84 samples, 0.18%)</title><rect x="3.2775%" y="581" width="0.1814%" height="15" fill="rgb(226,3,54)" fg:x="1518" fg:w="84"/><text x="3.5275%" y="591.50"></text></g><g><title>_emalloc (7 samples, 0.02%)</title><rect x="3.4653%" y="581" width="0.0151%" height="15" fill="rgb(245,192,40)" fg:x="1605" fg:w="7"/><text x="3.7153%" y="591.50"></text></g><g><title>_mi_malloc_generic (5 samples, 0.01%)</title><rect x="3.4891%" y="581" width="0.0108%" height="15" fill="rgb(238,167,29)" fg:x="1616" fg:w="5"/><text x="3.7391%" y="591.50"></text></g><g><title>_mi_page_free (16 samples, 0.03%)</title><rect x="3.4999%" y="581" width="0.0345%" height="15" fill="rgb(232,182,51)" fg:x="1621" fg:w="16"/><text x="3.7499%" y="591.50"></text></g><g><title>_mi_segment_page_free (45 samples, 0.10%)</title><rect x="3.5387%" y="581" width="0.0972%" height="15" fill="rgb(231,60,39)" fg:x="1639" fg:w="45"/><text x="3.7887%" y="591.50"></text></g><g><title>_zend_new_array_0 (116 samples, 0.25%)</title><rect x="3.6359%" y="581" width="0.2505%" height="15" fill="rgb(208,69,12)" fg:x="1684" fg:w="116"/><text x="3.8859%" y="591.50"></text></g><g><title>add_assoc_double_ex (8 samples, 0.02%)</title><rect x="3.8863%" y="581" width="0.0173%" height="15" fill="rgb(235,93,37)" fg:x="1800" fg:w="8"/><text x="4.1363%" y="591.50"></text></g><g><title>zend_symtable_str_update (5 samples, 0.01%)</title><rect x="3.8928%" y="565" width="0.0108%" height="15" fill="rgb(213,116,39)" fg:x="1803" fg:w="5"/><text x="4.1428%" y="575.50"></text></g><g><title>add_assoc_long_ex (22 samples, 0.05%)</title><rect x="3.9036%" y="581" width="0.0475%" height="15" fill="rgb(222,207,29)" fg:x="1808" fg:w="22"/><text x="4.1536%" y="591.50"></text></g><g><title>zend_symtable_str_update (5 samples, 0.01%)</title><rect x="3.9403%" y="565" width="0.0108%" height="15" fill="rgb(206,96,30)" fg:x="1825" fg:w="5"/><text x="4.1903%" y="575.50"></text></g><g><title>add_assoc_str_ex (35 samples, 0.08%)</title><rect x="3.9511%" y="581" width="0.0756%" height="15" fill="rgb(218,138,4)" fg:x="1830" fg:w="35"/><text x="4.2011%" y="591.50"></text></g><g><title>zend_string_init (12 samples, 0.03%)</title><rect x="4.1778%" y="565" width="0.0259%" height="15" fill="rgb(250,191,14)" fg:x="1935" fg:w="12"/><text x="4.4278%" y="575.50"></text></g><g><title>zend_string_alloc (8 samples, 0.02%)</title><rect x="4.1865%" y="549" width="0.0173%" height="15" fill="rgb(239,60,40)" fg:x="1939" fg:w="8"/><text x="4.4365%" y="559.50"></text></g><g><title>add_assoc_string_ex (89 samples, 0.19%)</title><rect x="4.0267%" y="581" width="0.1922%" height="15" fill="rgb(206,27,48)" fg:x="1865" fg:w="89"/><text x="4.2767%" y="591.50"></text></g><g><title>zend_symtable_str_update (7 samples, 0.02%)</title><rect x="4.2037%" y="565" width="0.0151%" height="15" fill="rgb(225,35,8)" fg:x="1947" fg:w="7"/><text x="4.4537%" y="575.50"></text></g><g><title>add_assoc_stringl_ex (17 samples, 0.04%)</title><rect x="4.2188%" y="581" width="0.0367%" height="15" fill="rgb(250,213,24)" fg:x="1954" fg:w="17"/><text x="4.4688%" y="591.50"></text></g><g><title>add_assoc_zval_ex (97 samples, 0.21%)</title><rect x="4.2555%" y="581" width="0.2094%" height="15" fill="rgb(247,123,22)" fg:x="1971" fg:w="97"/><text x="4.5055%" y="591.50"></text></g><g><title>execute_ex (137 samples, 0.30%)</title><rect x="4.4650%" y="581" width="0.2958%" height="15" fill="rgb(231,138,38)" fg:x="2068" fg:w="137"/><text x="4.7150%" y="591.50"></text></g><g><title>http_context_send_data (38 samples, 0.08%)</title><rect x="4.7651%" y="581" width="0.0820%" height="15" fill="rgb(231,145,46)" fg:x="2207" fg:w="38"/><text x="5.0151%" y="591.50"></text></g><g><title>http_request_message_complete (9 samples, 0.02%)</title><rect x="4.8471%" y="581" width="0.0194%" height="15" fill="rgb(251,118,11)" fg:x="2245" fg:w="9"/><text x="5.0971%" y="591.50"></text></g><g><title>mi_page_free_list_extend (31 samples, 0.07%)</title><rect x="4.8730%" y="581" width="0.0669%" height="15" fill="rgb(217,147,25)" fg:x="2257" fg:w="31"/><text x="5.1230%" y="591.50"></text></g><g><title>mi_segment_commit_mask (18 samples, 0.04%)</title><rect x="4.9400%" y="581" width="0.0389%" height="15" fill="rgb(247,81,37)" fg:x="2288" fg:w="18"/><text x="5.1900%" y="591.50"></text></g><g><title>mi_segment_delayed_decommit (40 samples, 0.09%)</title><rect x="4.9853%" y="581" width="0.0864%" height="15" fill="rgb(209,12,38)" fg:x="2309" fg:w="40"/><text x="5.2353%" y="591.50"></text></g><g><title>mi_segment_page_clear (37 samples, 0.08%)</title><rect x="5.0717%" y="581" width="0.0799%" height="15" fill="rgb(227,1,9)" fg:x="2349" fg:w="37"/><text x="5.3217%" y="591.50"></text></g><g><title>mi_segment_span_allocate (9 samples, 0.02%)</title><rect x="5.1516%" y="581" width="0.0194%" height="15" fill="rgb(248,47,43)" fg:x="2386" fg:w="9"/><text x="5.4016%" y="591.50"></text></g><g><title>object_init_ex (8 samples, 0.02%)</title><rect x="5.1753%" y="581" width="0.0173%" height="15" fill="rgb(221,10,30)" fg:x="2397" fg:w="8"/><text x="5.4253%" y="591.50"></text></g><g><title>object_properties_init (57 samples, 0.12%)</title><rect x="5.1926%" y="581" width="0.1231%" height="15" fill="rgb(210,229,1)" fg:x="2405" fg:w="57"/><text x="5.4426%" y="591.50"></text></g><g><title>operator (14 samples, 0.03%)</title><rect x="5.3178%" y="581" width="0.0302%" height="15" fill="rgb(222,148,37)" fg:x="2463" fg:w="14"/><text x="5.5678%" y="591.50"></text></g><g><title>operator (23 samples, 0.05%)</title><rect x="5.3545%" y="581" width="0.0497%" height="15" fill="rgb(234,67,33)" fg:x="2480" fg:w="23"/><text x="5.6045%" y="591.50"></text></g><g><title>zval_get_type (22 samples, 0.05%)</title><rect x="5.3567%" y="565" width="0.0475%" height="15" fill="rgb(247,98,35)" fg:x="2481" fg:w="22"/><text x="5.6067%" y="575.50"></text></g><g><title>php_swoole_get_recv_data (81 samples, 0.17%)</title><rect x="5.4042%" y="581" width="0.1749%" height="15" fill="rgb(247,138,52)" fg:x="2503" fg:w="81"/><text x="5.6542%" y="591.50"></text></g><g><title>php_swoole_http_request_create_object (34 samples, 0.07%)</title><rect x="5.5791%" y="581" width="0.0734%" height="15" fill="rgb(213,79,30)" fg:x="2584" fg:w="34"/><text x="5.8291%" y="591.50"></text></g><g><title>php_swoole_http_request_free_object (53 samples, 0.11%)</title><rect x="5.6525%" y="581" width="0.1144%" height="15" fill="rgb(246,177,23)" fg:x="2618" fg:w="53"/><text x="5.9025%" y="591.50"></text></g><g><title>php_swoole_http_response_create_object (14 samples, 0.03%)</title><rect x="5.7691%" y="581" width="0.0302%" height="15" fill="rgb(230,62,27)" fg:x="2672" fg:w="14"/><text x="6.0191%" y="591.50"></text></g><g><title>php_swoole_http_response_free_object (14 samples, 0.03%)</title><rect x="5.7993%" y="581" width="0.0302%" height="15" fill="rgb(216,154,8)" fg:x="2686" fg:w="14"/><text x="6.0493%" y="591.50"></text></g><g><title>php_swoole_http_response_get_and_check_context (24 samples, 0.05%)</title><rect x="5.8295%" y="581" width="0.0518%" height="15" fill="rgb(244,35,45)" fg:x="2700" fg:w="24"/><text x="6.0795%" y="591.50"></text></g><g><title>php_swoole_http_server_onReceive (70 samples, 0.15%)</title><rect x="5.8813%" y="581" width="0.1511%" height="15" fill="rgb(251,115,12)" fg:x="2724" fg:w="70"/><text x="6.1313%" y="591.50"></text></g><g><title>php_url_decode (52 samples, 0.11%)</title><rect x="6.0325%" y="581" width="0.1123%" height="15" fill="rgb(240,54,50)" fg:x="2794" fg:w="52"/><text x="6.2825%" y="591.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (15 samples, 0.03%)</title><rect x="6.1512%" y="581" width="0.0324%" height="15" fill="rgb(233,84,52)" fg:x="2849" fg:w="15"/><text x="6.4012%" y="591.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (13 samples, 0.03%)</title><rect x="6.1836%" y="581" width="0.0281%" height="15" fill="rgb(207,117,47)" fg:x="2864" fg:w="13"/><text x="6.4336%" y="591.50"></text></g><g><title>sw_snprintf (89 samples, 0.19%)</title><rect x="6.2203%" y="581" width="0.1922%" height="15" fill="rgb(249,43,39)" fg:x="2881" fg:w="89"/><text x="6.4703%" y="591.50"></text></g><g><title>swoole::BaseFactory::finish (10 samples, 0.02%)</title><rect x="6.4125%" y="581" width="0.0216%" height="15" fill="rgb(209,38,44)" fg:x="2970" fg:w="10"/><text x="6.6625%" y="591.50"></text></g><g><title>swoole::MessageBus::get_packet (6 samples, 0.01%)</title><rect x="6.4341%" y="581" width="0.0130%" height="15" fill="rgb(236,212,23)" fg:x="2980" fg:w="6"/><text x="6.6841%" y="591.50"></text></g><g><title>swoole::Coroutine::create (5 samples, 0.01%)</title><rect x="6.5075%" y="565" width="0.0108%" height="15" fill="rgb(242,79,21)" fg:x="3014" fg:w="5"/><text x="6.7575%" y="575.50"></text></g><g><title>swoole::PHPCoroutine::create (35 samples, 0.08%)</title><rect x="6.4470%" y="581" width="0.0756%" height="15" fill="rgb(211,96,35)" fg:x="2986" fg:w="35"/><text x="6.6970%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::on_close (27 samples, 0.06%)</title><rect x="6.5226%" y="581" width="0.0583%" height="15" fill="rgb(253,215,40)" fg:x="3021" fg:w="27"/><text x="6.7726%" y="591.50"></text></g><g><title>swoole::Reactor::execute_end_callbacks (19 samples, 0.04%)</title><rect x="6.5809%" y="581" width="0.0410%" height="15" fill="rgb(211,81,21)" fg:x="3048" fg:w="19"/><text x="6.8309%" y="591.50"></text></g><g><title>swoole::ReactorEpoll::wait (8 samples, 0.02%)</title><rect x="6.6241%" y="581" width="0.0173%" height="15" fill="rgb(208,190,38)" fg:x="3068" fg:w="8"/><text x="6.8741%" y="591.50"></text></g><g><title>swoole::ReactorThread_onRead (98 samples, 0.21%)</title><rect x="6.6413%" y="581" width="0.2116%" height="15" fill="rgb(235,213,38)" fg:x="3076" fg:w="98"/><text x="6.8913%" y="591.50"></text></g><g><title>swoole::Server::destroy_http_request (26 samples, 0.06%)</title><rect x="6.8529%" y="581" width="0.0561%" height="15" fill="rgb(237,122,38)" fg:x="3174" fg:w="26"/><text x="7.1029%" y="591.50"></text></g><g><title>swoole::Server::send (53 samples, 0.11%)</title><rect x="6.9134%" y="581" width="0.1144%" height="15" fill="rgb(244,218,35)" fg:x="3202" fg:w="53"/><text x="7.1634%" y="591.50"></text></g><g><title>swoole::Server::worker_accept_event (111 samples, 0.24%)</title><rect x="7.0278%" y="581" width="0.2397%" height="15" fill="rgb(240,68,47)" fg:x="3255" fg:w="111"/><text x="7.2778%" y="591.50"></text></g><g><title>swoole::Worker_do_task (6 samples, 0.01%)</title><rect x="7.2545%" y="565" width="0.0130%" height="15" fill="rgb(210,16,53)" fg:x="3360" fg:w="6"/><text x="7.5045%" y="575.50"></text></g><g><title>swoole::String::append (94 samples, 0.20%)</title><rect x="7.2675%" y="581" width="0.2030%" height="15" fill="rgb(235,124,12)" fg:x="3366" fg:w="94"/><text x="7.5175%" y="591.50"></text></g><g><title>swoole::Timer::now (43 samples, 0.09%)</title><rect x="7.4704%" y="581" width="0.0928%" height="15" fill="rgb(224,169,11)" fg:x="3460" fg:w="43"/><text x="7.7204%" y="591.50"></text></g><g><title>swoole::Timer::select (11 samples, 0.02%)</title><rect x="7.5633%" y="581" width="0.0237%" height="15" fill="rgb(250,166,2)" fg:x="3503" fg:w="11"/><text x="7.8133%" y="591.50"></text></g><g><title>http_set_date_header (5 samples, 0.01%)</title><rect x="7.6345%" y="565" width="0.0108%" height="15" fill="rgb(242,216,29)" fg:x="3536" fg:w="5"/><text x="7.8845%" y="575.50"></text></g><g><title>swoole::http::Context::build_header (33 samples, 0.07%)</title><rect x="7.5870%" y="581" width="0.0712%" height="15" fill="rgb(230,116,27)" fg:x="3514" fg:w="33"/><text x="7.8370%" y="591.50"></text></g><g><title>swoole::http::Context::compress (21 samples, 0.05%)</title><rect x="7.6583%" y="581" width="0.0453%" height="15" fill="rgb(228,99,48)" fg:x="3547" fg:w="21"/><text x="7.9083%" y="591.50"></text></g><g><title>swoole::http::Context::free (51 samples, 0.11%)</title><rect x="7.7036%" y="581" width="0.1101%" height="15" fill="rgb(253,11,6)" fg:x="3568" fg:w="51"/><text x="7.9536%" y="591.50"></text></g><g><title>~Context (27 samples, 0.06%)</title><rect x="7.7554%" y="565" width="0.0583%" height="15" fill="rgb(247,143,39)" fg:x="3592" fg:w="27"/><text x="8.0054%" y="575.50"></text></g><g><title>~__shared_ptr (27 samples, 0.06%)</title><rect x="7.7554%" y="549" width="0.0583%" height="15" fill="rgb(236,97,10)" fg:x="3592" fg:w="27"/><text x="8.0054%" y="559.50"></text></g><g><title>~__shared_count (27 samples, 0.06%)</title><rect x="7.7554%" y="533" width="0.0583%" height="15" fill="rgb(233,208,19)" fg:x="3592" fg:w="27"/><text x="8.0054%" y="543.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (27 samples, 0.06%)</title><rect x="7.7554%" y="517" width="0.0583%" height="15" fill="rgb(216,164,2)" fg:x="3592" fg:w="27"/><text x="8.0054%" y="527.50"></text></g><g><title>swoole::http::Context::get_write_buffer (19 samples, 0.04%)</title><rect x="7.8137%" y="581" width="0.0410%" height="15" fill="rgb(220,129,5)" fg:x="3619" fg:w="19"/><text x="8.0637%" y="591.50"></text></g><g><title>swoole::http::Context::init (8 samples, 0.02%)</title><rect x="7.8547%" y="581" width="0.0173%" height="15" fill="rgb(242,17,10)" fg:x="3638" fg:w="8"/><text x="8.1047%" y="591.50"></text></g><g><title>swoole::http::Context::set_header (25 samples, 0.05%)</title><rect x="7.8720%" y="581" width="0.0540%" height="15" fill="rgb(242,107,0)" fg:x="3646" fg:w="25"/><text x="8.1220%" y="591.50"></text></g><g><title>swoole::http_server::Request::get_protocol (7 samples, 0.02%)</title><rect x="7.9303%" y="581" width="0.0151%" height="15" fill="rgb(251,28,31)" fg:x="3673" fg:w="7"/><text x="8.1803%" y="591.50"></text></g><g><title>swoole::http_server::Request::parse_header_info (8 samples, 0.02%)</title><rect x="7.9454%" y="581" width="0.0173%" height="15" fill="rgb(233,223,10)" fg:x="3680" fg:w="8"/><text x="8.1954%" y="591.50"></text></g><g><title>swoole::http_server::dispatch_request (12 samples, 0.03%)</title><rect x="7.9627%" y="581" width="0.0259%" height="15" fill="rgb(215,21,27)" fg:x="3688" fg:w="12"/><text x="8.2127%" y="591.50"></text></g><g><title>swoole::microtime (26 samples, 0.06%)</title><rect x="7.9886%" y="581" width="0.0561%" height="15" fill="rgb(232,23,21)" fg:x="3700" fg:w="26"/><text x="8.2386%" y="591.50"></text></g><g><title>swoole::network::Address::get_addr (15 samples, 0.03%)</title><rect x="8.0447%" y="581" width="0.0324%" height="15" fill="rgb(244,5,23)" fg:x="3726" fg:w="15"/><text x="8.2947%" y="591.50"></text></g><g><title>swoole::network::Socket::recv (9 samples, 0.02%)</title><rect x="8.0793%" y="581" width="0.0194%" height="15" fill="rgb(226,81,46)" fg:x="3742" fg:w="9"/><text x="8.3293%" y="591.50"></text></g><g><title>swoole::network::Socket::send (117 samples, 0.25%)</title><rect x="8.0987%" y="581" width="0.2526%" height="15" fill="rgb(247,70,30)" fg:x="3751" fg:w="117"/><text x="8.3487%" y="591.50"></text></g><g><title>swoole_http_context_new (47 samples, 0.10%)</title><rect x="8.3513%" y="581" width="0.1015%" height="15" fill="rgb(212,68,19)" fg:x="3868" fg:w="47"/><text x="8.6013%" y="591.50"></text></g><g><title>swoole_http_init_and_read_property (7 samples, 0.02%)</title><rect x="8.4377%" y="565" width="0.0151%" height="15" fill="rgb(240,187,13)" fg:x="3908" fg:w="7"/><text x="8.6877%" y="575.50"></text></g><g><title>swoole_http_parser_execute (72 samples, 0.16%)</title><rect x="8.4528%" y="581" width="0.1555%" height="15" fill="rgb(223,113,26)" fg:x="3915" fg:w="72"/><text x="8.7028%" y="591.50"></text></g><g><title>swoole_http_server_onAfterResponse (10 samples, 0.02%)</title><rect x="8.6083%" y="581" width="0.0216%" height="15" fill="rgb(206,192,2)" fg:x="3987" fg:w="10"/><text x="8.8583%" y="591.50"></text></g><g><title>swoole_http_server_onBeforeRequest (16 samples, 0.03%)</title><rect x="8.6298%" y="581" width="0.0345%" height="15" fill="rgb(241,108,4)" fg:x="3997" fg:w="16"/><text x="8.8798%" y="591.50"></text></g><g><title>zend::function::call (5 samples, 0.01%)</title><rect x="8.6709%" y="581" width="0.0108%" height="15" fill="rgb(247,173,49)" fg:x="4016" fg:w="5"/><text x="8.9209%" y="591.50"></text></g><g><title>zend_call_function (53 samples, 0.11%)</title><rect x="8.6860%" y="581" width="0.1144%" height="15" fill="rgb(224,114,35)" fg:x="4023" fg:w="53"/><text x="8.9360%" y="591.50"></text></g><g><title>zend_call_known_function (122 samples, 0.26%)</title><rect x="8.8004%" y="581" width="0.2634%" height="15" fill="rgb(245,159,27)" fg:x="4076" fg:w="122"/><text x="9.0504%" y="591.50"></text></g><g><title>zend_hash_do_resize (37 samples, 0.08%)</title><rect x="9.0725%" y="581" width="0.0799%" height="15" fill="rgb(245,172,44)" fg:x="4202" fg:w="37"/><text x="9.3225%" y="591.50"></text></g><g><title>zend_hash_find (11 samples, 0.02%)</title><rect x="9.1523%" y="581" width="0.0237%" height="15" fill="rgb(236,23,11)" fg:x="4239" fg:w="11"/><text x="9.4023%" y="591.50"></text></g><g><title>zend_hash_func (67 samples, 0.14%)</title><rect x="9.1761%" y="581" width="0.1447%" height="15" fill="rgb(205,117,38)" fg:x="4250" fg:w="67"/><text x="9.4261%" y="591.50"></text></g><g><title>zend_hash_real_init_mixed (27 samples, 0.06%)</title><rect x="9.3208%" y="581" width="0.0583%" height="15" fill="rgb(237,72,25)" fg:x="4317" fg:w="27"/><text x="9.5708%" y="591.50"></text></g><g><title>zend_hash_real_init_mixed_ex (5 samples, 0.01%)</title><rect x="9.3683%" y="565" width="0.0108%" height="15" fill="rgb(244,70,9)" fg:x="4339" fg:w="5"/><text x="9.6183%" y="575.50"></text></g><g><title>zend_hash_rehash (41 samples, 0.09%)</title><rect x="9.3790%" y="581" width="0.0885%" height="15" fill="rgb(217,125,39)" fg:x="4344" fg:w="41"/><text x="9.6290%" y="591.50"></text></g><g><title>zend_hash_str_update (162 samples, 0.35%)</title><rect x="9.4676%" y="581" width="0.3498%" height="15" fill="rgb(235,36,10)" fg:x="4385" fg:w="162"/><text x="9.7176%" y="591.50"></text></g><g><title>_zend_hash_str_add_or_update_i (47 samples, 0.10%)</title><rect x="9.7159%" y="565" width="0.1015%" height="15" fill="rgb(251,123,47)" fg:x="4500" fg:w="47"/><text x="9.9659%" y="575.50"></text></g><g><title>zend_string_init (36 samples, 0.08%)</title><rect x="9.7396%" y="549" width="0.0777%" height="15" fill="rgb(221,13,13)" fg:x="4511" fg:w="36"/><text x="9.9896%" y="559.50"></text></g><g><title>zend_string_alloc (15 samples, 0.03%)</title><rect x="9.7850%" y="533" width="0.0324%" height="15" fill="rgb(238,131,9)" fg:x="4532" fg:w="15"/><text x="10.0350%" y="543.50"></text></g><g><title>zend_mm_alloc_pages (6 samples, 0.01%)</title><rect x="9.8195%" y="581" width="0.0130%" height="15" fill="rgb(211,50,8)" fg:x="4548" fg:w="6"/><text x="10.0695%" y="591.50"></text></g><g><title>zend_mm_free_pages (108 samples, 0.23%)</title><rect x="9.8325%" y="581" width="0.2332%" height="15" fill="rgb(245,182,24)" fg:x="4554" fg:w="108"/><text x="10.0825%" y="591.50"></text></g><g><title>zend_object_std_dtor (42 samples, 0.09%)</title><rect x="10.0656%" y="581" width="0.0907%" height="15" fill="rgb(242,14,37)" fg:x="4662" fg:w="42"/><text x="10.3156%" y="591.50"></text></g><g><title>zend_object_std_init (16 samples, 0.03%)</title><rect x="10.1563%" y="581" width="0.0345%" height="15" fill="rgb(246,228,12)" fg:x="4704" fg:w="16"/><text x="10.4063%" y="591.50"></text></g><g><title>zend_objects_destroy_object (30 samples, 0.06%)</title><rect x="10.1909%" y="581" width="0.0648%" height="15" fill="rgb(213,55,15)" fg:x="4720" fg:w="30"/><text x="10.4409%" y="591.50"></text></g><g><title>zend_objects_store_del (36 samples, 0.08%)</title><rect x="10.2556%" y="581" width="0.0777%" height="15" fill="rgb(209,9,3)" fg:x="4750" fg:w="36"/><text x="10.5056%" y="591.50"></text></g><g><title>zend_read_property (8 samples, 0.02%)</title><rect x="10.3355%" y="581" width="0.0173%" height="15" fill="rgb(230,59,30)" fg:x="4787" fg:w="8"/><text x="10.5855%" y="591.50"></text></g><g><title>zend_read_property_ex (14 samples, 0.03%)</title><rect x="10.3528%" y="581" width="0.0302%" height="15" fill="rgb(209,121,21)" fg:x="4795" fg:w="14"/><text x="10.6028%" y="591.50"></text></g><g><title>zend_std_read_property (89 samples, 0.19%)</title><rect x="10.3830%" y="581" width="0.1922%" height="15" fill="rgb(220,109,13)" fg:x="4809" fg:w="89"/><text x="10.6330%" y="591.50"></text></g><g><title>zend_get_property_offset (12 samples, 0.03%)</title><rect x="10.5493%" y="565" width="0.0259%" height="15" fill="rgb(232,18,1)" fg:x="4886" fg:w="12"/><text x="10.7993%" y="575.50"></text></g><g><title>zend_string_hash_func (76 samples, 0.16%)</title><rect x="10.5752%" y="581" width="0.1641%" height="15" fill="rgb(215,41,42)" fg:x="4898" fg:w="76"/><text x="10.8252%" y="591.50"></text></g><g><title>zim_swoole_http_response_end (14 samples, 0.03%)</title><rect x="10.7457%" y="581" width="0.0302%" height="15" fill="rgb(224,123,36)" fg:x="4977" fg:w="14"/><text x="10.9957%" y="591.50"></text></g><g><title>[anon] (3,782 samples, 8.17%)</title><rect x="2.6254%" y="597" width="8.1656%" height="15" fill="rgb(240,125,3)" fg:x="1216" fg:w="3782"/><text x="2.8754%" y="607.50">[anon]</text></g><g><title>~Context (6 samples, 0.01%)</title><rect x="10.7781%" y="581" width="0.0130%" height="15" fill="rgb(205,98,50)" fg:x="4992" fg:w="6"/><text x="11.0281%" y="591.50"></text></g><g><title>Context (7 samples, 0.02%)</title><rect x="10.7911%" y="581" width="0.0151%" height="15" fill="rgb(205,185,37)" fg:x="4998" fg:w="7"/><text x="11.0411%" y="591.50"></text></g><g><title>add_assoc_string_ex (13 samples, 0.03%)</title><rect x="10.8386%" y="581" width="0.0281%" height="15" fill="rgb(238,207,15)" fg:x="5020" fg:w="13"/><text x="11.0886%" y="591.50"></text></g><g><title>php_url_decode (5 samples, 0.01%)</title><rect x="10.8796%" y="581" width="0.0108%" height="15" fill="rgb(213,199,42)" fg:x="5039" fg:w="5"/><text x="11.1296%" y="591.50"></text></g><g><title>[swoole-cli-mimalloc] (53 samples, 0.11%)</title><rect x="10.7911%" y="597" width="0.1144%" height="15" fill="rgb(235,201,11)" fg:x="4998" fg:w="53"/><text x="11.0411%" y="607.50"></text></g><g><title>__clock_gettime (754 samples, 1.63%)</title><rect x="10.9142%" y="581" width="1.6279%" height="15" fill="rgb(207,46,11)" fg:x="5055" fg:w="754"/><text x="11.1642%" y="591.50"></text></g><g><title>__vdso_clock_gettime (710 samples, 1.53%)</title><rect x="11.0092%" y="565" width="1.5329%" height="15" fill="rgb(241,35,35)" fg:x="5099" fg:w="710"/><text x="11.2592%" y="575.50"></text></g><g><title>[[vdso]] (6 samples, 0.01%)</title><rect x="12.5291%" y="549" width="0.0130%" height="15" fill="rgb(243,32,47)" fg:x="5803" fg:w="6"/><text x="12.7791%" y="559.50"></text></g><g><title>__cxx_global_var_init.1 (5 samples, 0.01%)</title><rect x="12.5443%" y="581" width="0.0108%" height="15" fill="rgb(247,202,23)" fg:x="5810" fg:w="5"/><text x="12.7943%" y="591.50"></text></g><g><title>__fwritex (412 samples, 0.89%)</title><rect x="12.5551%" y="581" width="0.8895%" height="15" fill="rgb(219,102,11)" fg:x="5815" fg:w="412"/><text x="12.8051%" y="591.50"></text></g><g><title>__towrite (53 samples, 0.11%)</title><rect x="13.4489%" y="581" width="0.1144%" height="15" fill="rgb(243,110,44)" fg:x="6229" fg:w="53"/><text x="13.6989%" y="591.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.04%)</title><rect x="13.5633%" y="581" width="0.0410%" height="15" fill="rgb(222,74,54)" fg:x="6282" fg:w="19"/><text x="13.8133%" y="591.50"></text></g><g><title>_efree (77 samples, 0.17%)</title><rect x="13.6044%" y="581" width="0.1662%" height="15" fill="rgb(216,99,12)" fg:x="6301" fg:w="77"/><text x="13.8544%" y="591.50"></text></g><g><title>_emalloc (9 samples, 0.02%)</title><rect x="13.7706%" y="581" width="0.0194%" height="15" fill="rgb(226,22,26)" fg:x="6378" fg:w="9"/><text x="14.0206%" y="591.50"></text></g><g><title>_emalloc_large (70 samples, 0.15%)</title><rect x="13.7901%" y="581" width="0.1511%" height="15" fill="rgb(217,163,10)" fg:x="6387" fg:w="70"/><text x="14.0401%" y="591.50"></text></g><g><title>_estrndup (115 samples, 0.25%)</title><rect x="13.9412%" y="581" width="0.2483%" height="15" fill="rgb(213,25,53)" fg:x="6457" fg:w="115"/><text x="14.1912%" y="591.50"></text></g><g><title>_mi_clock_now (8 samples, 0.02%)</title><rect x="14.1895%" y="581" width="0.0173%" height="15" fill="rgb(252,105,26)" fg:x="6572" fg:w="8"/><text x="14.4395%" y="591.50"></text></g><g><title>_mi_malloc_generic (46 samples, 0.10%)</title><rect x="14.2068%" y="581" width="0.0993%" height="15" fill="rgb(220,39,43)" fg:x="6580" fg:w="46"/><text x="14.4568%" y="591.50"></text></g><g><title>_mi_segment_page_alloc (23 samples, 0.05%)</title><rect x="14.3082%" y="581" width="0.0497%" height="15" fill="rgb(229,68,48)" fg:x="6627" fg:w="23"/><text x="14.5582%" y="591.50"></text></g><g><title>add_assoc_long_ex (6 samples, 0.01%)</title><rect x="14.3579%" y="581" width="0.0130%" height="15" fill="rgb(252,8,32)" fg:x="6650" fg:w="6"/><text x="14.6079%" y="591.50"></text></g><g><title>add_assoc_string_ex (5 samples, 0.01%)</title><rect x="14.3708%" y="581" width="0.0108%" height="15" fill="rgb(223,20,43)" fg:x="6656" fg:w="5"/><text x="14.6208%" y="591.50"></text></g><g><title>zend_string_init (6 samples, 0.01%)</title><rect x="14.4248%" y="565" width="0.0130%" height="15" fill="rgb(229,81,49)" fg:x="6681" fg:w="6"/><text x="14.6748%" y="575.50"></text></g><g><title>add_assoc_stringl_ex (29 samples, 0.06%)</title><rect x="14.3816%" y="581" width="0.0626%" height="15" fill="rgb(236,28,36)" fg:x="6661" fg:w="29"/><text x="14.6316%" y="591.50"></text></g><g><title>zend_compile_expr_inner (5 samples, 0.01%)</title><rect x="14.4443%" y="261" width="0.0108%" height="15" fill="rgb(249,185,26)" fg:x="6690" fg:w="5"/><text x="14.6943%" y="271.50"></text></g><g><title>zend_compile_class_decl (11 samples, 0.02%)</title><rect x="14.4443%" y="389" width="0.0237%" height="15" fill="rgb(249,174,33)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="399.50"></text></g><g><title>zend_compile_stmt (11 samples, 0.02%)</title><rect x="14.4443%" y="373" width="0.0237%" height="15" fill="rgb(233,201,37)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="383.50"></text></g><g><title>zend_compile_stmt_list (11 samples, 0.02%)</title><rect x="14.4443%" y="357" width="0.0237%" height="15" fill="rgb(221,78,26)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="367.50"></text></g><g><title>zend_compile_stmt (11 samples, 0.02%)</title><rect x="14.4443%" y="341" width="0.0237%" height="15" fill="rgb(250,127,30)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="351.50"></text></g><g><title>zend_compile_func_decl (11 samples, 0.02%)</title><rect x="14.4443%" y="325" width="0.0237%" height="15" fill="rgb(230,49,44)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="335.50"></text></g><g><title>zend_compile_stmt (11 samples, 0.02%)</title><rect x="14.4443%" y="309" width="0.0237%" height="15" fill="rgb(229,67,23)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="319.50"></text></g><g><title>zend_compile_stmt_list (11 samples, 0.02%)</title><rect x="14.4443%" y="293" width="0.0237%" height="15" fill="rgb(249,83,47)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="303.50"></text></g><g><title>zend_compile_stmt (11 samples, 0.02%)</title><rect x="14.4443%" y="277" width="0.0237%" height="15" fill="rgb(215,43,3)" fg:x="6690" fg:w="11"/><text x="14.6943%" y="287.50"></text></g><g><title>zend_compile_top_stmt (13 samples, 0.03%)</title><rect x="14.4443%" y="421" width="0.0281%" height="15" fill="rgb(238,154,13)" fg:x="6690" fg:w="13"/><text x="14.6943%" y="431.50"></text></g><g><title>zend_compile_top_stmt (13 samples, 0.03%)</title><rect x="14.4443%" y="405" width="0.0281%" height="15" fill="rgb(219,56,2)" fg:x="6690" fg:w="13"/><text x="14.6943%" y="415.50"></text></g><g><title>do_cli (51 samples, 0.11%)</title><rect x="14.4443%" y="581" width="0.1101%" height="15" fill="rgb(233,0,4)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="591.50"></text></g><g><title>php_request_startup (51 samples, 0.11%)</title><rect x="14.4443%" y="565" width="0.1101%" height="15" fill="rgb(235,30,7)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="575.50"></text></g><g><title>zend_activate_modules (51 samples, 0.11%)</title><rect x="14.4443%" y="549" width="0.1101%" height="15" fill="rgb(250,79,13)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="559.50"></text></g><g><title>zm_activate_swoole (51 samples, 0.11%)</title><rect x="14.4443%" y="533" width="0.1101%" height="15" fill="rgb(211,146,34)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="543.50"></text></g><g><title>php_swoole_load_library (51 samples, 0.11%)</title><rect x="14.4443%" y="517" width="0.1101%" height="15" fill="rgb(228,22,38)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="527.50"></text></g><g><title>zend::eval (51 samples, 0.11%)</title><rect x="14.4443%" y="501" width="0.1101%" height="15" fill="rgb(235,168,5)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="511.50"></text></g><g><title>zend_eval_stringl (51 samples, 0.11%)</title><rect x="14.4443%" y="485" width="0.1101%" height="15" fill="rgb(221,155,16)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="495.50"></text></g><g><title>swoole_compile_string (51 samples, 0.11%)</title><rect x="14.4443%" y="469" width="0.1101%" height="15" fill="rgb(215,215,53)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="479.50"></text></g><g><title>compile_string (51 samples, 0.11%)</title><rect x="14.4443%" y="453" width="0.1101%" height="15" fill="rgb(223,4,10)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="463.50"></text></g><g><title>zend_compile (51 samples, 0.11%)</title><rect x="14.4443%" y="437" width="0.1101%" height="15" fill="rgb(234,103,6)" fg:x="6690" fg:w="51"/><text x="14.6943%" y="447.50"></text></g><g><title>zendparse (38 samples, 0.08%)</title><rect x="14.4723%" y="421" width="0.0820%" height="15" fill="rgb(227,97,0)" fg:x="6703" fg:w="38"/><text x="14.7223%" y="431.50"></text></g><g><title>zendlex (18 samples, 0.04%)</title><rect x="14.5155%" y="405" width="0.0389%" height="15" fill="rgb(234,150,53)" fg:x="6723" fg:w="18"/><text x="14.7655%" y="415.50"></text></g><g><title>lex_scan (17 samples, 0.04%)</title><rect x="14.5177%" y="389" width="0.0367%" height="15" fill="rgb(228,201,54)" fg:x="6724" fg:w="17"/><text x="14.7677%" y="399.50"></text></g><g><title>fmt_u (222 samples, 0.48%)</title><rect x="14.5587%" y="581" width="0.4793%" height="15" fill="rgb(222,22,37)" fg:x="6743" fg:w="222"/><text x="14.8087%" y="591.50"></text></g><g><title>free (10 samples, 0.02%)</title><rect x="15.0380%" y="581" width="0.0216%" height="15" fill="rgb(237,53,32)" fg:x="6965" fg:w="10"/><text x="15.2880%" y="591.50"></text></g><g><title>getint (16 samples, 0.03%)</title><rect x="15.0682%" y="581" width="0.0345%" height="15" fill="rgb(233,25,53)" fg:x="6979" fg:w="16"/><text x="15.3182%" y="591.50"></text></g><g><title>http_context_send_data (7 samples, 0.02%)</title><rect x="15.1028%" y="581" width="0.0151%" height="15" fill="rgb(210,40,34)" fg:x="6995" fg:w="7"/><text x="15.3528%" y="591.50"></text></g><g><title>http_request_message_complete (43 samples, 0.09%)</title><rect x="15.1179%" y="581" width="0.0928%" height="15" fill="rgb(241,220,44)" fg:x="7002" fg:w="43"/><text x="15.3679%" y="591.50"></text></g><g><title>http_request_on_header_value (30 samples, 0.06%)</title><rect x="15.2150%" y="581" width="0.0648%" height="15" fill="rgb(235,28,35)" fg:x="7047" fg:w="30"/><text x="15.4650%" y="591.50"></text></g><g><title>http_request_on_headers_complete (74 samples, 0.16%)</title><rect x="15.2798%" y="581" width="0.1598%" height="15" fill="rgb(210,56,17)" fg:x="7077" fg:w="74"/><text x="15.5298%" y="591.50"></text></g><g><title>zend_string_init (6 samples, 0.01%)</title><rect x="15.4266%" y="565" width="0.0130%" height="15" fill="rgb(224,130,29)" fg:x="7145" fg:w="6"/><text x="15.6766%" y="575.50"></text></g><g><title>http_request_on_path (28 samples, 0.06%)</title><rect x="15.4396%" y="581" width="0.0605%" height="15" fill="rgb(235,212,8)" fg:x="7151" fg:w="28"/><text x="15.6896%" y="591.50"></text></g><g><title>memchr (200 samples, 0.43%)</title><rect x="15.5065%" y="581" width="0.4318%" height="15" fill="rgb(223,33,50)" fg:x="7182" fg:w="200"/><text x="15.7565%" y="591.50"></text></g><g><title>memcpy (849 samples, 1.83%)</title><rect x="15.9383%" y="581" width="1.8331%" height="15" fill="rgb(219,149,13)" fg:x="7382" fg:w="849"/><text x="16.1883%" y="591.50">m..</text></g><g><title>memset (40 samples, 0.09%)</title><rect x="17.7714%" y="581" width="0.0864%" height="15" fill="rgb(250,156,29)" fg:x="8231" fg:w="40"/><text x="18.0214%" y="591.50"></text></g><g><title>mi_find_page (10 samples, 0.02%)</title><rect x="17.8578%" y="581" width="0.0216%" height="15" fill="rgb(216,193,19)" fg:x="8271" fg:w="10"/><text x="18.1078%" y="591.50"></text></g><g><title>mi_option_get (72 samples, 0.16%)</title><rect x="17.8794%" y="581" width="0.1555%" height="15" fill="rgb(216,135,14)" fg:x="8281" fg:w="72"/><text x="18.1294%" y="591.50"></text></g><g><title>mi_option_is_enabled (177 samples, 0.38%)</title><rect x="18.0348%" y="581" width="0.3822%" height="15" fill="rgb(241,47,5)" fg:x="8353" fg:w="177"/><text x="18.2848%" y="591.50"></text></g><g><title>mi_page_fresh_alloc (56 samples, 0.12%)</title><rect x="18.4170%" y="581" width="0.1209%" height="15" fill="rgb(233,42,35)" fg:x="8530" fg:w="56"/><text x="18.6670%" y="591.50"></text></g><g><title>mi_segment_commitx (31 samples, 0.07%)</title><rect x="18.5443%" y="581" width="0.0669%" height="15" fill="rgb(231,13,6)" fg:x="8589" fg:w="31"/><text x="18.7943%" y="591.50"></text></g><g><title>mi_segment_span_free (23 samples, 0.05%)</title><rect x="18.6113%" y="581" width="0.0497%" height="15" fill="rgb(207,181,40)" fg:x="8620" fg:w="23"/><text x="18.8613%" y="591.50"></text></g><g><title>mi_segment_span_free_coalesce (7 samples, 0.02%)</title><rect x="18.6609%" y="581" width="0.0151%" height="15" fill="rgb(254,173,49)" fg:x="8643" fg:w="7"/><text x="18.9109%" y="591.50"></text></g><g><title>mi_segments_page_alloc (35 samples, 0.08%)</title><rect x="18.6761%" y="581" width="0.0756%" height="15" fill="rgb(221,1,38)" fg:x="8650" fg:w="35"/><text x="18.9261%" y="591.50"></text></g><g><title>object_init_ex (32 samples, 0.07%)</title><rect x="18.7516%" y="581" width="0.0691%" height="15" fill="rgb(206,124,46)" fg:x="8685" fg:w="32"/><text x="19.0016%" y="591.50"></text></g><g><title>operator (7 samples, 0.02%)</title><rect x="18.8207%" y="581" width="0.0151%" height="15" fill="rgb(249,21,11)" fg:x="8717" fg:w="7"/><text x="19.0707%" y="591.50"></text></g><g><title>out (57 samples, 0.12%)</title><rect x="18.8358%" y="581" width="0.1231%" height="15" fill="rgb(222,201,40)" fg:x="8724" fg:w="57"/><text x="19.0858%" y="591.50"></text></g><g><title>pad (190 samples, 0.41%)</title><rect x="18.9589%" y="581" width="0.4102%" height="15" fill="rgb(235,61,29)" fg:x="8781" fg:w="190"/><text x="19.2089%" y="591.50"></text></g><g><title>pad (38 samples, 0.08%)</title><rect x="19.2871%" y="565" width="0.0820%" height="15" fill="rgb(219,207,3)" fg:x="8933" fg:w="38"/><text x="19.5371%" y="575.50"></text></g><g><title>std::operator!=&lt;void, swoole::Reactor*&gt; (18 samples, 0.04%)</title><rect x="19.9823%" y="405" width="0.0389%" height="15" fill="rgb(222,56,46)" fg:x="9255" fg:w="18"/><text x="20.2323%" y="415.50"></text></g><g><title>std::function&lt;void (swoole::Reactor*)&gt;::operator bool (18 samples, 0.04%)</title><rect x="19.9823%" y="389" width="0.0389%" height="15" fill="rgb(239,76,54)" fg:x="9255" fg:w="18"/><text x="20.2323%" y="399.50"></text></g><g><title>std::_Function_base::_M_empty (18 samples, 0.04%)</title><rect x="19.9823%" y="373" width="0.0389%" height="15" fill="rgb(231,124,27)" fg:x="9255" fg:w="18"/><text x="20.2323%" y="383.50"></text></g><g><title>std::_Rb_tree_increment (5 samples, 0.01%)</title><rect x="20.0255%" y="373" width="0.0108%" height="15" fill="rgb(249,195,6)" fg:x="9275" fg:w="5"/><text x="20.2755%" y="383.50"></text></g><g><title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt;::operator++ (22 samples, 0.05%)</title><rect x="20.0233%" y="389" width="0.0475%" height="15" fill="rgb(237,174,47)" fg:x="9274" fg:w="22"/><text x="20.2733%" y="399.50"></text></g><g><title>std::local_Rb_tree_increment (16 samples, 0.03%)</title><rect x="20.0363%" y="373" width="0.0345%" height="15" fill="rgb(206,201,31)" fg:x="9280" fg:w="16"/><text x="20.2863%" y="383.50"></text></g><g><title>std::local_Rb_tree_increment (11 samples, 0.02%)</title><rect x="20.0471%" y="357" width="0.0237%" height="15" fill="rgb(231,57,52)" fg:x="9285" fg:w="11"/><text x="20.2971%" y="367.50"></text></g><g><title>std::_Function_base::_M_empty (25 samples, 0.05%)</title><rect x="20.0708%" y="373" width="0.0540%" height="15" fill="rgb(248,177,22)" fg:x="9296" fg:w="25"/><text x="20.3208%" y="383.50"></text></g><g><title>std::_Function_handler&lt;void (swoole::Reactor*), swoole::Reactor::Reactor(int, swoole::Reactor::Type)::$_0&gt;::_M_invoke (15 samples, 0.03%)</title><rect x="20.1248%" y="373" width="0.0324%" height="15" fill="rgb(215,211,37)" fg:x="9321" fg:w="15"/><text x="20.3748%" y="383.50"></text></g><g><title>std::__invoke_r&lt;void, swoole::Reactor::Reactor(int, swoole::Reactor::Type)::$_0&amp;, swoole::Reactor*&gt; (15 samples, 0.03%)</title><rect x="20.1248%" y="357" width="0.0324%" height="15" fill="rgb(241,128,51)" fg:x="9321" fg:w="15"/><text x="20.3748%" y="367.50"></text></g><g><title>std::__invoke_impl&lt;void, swoole::Reactor::Reactor(int, swoole::Reactor::Type)::$_0&amp;, swoole::Reactor*&gt; (15 samples, 0.03%)</title><rect x="20.1248%" y="341" width="0.0324%" height="15" fill="rgb(227,165,31)" fg:x="9321" fg:w="15"/><text x="20.3748%" y="351.50"></text></g><g><title>operator (15 samples, 0.03%)</title><rect x="20.1248%" y="325" width="0.0324%" height="15" fill="rgb(228,167,24)" fg:x="9321" fg:w="15"/><text x="20.3748%" y="335.50"></text></g><g><title>std::_Function_handler&lt;void (swoole::Reactor*), swoole::Reactor::Reactor(int, swoole::Reactor::Type)::$_4&gt;::_M_invoke (6 samples, 0.01%)</title><rect x="20.1593%" y="373" width="0.0130%" height="15" fill="rgb(228,143,12)" fg:x="9337" fg:w="6"/><text x="20.4093%" y="383.50"></text></g><g><title>std::_Function_handler&lt;void (swoole::Reactor*), swoole::Timer::init_reactor(swoole::Reactor*)::$_0&gt;::_M_invoke (7 samples, 0.02%)</title><rect x="20.1723%" y="373" width="0.0151%" height="15" fill="rgb(249,149,8)" fg:x="9343" fg:w="7"/><text x="20.4223%" y="383.50"></text></g><g><title>swoole::Heap::top (10 samples, 0.02%)</title><rect x="20.2306%" y="357" width="0.0216%" height="15" fill="rgb(243,35,44)" fg:x="9370" fg:w="10"/><text x="20.4806%" y="367.50"></text></g><g><title>std::function&lt;void (swoole::Reactor*)&gt;::operator (97 samples, 0.21%)</title><rect x="20.0708%" y="389" width="0.2094%" height="15" fill="rgb(246,89,9)" fg:x="9296" fg:w="97"/><text x="20.3208%" y="399.50"></text></g><g><title>swoole::Timer::select (43 samples, 0.09%)</title><rect x="20.1874%" y="373" width="0.0928%" height="15" fill="rgb(233,213,13)" fg:x="9350" fg:w="43"/><text x="20.4374%" y="383.50"></text></g><g><title>swoole::Timer::get_relative_msec (13 samples, 0.03%)</title><rect x="20.2522%" y="357" width="0.0281%" height="15" fill="rgb(233,141,41)" fg:x="9380" fg:w="13"/><text x="20.5022%" y="367.50"></text></g><g><title>swoole::Reactor::execute_end_callbacks (129 samples, 0.28%)</title><rect x="20.0212%" y="405" width="0.2785%" height="15" fill="rgb(239,167,4)" fg:x="9273" fg:w="129"/><text x="20.2712%" y="415.50"></text></g><g><title>std::map&lt;int, std::function&lt;void (swoole::Reactor*)&gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt; &gt;::begin (9 samples, 0.02%)</title><rect x="20.2802%" y="389" width="0.0194%" height="15" fill="rgb(209,217,16)" fg:x="9393" fg:w="9"/><text x="20.5302%" y="399.50"></text></g><g><title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt; &gt;::begin (9 samples, 0.02%)</title><rect x="20.2802%" y="373" width="0.0194%" height="15" fill="rgb(219,88,35)" fg:x="9393" fg:w="9"/><text x="20.5302%" y="383.50"></text></g><g><title>swoole::ListenPort::is_dtls (42 samples, 0.09%)</title><rect x="21.2497%" y="389" width="0.0907%" height="15" fill="rgb(220,193,23)" fg:x="9842" fg:w="42"/><text x="21.4997%" y="399.50"></text></g><g><title>operator new (80 samples, 0.17%)</title><rect x="22.7632%" y="373" width="0.1727%" height="15" fill="rgb(230,90,52)" fg:x="10543" fg:w="80"/><text x="23.0132%" y="383.50"></text></g><g><title>_mi_malloc_generic (8 samples, 0.02%)</title><rect x="22.9186%" y="357" width="0.0173%" height="15" fill="rgb(252,106,19)" fg:x="10615" fg:w="8"/><text x="23.1686%" y="367.50"></text></g><g><title>free (24 samples, 0.05%)</title><rect x="22.9640%" y="357" width="0.0518%" height="15" fill="rgb(206,74,20)" fg:x="10636" fg:w="24"/><text x="23.2140%" y="367.50"></text></g><g><title>swoole::Server::destroy_http_request (41 samples, 0.09%)</title><rect x="22.9359%" y="373" width="0.0885%" height="15" fill="rgb(230,138,44)" fg:x="10623" fg:w="41"/><text x="23.1859%" y="383.50"></text></g><g><title>swoole::MessageBus::pass (211 samples, 0.46%)</title><rect x="24.4365%" y="341" width="0.4556%" height="15" fill="rgb(235,182,43)" fg:x="11318" fg:w="211"/><text x="24.6865%" y="351.50"></text></g><g><title>swoole::MessageBus::get_packet (36 samples, 0.08%)</title><rect x="25.6002%" y="325" width="0.0777%" height="15" fill="rgb(242,16,51)" fg:x="11857" fg:w="36"/><text x="25.8502%" y="335.50"></text></g><g><title>swoole::Server::get_connection_verify (89 samples, 0.19%)</title><rect x="25.6780%" y="325" width="0.1922%" height="15" fill="rgb(248,9,4)" fg:x="11893" fg:w="89"/><text x="25.9280%" y="335.50"></text></g><g><title>swoole::Server::get_connection_verify_no_ssl (88 samples, 0.19%)</title><rect x="25.6801%" y="309" width="0.1900%" height="15" fill="rgb(210,31,22)" fg:x="11894" fg:w="88"/><text x="25.9301%" y="319.50"></text></g><g><title>swoole::Server::get_session (17 samples, 0.04%)</title><rect x="25.8334%" y="293" width="0.0367%" height="15" fill="rgb(239,54,39)" fg:x="11965" fg:w="17"/><text x="26.0834%" y="303.50"></text></g><g><title>_zend_handle_numeric_str (13 samples, 0.03%)</title><rect x="26.3429%" y="245" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="12201" fg:w="13"/><text x="26.5929%" y="255.50"></text></g><g><title>zend_hash_str_find_bucket (19 samples, 0.04%)</title><rect x="26.5006%" y="213" width="0.0410%" height="15" fill="rgb(253,106,12)" fg:x="12274" fg:w="19"/><text x="26.7506%" y="223.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="26.6107%" y="149" width="0.0324%" height="15" fill="rgb(213,46,41)" fg:x="12325" fg:w="15"/><text x="26.8607%" y="159.50"></text></g><g><title>_zend_hash_str_add_or_update_i (125 samples, 0.27%)</title><rect x="26.3797%" y="229" width="0.2699%" height="15" fill="rgb(215,133,35)" fg:x="12218" fg:w="125"/><text x="26.6297%" y="239.50"></text></g><g><title>zend_string_init (50 samples, 0.11%)</title><rect x="26.5416%" y="213" width="0.1080%" height="15" fill="rgb(213,28,5)" fg:x="12293" fg:w="50"/><text x="26.7916%" y="223.50"></text></g><g><title>zend_string_alloc (24 samples, 0.05%)</title><rect x="26.5977%" y="197" width="0.0518%" height="15" fill="rgb(215,77,49)" fg:x="12319" fg:w="24"/><text x="26.8477%" y="207.50"></text></g><g><title>_emalloc (20 samples, 0.04%)</title><rect x="26.6064%" y="181" width="0.0432%" height="15" fill="rgb(248,100,22)" fg:x="12323" fg:w="20"/><text x="26.8564%" y="191.50"></text></g><g><title>zend_mm_alloc_heap (18 samples, 0.04%)</title><rect x="26.6107%" y="165" width="0.0389%" height="15" fill="rgb(208,67,9)" fg:x="12325" fg:w="18"/><text x="26.8607%" y="175.50"></text></g><g><title>add_assoc_long_ex (220 samples, 0.47%)</title><rect x="26.3214%" y="277" width="0.4750%" height="15" fill="rgb(219,133,21)" fg:x="12191" fg:w="220"/><text x="26.5714%" y="287.50"></text></g><g><title>zend_symtable_str_update (211 samples, 0.46%)</title><rect x="26.3408%" y="261" width="0.4556%" height="15" fill="rgb(246,46,29)" fg:x="12200" fg:w="211"/><text x="26.5908%" y="271.50"></text></g><g><title>zend_hash_str_update (197 samples, 0.43%)</title><rect x="26.3710%" y="245" width="0.4253%" height="15" fill="rgb(246,185,52)" fg:x="12214" fg:w="197"/><text x="26.6210%" y="255.50"></text></g><g><title>zend_hash_func (68 samples, 0.15%)</title><rect x="26.6495%" y="229" width="0.1468%" height="15" fill="rgb(252,136,11)" fg:x="12343" fg:w="68"/><text x="26.8995%" y="239.50"></text></g><g><title>zend_inline_hash_func (68 samples, 0.15%)</title><rect x="26.6495%" y="213" width="0.1468%" height="15" fill="rgb(219,138,53)" fg:x="12343" fg:w="68"/><text x="26.8995%" y="223.50"></text></g><g><title>zend_mm_alloc_small (5 samples, 0.01%)</title><rect x="26.8158%" y="197" width="0.0108%" height="15" fill="rgb(211,51,23)" fg:x="12420" fg:w="5"/><text x="27.0658%" y="207.50"></text></g><g><title>zend_string_init (8 samples, 0.02%)</title><rect x="26.8136%" y="261" width="0.0173%" height="15" fill="rgb(247,221,28)" fg:x="12419" fg:w="8"/><text x="27.0636%" y="271.50"></text></g><g><title>zend_string_alloc (8 samples, 0.02%)</title><rect x="26.8136%" y="245" width="0.0173%" height="15" fill="rgb(251,222,45)" fg:x="12419" fg:w="8"/><text x="27.0636%" y="255.50"></text></g><g><title>_emalloc (8 samples, 0.02%)</title><rect x="26.8136%" y="229" width="0.0173%" height="15" fill="rgb(217,162,53)" fg:x="12419" fg:w="8"/><text x="27.0636%" y="239.50"></text></g><g><title>zend_mm_alloc_heap (7 samples, 0.02%)</title><rect x="26.8158%" y="213" width="0.0151%" height="15" fill="rgb(229,93,14)" fg:x="12420" fg:w="7"/><text x="27.0658%" y="223.50"></text></g><g><title>_efree (23 samples, 0.05%)</title><rect x="26.9302%" y="197" width="0.0497%" height="15" fill="rgb(209,67,49)" fg:x="12473" fg:w="23"/><text x="27.1802%" y="207.50"></text></g><g><title>zend_mm_free_heap (20 samples, 0.04%)</title><rect x="26.9367%" y="181" width="0.0432%" height="15" fill="rgb(213,87,29)" fg:x="12476" fg:w="20"/><text x="27.1867%" y="191.50"></text></g><g><title>zend_mm_alloc_small (14 samples, 0.03%)</title><rect x="26.9820%" y="165" width="0.0302%" height="15" fill="rgb(205,151,52)" fg:x="12497" fg:w="14"/><text x="27.2320%" y="175.50"></text></g><g><title>zend_hash_do_resize (66 samples, 0.14%)</title><rect x="26.8892%" y="213" width="0.1425%" height="15" fill="rgb(253,215,39)" fg:x="12454" fg:w="66"/><text x="27.1392%" y="223.50"></text></g><g><title>_emalloc (24 samples, 0.05%)</title><rect x="26.9799%" y="197" width="0.0518%" height="15" fill="rgb(221,220,41)" fg:x="12496" fg:w="24"/><text x="27.2299%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (23 samples, 0.05%)</title><rect x="26.9820%" y="181" width="0.0497%" height="15" fill="rgb(218,133,21)" fg:x="12497" fg:w="23"/><text x="27.2320%" y="191.50"></text></g><g><title>zend_mm_small_size_to_bin (9 samples, 0.02%)</title><rect x="27.0123%" y="165" width="0.0194%" height="15" fill="rgb(221,193,43)" fg:x="12511" fg:w="9"/><text x="27.2623%" y="175.50"></text></g><g><title>zend_hash_rehash (272 samples, 0.59%)</title><rect x="27.0317%" y="213" width="0.5873%" height="15" fill="rgb(240,128,52)" fg:x="12520" fg:w="272"/><text x="27.2817%" y="223.50"></text></g><g><title>zend_hash_str_find_bucket (7 samples, 0.02%)</title><rect x="27.6190%" y="213" width="0.0151%" height="15" fill="rgb(253,114,12)" fg:x="12792" fg:w="7"/><text x="27.8690%" y="223.50"></text></g><g><title>zend_mm_alloc_small (13 samples, 0.03%)</title><rect x="27.6492%" y="149" width="0.0281%" height="15" fill="rgb(215,223,47)" fg:x="12806" fg:w="13"/><text x="27.8992%" y="159.50"></text></g><g><title>_zend_hash_str_add_or_update_i (389 samples, 0.84%)</title><rect x="26.8417%" y="229" width="0.8399%" height="15" fill="rgb(248,225,23)" fg:x="12432" fg:w="389"/><text x="27.0917%" y="239.50"></text></g><g><title>zend_string_init (22 samples, 0.05%)</title><rect x="27.6341%" y="213" width="0.0475%" height="15" fill="rgb(250,108,0)" fg:x="12799" fg:w="22"/><text x="27.8841%" y="223.50"></text></g><g><title>zend_string_alloc (18 samples, 0.04%)</title><rect x="27.6427%" y="197" width="0.0389%" height="15" fill="rgb(228,208,7)" fg:x="12803" fg:w="18"/><text x="27.8927%" y="207.50"></text></g><g><title>_emalloc (17 samples, 0.04%)</title><rect x="27.6449%" y="181" width="0.0367%" height="15" fill="rgb(244,45,10)" fg:x="12804" fg:w="17"/><text x="27.8949%" y="191.50"></text></g><g><title>zend_mm_alloc_heap (15 samples, 0.03%)</title><rect x="27.6492%" y="165" width="0.0324%" height="15" fill="rgb(207,125,25)" fg:x="12806" fg:w="15"/><text x="27.8992%" y="175.50"></text></g><g><title>add_assoc_string_ex (433 samples, 0.93%)</title><rect x="26.7964%" y="277" width="0.9349%" height="15" fill="rgb(210,195,18)" fg:x="12411" fg:w="433"/><text x="27.0464%" y="287.50"></text></g><g><title>zend_symtable_str_update (417 samples, 0.90%)</title><rect x="26.8309%" y="261" width="0.9003%" height="15" fill="rgb(249,80,12)" fg:x="12427" fg:w="417"/><text x="27.0809%" y="271.50"></text></g><g><title>zend_hash_str_update (413 samples, 0.89%)</title><rect x="26.8395%" y="245" width="0.8917%" height="15" fill="rgb(221,65,9)" fg:x="12431" fg:w="413"/><text x="27.0895%" y="255.50"></text></g><g><title>zend_hash_func (23 samples, 0.05%)</title><rect x="27.6816%" y="229" width="0.0497%" height="15" fill="rgb(235,49,36)" fg:x="12821" fg:w="23"/><text x="27.9316%" y="239.50"></text></g><g><title>zend_inline_hash_func (23 samples, 0.05%)</title><rect x="27.6816%" y="213" width="0.0497%" height="15" fill="rgb(225,32,20)" fg:x="12821" fg:w="23"/><text x="27.9316%" y="223.50"></text></g><g><title>_mi_page_malloc (11 samples, 0.02%)</title><rect x="29.3873%" y="165" width="0.0237%" height="15" fill="rgb(215,141,46)" fg:x="13611" fg:w="11"/><text x="29.6373%" y="175.50"></text></g><g><title>_mi_os_good_alloc_size (82 samples, 0.18%)</title><rect x="29.7780%" y="149" width="0.1770%" height="15" fill="rgb(250,160,47)" fg:x="13792" fg:w="82"/><text x="30.0280%" y="159.50"></text></g><g><title>mi_segment_delayed_decommit (23 samples, 0.05%)</title><rect x="31.6867%" y="101" width="0.0497%" height="15" fill="rgb(216,222,40)" fg:x="14676" fg:w="23"/><text x="31.9367%" y="111.50"></text></g><g><title>_mi_clock_now (8 samples, 0.02%)</title><rect x="31.7191%" y="85" width="0.0173%" height="15" fill="rgb(234,217,39)" fg:x="14691" fg:w="8"/><text x="31.9691%" y="95.50"></text></g><g><title>_mi_clock_now (14 samples, 0.03%)</title><rect x="33.2477%" y="69" width="0.0302%" height="15" fill="rgb(207,178,40)" fg:x="15399" fg:w="14"/><text x="33.4977%" y="79.50"></text></g><g><title>mi_commit_mask_all_set (68 samples, 0.15%)</title><rect x="33.2779%" y="69" width="0.1468%" height="15" fill="rgb(221,136,13)" fg:x="15413" fg:w="68"/><text x="33.5279%" y="79.50"></text></g><g><title>mi_commit_mask_any_set (13 samples, 0.03%)</title><rect x="33.4247%" y="69" width="0.0281%" height="15" fill="rgb(249,199,10)" fg:x="15481" fg:w="13"/><text x="33.6747%" y="79.50"></text></g><g><title>mi_option_get (5 samples, 0.01%)</title><rect x="33.4528%" y="69" width="0.0108%" height="15" fill="rgb(249,222,13)" fg:x="15494" fg:w="5"/><text x="33.7028%" y="79.50"></text></g><g><title>mi_segment_span_allocate (868 samples, 1.87%)</title><rect x="31.7363%" y="101" width="1.8741%" height="15" fill="rgb(244,185,38)" fg:x="14699" fg:w="868"/><text x="31.9863%" y="111.50">m..</text></g><g><title>mi_segment_commitx (290 samples, 0.63%)</title><rect x="32.9843%" y="85" width="0.6261%" height="15" fill="rgb(236,202,9)" fg:x="15277" fg:w="290"/><text x="33.2343%" y="95.50"></text></g><g><title>mi_segment_commit_mask (68 samples, 0.15%)</title><rect x="33.4636%" y="69" width="0.1468%" height="15" fill="rgb(250,229,37)" fg:x="15499" fg:w="68"/><text x="33.7136%" y="79.50"></text></g><g><title>_mi_clock_now (9 samples, 0.02%)</title><rect x="33.9516%" y="85" width="0.0194%" height="15" fill="rgb(206,174,23)" fg:x="15725" fg:w="9"/><text x="34.2016%" y="95.50"></text></g><g><title>mi_option_get (27 samples, 0.06%)</title><rect x="33.9710%" y="85" width="0.0583%" height="15" fill="rgb(211,33,43)" fg:x="15734" fg:w="27"/><text x="34.2210%" y="95.50"></text></g><g><title>_mi_segment_page_alloc (1,887 samples, 4.07%)</title><rect x="30.2876%" y="133" width="4.0742%" height="15" fill="rgb(245,58,50)" fg:x="14028" fg:w="1887"/><text x="30.5376%" y="143.50">_mi_..</text></g><g><title>mi_segments_page_alloc (1,840 samples, 3.97%)</title><rect x="30.3891%" y="117" width="3.9727%" height="15" fill="rgb(244,68,36)" fg:x="14075" fg:w="1840"/><text x="30.6391%" y="127.50">mi_s..</text></g><g><title>mi_segment_span_free (348 samples, 0.75%)</title><rect x="33.6104%" y="101" width="0.7514%" height="15" fill="rgb(232,229,15)" fg:x="15567" fg:w="348"/><text x="33.8604%" y="111.50"></text></g><g><title>mi_segment_commit_mask (154 samples, 0.33%)</title><rect x="34.0293%" y="85" width="0.3325%" height="15" fill="rgb(254,30,23)" fg:x="15761" fg:w="154"/><text x="34.2793%" y="95.50"></text></g><g><title>_mi_segment_page_start (222 samples, 0.48%)</title><rect x="34.3618%" y="133" width="0.4793%" height="15" fill="rgb(235,160,14)" fg:x="15915" fg:w="222"/><text x="34.6118%" y="143.50"></text></g><g><title>_mi_malloc_generic (2,767 samples, 5.97%)</title><rect x="28.9036%" y="181" width="5.9742%" height="15" fill="rgb(212,155,44)" fg:x="13387" fg:w="2767"/><text x="29.1536%" y="191.50">_mi_mall..</text></g><g><title>mi_find_page (2,532 samples, 5.47%)</title><rect x="29.4110%" y="165" width="5.4668%" height="15" fill="rgb(226,2,50)" fg:x="13622" fg:w="2532"/><text x="29.6610%" y="175.50">mi_find..</text></g><g><title>mi_page_fresh_alloc (2,280 samples, 4.92%)</title><rect x="29.9551%" y="149" width="4.9227%" height="15" fill="rgb(234,177,6)" fg:x="13874" fg:w="2280"/><text x="30.2051%" y="159.50">mi_pag..</text></g><g><title>mi_page_free_list_extend (17 samples, 0.04%)</title><rect x="34.8411%" y="133" width="0.0367%" height="15" fill="rgb(217,24,9)" fg:x="16137" fg:w="17"/><text x="35.0911%" y="143.50"></text></g><g><title>_mi_segment_page_start (8 samples, 0.02%)</title><rect x="34.8605%" y="117" width="0.0173%" height="15" fill="rgb(220,13,46)" fg:x="16146" fg:w="8"/><text x="35.1105%" y="127.50"></text></g><g><title>_Function_base (5 samples, 0.01%)</title><rect x="34.8886%" y="165" width="0.0108%" height="15" fill="rgb(239,221,27)" fg:x="16159" fg:w="5"/><text x="35.1386%" y="175.50"></text></g><g><title>function (15 samples, 0.03%)</title><rect x="34.8778%" y="181" width="0.0324%" height="15" fill="rgb(222,198,25)" fg:x="16154" fg:w="15"/><text x="35.1278%" y="191.50"></text></g><g><title>std::function&lt;void (void*)&gt;::operator bool (5 samples, 0.01%)</title><rect x="34.8994%" y="165" width="0.0108%" height="15" fill="rgb(211,99,13)" fg:x="16164" fg:w="5"/><text x="35.1494%" y="175.50"></text></g><g><title>std::_Function_base::_M_empty (5 samples, 0.01%)</title><rect x="34.8994%" y="149" width="0.0108%" height="15" fill="rgb(232,111,31)" fg:x="16164" fg:w="5"/><text x="35.1494%" y="159.50"></text></g><g><title>mi_malloc (28 samples, 0.06%)</title><rect x="34.9102%" y="181" width="0.0605%" height="15" fill="rgb(245,82,37)" fg:x="16169" fg:w="28"/><text x="35.1602%" y="191.50"></text></g><g><title>Context (2,850 samples, 6.15%)</title><rect x="28.8604%" y="197" width="6.1534%" height="15" fill="rgb(227,149,46)" fg:x="13367" fg:w="2850"/><text x="29.1104%" y="207.50">Context</text></g><g><title>sw_malloc (20 samples, 0.04%)</title><rect x="34.9706%" y="181" width="0.0432%" height="15" fill="rgb(218,36,50)" fg:x="16197" fg:w="20"/><text x="35.2206%" y="191.50"></text></g><g><title>function (45 samples, 0.10%)</title><rect x="35.0138%" y="197" width="0.0972%" height="15" fill="rgb(226,80,48)" fg:x="16217" fg:w="45"/><text x="35.2638%" y="207.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_manager (37 samples, 0.08%)</title><rect x="35.0311%" y="181" width="0.0799%" height="15" fill="rgb(238,224,15)" fg:x="16225" fg:w="37"/><text x="35.2811%" y="191.50"></text></g><g><title>std::_Function_base::_Base_manager&lt;void (*)(void*)&gt;::_M_manager (9 samples, 0.02%)</title><rect x="35.0915%" y="165" width="0.0194%" height="15" fill="rgb(241,136,10)" fg:x="16253" fg:w="9"/><text x="35.3415%" y="175.50"></text></g><g><title>std::_Function_base::_Base_manager&lt;void (*)(void*)&gt;::_M_init_functor&lt;void (* const&amp;)(void*)&gt; (9 samples, 0.02%)</title><rect x="35.0915%" y="149" width="0.0194%" height="15" fill="rgb(208,32,45)" fg:x="16253" fg:w="9"/><text x="35.3415%" y="159.50"></text></g><g><title>std::_Function_base::_Base_manager&lt;void (*)(void*)&gt;::_M_create&lt;void (* const&amp;)(void*)&gt; (9 samples, 0.02%)</title><rect x="35.0915%" y="133" width="0.0194%" height="15" fill="rgb(207,135,9)" fg:x="16253" fg:w="9"/><text x="35.3415%" y="143.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::allocate (91 samples, 0.20%)</title><rect x="35.1153%" y="133" width="0.1965%" height="15" fill="rgb(206,86,44)" fg:x="16264" fg:w="91"/><text x="35.3653%" y="143.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt;::allocate (91 samples, 0.20%)</title><rect x="35.1153%" y="117" width="0.1965%" height="15" fill="rgb(245,177,15)" fg:x="16264" fg:w="91"/><text x="35.3653%" y="127.50"></text></g><g><title>operator new (91 samples, 0.20%)</title><rect x="35.1153%" y="101" width="0.1965%" height="15" fill="rgb(206,64,50)" fg:x="16264" fg:w="91"/><text x="35.3653%" y="111.50"></text></g><g><title>_Scoped_node&lt;const std::piecewise_construct_t &amp;, std::tuple&lt;const long &amp;&gt;, std::tuple&lt;&gt; &gt; (92 samples, 0.20%)</title><rect x="35.1153%" y="165" width="0.1986%" height="15" fill="rgb(234,36,40)" fg:x="16264" fg:w="92"/><text x="35.3653%" y="175.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;long const&amp;&gt;, std::tuple&lt;&gt; &gt; (92 samples, 0.20%)</title><rect x="35.1153%" y="149" width="0.1986%" height="15" fill="rgb(213,64,8)" fg:x="16264" fg:w="92"/><text x="35.3653%" y="159.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (27 samples, 0.06%)</title><rect x="35.3139%" y="165" width="0.0583%" height="15" fill="rgb(210,75,36)" fg:x="16356" fg:w="27"/><text x="35.5639%" y="175.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (27 samples, 0.06%)</title><rect x="35.3139%" y="149" width="0.0583%" height="15" fill="rgb(229,88,21)" fg:x="16356" fg:w="27"/><text x="35.5639%" y="159.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator (27 samples, 0.06%)</title><rect x="35.3139%" y="133" width="0.0583%" height="15" fill="rgb(252,204,47)" fg:x="16356" fg:w="27"/><text x="35.5639%" y="143.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (24 samples, 0.05%)</title><rect x="35.3722%" y="165" width="0.0518%" height="15" fill="rgb(208,77,27)" fg:x="16383" fg:w="24"/><text x="35.6222%" y="175.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="35.3722%" y="149" width="0.0518%" height="15" fill="rgb(221,76,26)" fg:x="16383" fg:w="24"/><text x="35.6222%" y="159.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (29 samples, 0.06%)</title><rect x="35.4478%" y="149" width="0.0626%" height="15" fill="rgb(225,139,18)" fg:x="16418" fg:w="29"/><text x="35.6978%" y="159.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (132 samples, 0.28%)</title><rect x="35.5104%" y="149" width="0.2850%" height="15" fill="rgb(230,137,11)" fg:x="16447" fg:w="132"/><text x="35.7604%" y="159.50"></text></g><g><title>std::unordered_map&lt;long, swoole::Coroutine*, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt; &gt;::operator[] (318 samples, 0.69%)</title><rect x="35.1110%" y="197" width="0.6866%" height="15" fill="rgb(212,28,1)" fg:x="16262" fg:w="318"/><text x="35.3610%" y="207.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (318 samples, 0.69%)</title><rect x="35.1110%" y="181" width="0.6866%" height="15" fill="rgb(248,164,17)" fg:x="16262" fg:w="318"/><text x="35.3610%" y="191.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (173 samples, 0.37%)</title><rect x="35.4240%" y="165" width="0.3735%" height="15" fill="rgb(222,171,42)" fg:x="16407" fg:w="173"/><text x="35.6740%" y="175.50"></text></g><g><title>swoole::Timer::get_absolute_msec (59 samples, 0.13%)</title><rect x="35.7976%" y="197" width="0.1274%" height="15" fill="rgb(243,84,45)" fg:x="16580" fg:w="59"/><text x="36.0476%" y="207.50"></text></g><g><title>swoole::Timer::now (46 samples, 0.10%)</title><rect x="35.8256%" y="181" width="0.0993%" height="15" fill="rgb(252,49,23)" fg:x="16593" fg:w="46"/><text x="36.0756%" y="191.50"></text></g><g><title>std::chrono::_V2::steady_clock::now (49 samples, 0.11%)</title><rect x="35.9250%" y="181" width="0.1058%" height="15" fill="rgb(215,19,7)" fg:x="16639" fg:w="49"/><text x="36.1750%" y="191.50"></text></g><g><title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.02%)</title><rect x="36.0156%" y="165" width="0.0151%" height="15" fill="rgb(238,81,41)" fg:x="16681" fg:w="7"/><text x="36.2656%" y="175.50"></text></g><g><title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (5 samples, 0.01%)</title><rect x="36.0199%" y="149" width="0.0108%" height="15" fill="rgb(210,199,37)" fg:x="16683" fg:w="5"/><text x="36.2699%" y="159.50"></text></g><g><title>duration&lt;long int, std::ratio&lt;1&gt; &gt; (5 samples, 0.01%)</title><rect x="36.0199%" y="133" width="0.0108%" height="15" fill="rgb(244,192,49)" fg:x="16683" fg:w="5"/><text x="36.2699%" y="143.50"></text></g><g><title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (5 samples, 0.01%)</title><rect x="36.0199%" y="117" width="0.0108%" height="15" fill="rgb(226,211,11)" fg:x="16683" fg:w="5"/><text x="36.2699%" y="127.50"></text></g><g><title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (5 samples, 0.01%)</title><rect x="36.0199%" y="101" width="0.0108%" height="15" fill="rgb(236,162,54)" fg:x="16683" fg:w="5"/><text x="36.2699%" y="111.50"></text></g><g><title>swoole::time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (60 samples, 0.13%)</title><rect x="35.9250%" y="197" width="0.1295%" height="15" fill="rgb(220,229,9)" fg:x="16639" fg:w="60"/><text x="36.1750%" y="207.50"></text></g><g><title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11 samples, 0.02%)</title><rect x="36.0307%" y="181" width="0.0237%" height="15" fill="rgb(250,87,22)" fg:x="16688" fg:w="11"/><text x="36.2807%" y="191.50"></text></g><g><title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1l, 1000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11 samples, 0.02%)</title><rect x="36.0307%" y="165" width="0.0237%" height="15" fill="rgb(239,43,17)" fg:x="16688" fg:w="11"/><text x="36.2807%" y="175.50"></text></g><g><title>Coroutine (3,385 samples, 7.31%)</title><rect x="28.7806%" y="213" width="7.3085%" height="15" fill="rgb(231,177,25)" fg:x="13330" fg:w="3385"/><text x="29.0306%" y="223.50">Coroutine</text></g><g><title>~_Function_base (16 samples, 0.03%)</title><rect x="36.0545%" y="197" width="0.0345%" height="15" fill="rgb(219,179,1)" fg:x="16699" fg:w="16"/><text x="36.3045%" y="207.50"></text></g><g><title>_mi_page_malloc (9 samples, 0.02%)</title><rect x="36.2704%" y="181" width="0.0194%" height="15" fill="rgb(238,219,53)" fg:x="16799" fg:w="9"/><text x="36.5204%" y="191.50"></text></g><g><title>operator new (106 samples, 0.23%)</title><rect x="36.0890%" y="213" width="0.2289%" height="15" fill="rgb(232,167,36)" fg:x="16715" fg:w="106"/><text x="36.3390%" y="223.50"></text></g><g><title>_mi_malloc_generic (33 samples, 0.07%)</title><rect x="36.2467%" y="197" width="0.0712%" height="15" fill="rgb(244,19,51)" fg:x="16788" fg:w="33"/><text x="36.4967%" y="207.50"></text></g><g><title>mi_find_page (13 samples, 0.03%)</title><rect x="36.2898%" y="181" width="0.0281%" height="15" fill="rgb(224,6,22)" fg:x="16808" fg:w="13"/><text x="36.5398%" y="191.50"></text></g><g><title>free (30 samples, 0.06%)</title><rect x="36.3546%" y="181" width="0.0648%" height="15" fill="rgb(224,145,5)" fg:x="16838" fg:w="30"/><text x="36.6046%" y="191.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (11 samples, 0.02%)</title><rect x="36.5878%" y="117" width="0.0237%" height="15" fill="rgb(234,130,49)" fg:x="16946" fg:w="11"/><text x="36.8378%" y="127.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (7 samples, 0.02%)</title><rect x="36.5964%" y="101" width="0.0151%" height="15" fill="rgb(254,6,2)" fg:x="16950" fg:w="7"/><text x="36.8464%" y="111.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator (7 samples, 0.02%)</title><rect x="36.5964%" y="85" width="0.0151%" height="15" fill="rgb(208,96,46)" fg:x="16950" fg:w="7"/><text x="36.8464%" y="95.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_remove_bucket_begin (22 samples, 0.05%)</title><rect x="36.6331%" y="101" width="0.0475%" height="15" fill="rgb(239,3,39)" fg:x="16967" fg:w="22"/><text x="36.8831%" y="111.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (144 samples, 0.31%)</title><rect x="36.6115%" y="117" width="0.3109%" height="15" fill="rgb(233,210,1)" fg:x="16957" fg:w="144"/><text x="36.8615%" y="127.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_deallocate_node (111 samples, 0.24%)</title><rect x="36.6828%" y="101" width="0.2397%" height="15" fill="rgb(244,137,37)" fg:x="16990" fg:w="111"/><text x="36.9328%" y="111.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (111 samples, 0.24%)</title><rect x="36.6828%" y="85" width="0.2397%" height="15" fill="rgb(240,136,2)" fg:x="16990" fg:w="111"/><text x="36.9328%" y="95.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::deallocate (111 samples, 0.24%)</title><rect x="36.6828%" y="69" width="0.2397%" height="15" fill="rgb(239,18,37)" fg:x="16990" fg:w="111"/><text x="36.9328%" y="79.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt;::deallocate (111 samples, 0.24%)</title><rect x="36.6828%" y="53" width="0.2397%" height="15" fill="rgb(218,185,22)" fg:x="16990" fg:w="111"/><text x="36.9328%" y="63.50"></text></g><g><title>free (111 samples, 0.24%)</title><rect x="36.6828%" y="37" width="0.2397%" height="15" fill="rgb(225,218,4)" fg:x="16990" fg:w="111"/><text x="36.9328%" y="47.50"></text></g><g><title>std::unordered_map&lt;long, swoole::Coroutine*, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt; &gt;::erase (225 samples, 0.49%)</title><rect x="36.5878%" y="165" width="0.4858%" height="15" fill="rgb(230,182,32)" fg:x="16946" fg:w="225"/><text x="36.8378%" y="175.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (225 samples, 0.49%)</title><rect x="36.5878%" y="149" width="0.4858%" height="15" fill="rgb(242,56,43)" fg:x="16946" fg:w="225"/><text x="36.8378%" y="159.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (225 samples, 0.49%)</title><rect x="36.5878%" y="133" width="0.4858%" height="15" fill="rgb(233,99,24)" fg:x="16946" fg:w="225"/><text x="36.8378%" y="143.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (70 samples, 0.15%)</title><rect x="36.9224%" y="117" width="0.1511%" height="15" fill="rgb(234,209,42)" fg:x="17101" fg:w="70"/><text x="37.1724%" y="127.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (57 samples, 0.12%)</title><rect x="36.9505%" y="101" width="0.1231%" height="15" fill="rgb(227,7,12)" fg:x="17114" fg:w="57"/><text x="37.2005%" y="111.50"></text></g><g><title>std::equal_to&lt;long&gt;::operator (57 samples, 0.12%)</title><rect x="36.9505%" y="85" width="0.1231%" height="15" fill="rgb(245,203,43)" fg:x="17114" fg:w="57"/><text x="37.2005%" y="95.50"></text></g><g><title>swoole::PHPCoroutine::get_origin_context (13 samples, 0.03%)</title><rect x="37.1362%" y="149" width="0.0281%" height="15" fill="rgb(238,205,33)" fg:x="17200" fg:w="13"/><text x="37.3862%" y="159.50"></text></g><g><title>swoole::Coroutine::get_origin (11 samples, 0.02%)</title><rect x="37.1405%" y="133" width="0.0237%" height="15" fill="rgb(231,56,7)" fg:x="17202" fg:w="11"/><text x="37.3905%" y="143.50"></text></g><g><title>swoole::PHPCoroutine::restore_task (67 samples, 0.14%)</title><rect x="37.1643%" y="149" width="0.1447%" height="15" fill="rgb(244,186,29)" fg:x="17213" fg:w="67"/><text x="37.4143%" y="159.50"></text></g><g><title>swoole::PHPCoroutine::restore_vm_stack (66 samples, 0.14%)</title><rect x="37.1664%" y="133" width="0.1425%" height="15" fill="rgb(234,111,31)" fg:x="17214" fg:w="66"/><text x="37.4164%" y="143.50"></text></g><g><title>_efree (232 samples, 0.50%)</title><rect x="37.3478%" y="133" width="0.5009%" height="15" fill="rgb(241,149,10)" fg:x="17298" fg:w="232"/><text x="37.5978%" y="143.50"></text></g><g><title>zend_mm_free_heap (22 samples, 0.05%)</title><rect x="37.8012%" y="117" width="0.0475%" height="15" fill="rgb(249,206,44)" fg:x="17508" fg:w="22"/><text x="38.0512%" y="127.50"></text></g><g><title>zend_mm_free_large (5 samples, 0.01%)</title><rect x="37.8379%" y="101" width="0.0108%" height="15" fill="rgb(251,153,30)" fg:x="17525" fg:w="5"/><text x="38.0879%" y="111.50"></text></g><g><title>swoole::PHPCoroutine::vm_stack_destroy (376 samples, 0.81%)</title><rect x="37.3089%" y="149" width="0.8118%" height="15" fill="rgb(239,152,38)" fg:x="17280" fg:w="376"/><text x="37.5589%" y="159.50"></text></g><g><title>zend_mm_free_pages (126 samples, 0.27%)</title><rect x="37.8487%" y="133" width="0.2720%" height="15" fill="rgb(249,139,47)" fg:x="17530" fg:w="126"/><text x="38.0987%" y="143.50"></text></g><g><title>zend_mm_free_pages_ex (126 samples, 0.27%)</title><rect x="37.8487%" y="117" width="0.2720%" height="15" fill="rgb(244,64,35)" fg:x="17530" fg:w="126"/><text x="38.0987%" y="127.50"></text></g><g><title>zend_mm_bitset_reset_range (70 samples, 0.15%)</title><rect x="37.9696%" y="101" width="0.1511%" height="15" fill="rgb(216,46,15)" fg:x="17586" fg:w="70"/><text x="38.2196%" y="111.50"></text></g><g><title>swoole::PHPCoroutine::on_close (493 samples, 1.06%)</title><rect x="37.0736%" y="165" width="1.0644%" height="15" fill="rgb(250,74,19)" fg:x="17171" fg:w="493"/><text x="37.3236%" y="175.50"></text></g><g><title>swoole_isset_hook (8 samples, 0.02%)</title><rect x="38.1207%" y="149" width="0.0173%" height="15" fill="rgb(249,42,33)" fg:x="17656" fg:w="8"/><text x="38.3707%" y="159.50"></text></g><g><title>_mi_page_free (94 samples, 0.20%)</title><rect x="38.1553%" y="133" width="0.2030%" height="15" fill="rgb(242,149,17)" fg:x="17672" fg:w="94"/><text x="38.4053%" y="143.50"></text></g><g><title>_mi_page_retire (67 samples, 0.14%)</title><rect x="38.3582%" y="133" width="0.1447%" height="15" fill="rgb(244,29,21)" fg:x="17766" fg:w="67"/><text x="38.6082%" y="143.50"></text></g><g><title>_mi_stat_decrease (66 samples, 0.14%)</title><rect x="39.2780%" y="101" width="0.1425%" height="15" fill="rgb(220,130,37)" fg:x="18192" fg:w="66"/><text x="39.5280%" y="111.50"></text></g><g><title>mi_option_is_enabled (35 samples, 0.08%)</title><rect x="39.4205%" y="101" width="0.0756%" height="15" fill="rgb(211,67,2)" fg:x="18258" fg:w="35"/><text x="39.6705%" y="111.50"></text></g><g><title>mi_option_get (35 samples, 0.08%)</title><rect x="39.4205%" y="85" width="0.0756%" height="15" fill="rgb(235,68,52)" fg:x="18258" fg:w="35"/><text x="39.6705%" y="95.50"></text></g><g><title>_mi_clock_now (17 samples, 0.04%)</title><rect x="40.8779%" y="69" width="0.0367%" height="15" fill="rgb(246,142,3)" fg:x="18933" fg:w="17"/><text x="41.1279%" y="79.50"></text></g><g><title>mi_option_get (71 samples, 0.15%)</title><rect x="40.9146%" y="69" width="0.1533%" height="15" fill="rgb(241,25,7)" fg:x="18950" fg:w="71"/><text x="41.1646%" y="79.50"></text></g><g><title>_mi_segment_page_free (1,373 samples, 2.96%)</title><rect x="38.5029%" y="133" width="2.9644%" height="15" fill="rgb(242,119,39)" fg:x="17833" fg:w="1373"/><text x="38.7529%" y="143.50">_mi..</text></g><g><title>mi_segment_page_clear (1,342 samples, 2.90%)</title><rect x="38.5698%" y="117" width="2.8975%" height="15" fill="rgb(241,98,45)" fg:x="17864" fg:w="1342"/><text x="38.8198%" y="127.50">mi..</text></g><g><title>mi_segment_span_free_coalesce (913 samples, 1.97%)</title><rect x="39.4961%" y="101" width="1.9712%" height="15" fill="rgb(254,28,30)" fg:x="18293" fg:w="913"/><text x="39.7461%" y="111.50">m..</text></g><g><title>mi_segment_span_free (755 samples, 1.63%)</title><rect x="39.8372%" y="85" width="1.6301%" height="15" fill="rgb(241,142,54)" fg:x="18451" fg:w="755"/><text x="40.0872%" y="95.50"></text></g><g><title>mi_segment_commit_mask (185 samples, 0.40%)</title><rect x="41.0679%" y="69" width="0.3994%" height="15" fill="rgb(222,85,15)" fg:x="19021" fg:w="185"/><text x="41.3179%" y="79.50"></text></g><g><title>free (43 samples, 0.09%)</title><rect x="41.4673%" y="133" width="0.0928%" height="15" fill="rgb(210,85,47)" fg:x="19206" fg:w="43"/><text x="41.7173%" y="143.50"></text></g><g><title>sw_free (19 samples, 0.04%)</title><rect x="41.5602%" y="133" width="0.0410%" height="15" fill="rgb(224,206,25)" fg:x="19249" fg:w="19"/><text x="41.8102%" y="143.50"></text></g><g><title>swoole::Coroutine::close (2,489 samples, 5.37%)</title><rect x="36.4194%" y="181" width="5.3740%" height="15" fill="rgb(243,201,19)" fg:x="16868" fg:w="2489"/><text x="36.6694%" y="191.50">swoole:..</text></g><g><title>~Coroutine (1,693 samples, 3.66%)</title><rect x="38.1380%" y="165" width="3.6553%" height="15" fill="rgb(236,59,4)" fg:x="17664" fg:w="1693"/><text x="38.3880%" y="175.50">~Cor..</text></g><g><title>~Context (1,692 samples, 3.65%)</title><rect x="38.1402%" y="149" width="3.6532%" height="15" fill="rgb(254,179,45)" fg:x="17665" fg:w="1692"/><text x="38.3902%" y="159.50">~Con..</text></g><g><title>~_Function_base (89 samples, 0.19%)</title><rect x="41.6012%" y="133" width="0.1922%" height="15" fill="rgb(226,14,10)" fg:x="19268" fg:w="89"/><text x="41.8512%" y="143.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_manager (84 samples, 0.18%)</title><rect x="41.6120%" y="117" width="0.1814%" height="15" fill="rgb(244,27,41)" fg:x="19273" fg:w="84"/><text x="41.8620%" y="127.50"></text></g><g><title>swoole::Coroutine::check_end (2,543 samples, 5.49%)</title><rect x="36.3524%" y="197" width="5.4905%" height="15" fill="rgb(235,35,32)" fg:x="16837" fg:w="2543"/><text x="36.6024%" y="207.50">swoole:..</text></g><g><title>swoole::coroutine::Context::is_end (23 samples, 0.05%)</title><rect x="41.7933%" y="181" width="0.0497%" height="15" fill="rgb(218,68,31)" fg:x="19357" fg:w="23"/><text x="42.0433%" y="191.50"></text></g><g><title>swoole::Coroutine::create (6,053 samples, 13.07%)</title><rect x="28.7784%" y="229" width="13.0689%" height="15" fill="rgb(207,120,37)" fg:x="13329" fg:w="6053"/><text x="29.0284%" y="239.50">swoole::Coroutine::c..</text></g><g><title>swoole::Coroutine::run (2,561 samples, 5.53%)</title><rect x="36.3179%" y="213" width="5.5294%" height="15" fill="rgb(227,98,0)" fg:x="16821" fg:w="2561"/><text x="36.5679%" y="223.50">swoole:..</text></g><g><title>swoole::PHPCoroutine::save_task (58 samples, 0.13%)</title><rect x="41.8559%" y="229" width="0.1252%" height="15" fill="rgb(207,7,3)" fg:x="19386" fg:w="58"/><text x="42.1059%" y="239.50"></text></g><g><title>swoole::PHPCoroutine::save_vm_stack (58 samples, 0.13%)</title><rect x="41.8559%" y="213" width="0.1252%" height="15" fill="rgb(206,98,19)" fg:x="19386" fg:w="58"/><text x="42.1059%" y="223.50"></text></g><g><title>http_server_process_request (6,610 samples, 14.27%)</title><rect x="27.7312%" y="277" width="14.2715%" height="15" fill="rgb(217,5,26)" fg:x="12844" fg:w="6610"/><text x="27.9812%" y="287.50">http_server_process_re..</text></g><g><title>zend::function::call (6,557 samples, 14.16%)</title><rect x="27.8457%" y="261" width="14.1571%" height="15" fill="rgb(235,190,38)" fg:x="12897" fg:w="6557"/><text x="28.0957%" y="271.50">zend::function::call</text></g><g><title>swoole::PHPCoroutine::create (6,367 samples, 13.75%)</title><rect x="28.2559%" y="245" width="13.7469%" height="15" fill="rgb(247,86,24)" fg:x="13087" fg:w="6367"/><text x="28.5059%" y="255.50">swoole::PHPCoroutine:..</text></g><g><title>~_Function_base (10 samples, 0.02%)</title><rect x="41.9812%" y="229" width="0.0216%" height="15" fill="rgb(205,101,16)" fg:x="19444" fg:w="10"/><text x="42.2312%" y="239.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_manager (8 samples, 0.02%)</title><rect x="41.9855%" y="213" width="0.0173%" height="15" fill="rgb(246,168,33)" fg:x="19446" fg:w="8"/><text x="42.2355%" y="223.50"></text></g><g><title>zend_mm_alloc_small (9 samples, 0.02%)</title><rect x="42.1021%" y="197" width="0.0194%" height="15" fill="rgb(231,114,1)" fg:x="19500" fg:w="9"/><text x="42.3521%" y="207.50"></text></g><g><title>_emalloc (17 samples, 0.04%)</title><rect x="42.0934%" y="229" width="0.0367%" height="15" fill="rgb(207,184,53)" fg:x="19496" fg:w="17"/><text x="42.3434%" y="239.50"></text></g><g><title>zend_mm_alloc_heap (13 samples, 0.03%)</title><rect x="42.1021%" y="213" width="0.0281%" height="15" fill="rgb(224,95,51)" fg:x="19500" fg:w="13"/><text x="42.3521%" y="223.50"></text></g><g><title>php_swoole_get_recv_data (60 samples, 0.13%)</title><rect x="42.0028%" y="277" width="0.1295%" height="15" fill="rgb(212,188,45)" fg:x="19454" fg:w="60"/><text x="42.2528%" y="287.50"></text></g><g><title>zend_string_init (54 samples, 0.12%)</title><rect x="42.0157%" y="261" width="0.1166%" height="15" fill="rgb(223,154,38)" fg:x="19460" fg:w="54"/><text x="42.2657%" y="271.50"></text></g><g><title>zend_string_alloc (51 samples, 0.11%)</title><rect x="42.0222%" y="245" width="0.1101%" height="15" fill="rgb(251,22,52)" fg:x="19463" fg:w="51"/><text x="42.2722%" y="255.50"></text></g><g><title>php_swoole_server_get_fci_cache (158 samples, 0.34%)</title><rect x="42.1323%" y="277" width="0.3411%" height="15" fill="rgb(229,209,22)" fg:x="19514" fg:w="158"/><text x="42.3823%" y="287.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (68 samples, 0.15%)</title><rect x="42.3266%" y="261" width="0.1468%" height="15" fill="rgb(234,138,34)" fg:x="19604" fg:w="68"/><text x="42.5766%" y="271.50"></text></g><g><title>php_swoole_server_isset_callback (71 samples, 0.15%)</title><rect x="42.4734%" y="277" width="0.1533%" height="15" fill="rgb(212,95,11)" fg:x="19672" fg:w="71"/><text x="42.7234%" y="287.50"></text></g><g><title>swoole::ServerObject::isset_callback (71 samples, 0.15%)</title><rect x="42.4734%" y="261" width="0.1533%" height="15" fill="rgb(240,179,47)" fg:x="19672" fg:w="71"/><text x="42.7234%" y="271.50"></text></g><g><title>swoole::Server::get_connection_verify_no_ssl (19 samples, 0.04%)</title><rect x="42.6311%" y="277" width="0.0410%" height="15" fill="rgb(240,163,11)" fg:x="19745" fg:w="19"/><text x="42.8811%" y="287.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (7 samples, 0.02%)</title><rect x="42.6721%" y="277" width="0.0151%" height="15" fill="rgb(236,37,12)" fg:x="19764" fg:w="7"/><text x="42.9221%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10 samples, 0.02%)</title><rect x="42.9182%" y="213" width="0.0216%" height="15" fill="rgb(232,164,16)" fg:x="19878" fg:w="10"/><text x="43.1682%" y="223.50"></text></g><g><title>std::char_traits&lt;char&gt;::assign (8 samples, 0.02%)</title><rect x="42.9225%" y="197" width="0.0173%" height="15" fill="rgb(244,205,15)" fg:x="19880" fg:w="8"/><text x="43.1725%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.03%)</title><rect x="42.9398%" y="213" width="0.0302%" height="15" fill="rgb(223,117,47)" fg:x="19888" fg:w="14"/><text x="43.1898%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (139 samples, 0.30%)</title><rect x="42.8038%" y="261" width="0.3001%" height="15" fill="rgb(244,107,35)" fg:x="19825" fg:w="139"/><text x="43.0538%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (139 samples, 0.30%)</title><rect x="42.8038%" y="245" width="0.3001%" height="15" fill="rgb(205,140,8)" fg:x="19825" fg:w="139"/><text x="43.0538%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (139 samples, 0.30%)</title><rect x="42.8038%" y="229" width="0.3001%" height="15" fill="rgb(228,84,46)" fg:x="19825" fg:w="139"/><text x="43.0538%" y="239.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (57 samples, 0.12%)</title><rect x="42.9808%" y="213" width="0.1231%" height="15" fill="rgb(254,188,9)" fg:x="19907" fg:w="57"/><text x="43.2308%" y="223.50"></text></g><g><title>std::shared_ptr&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (53 samples, 0.11%)</title><rect x="43.1039%" y="261" width="0.1144%" height="15" fill="rgb(206,112,54)" fg:x="19964" fg:w="53"/><text x="43.3539%" y="271.50"></text></g><g><title>std::__shared_ptr&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::operator= (53 samples, 0.11%)</title><rect x="43.1039%" y="245" width="0.1144%" height="15" fill="rgb(216,84,49)" fg:x="19964" fg:w="53"/><text x="43.3539%" y="255.50"></text></g><g><title>swoole::http::Context::init (269 samples, 0.58%)</title><rect x="42.6872%" y="277" width="0.5808%" height="15" fill="rgb(214,194,35)" fg:x="19771" fg:w="269"/><text x="42.9372%" y="287.50"></text></g><g><title>swoole::http::Context::bind (23 samples, 0.05%)</title><rect x="43.2183%" y="261" width="0.0497%" height="15" fill="rgb(249,28,3)" fg:x="20017" fg:w="23"/><text x="43.4683%" y="271.50"></text></g><g><title>swoole::http::Context::parse (21 samples, 0.05%)</title><rect x="43.2680%" y="277" width="0.0453%" height="15" fill="rgb(222,56,52)" fg:x="20040" fg:w="21"/><text x="43.5180%" y="287.50"></text></g><g><title>swoole::network::Address::get_ip (16 samples, 0.03%)</title><rect x="43.3133%" y="277" width="0.0345%" height="15" fill="rgb(245,217,50)" fg:x="20061" fg:w="16"/><text x="43.5633%" y="287.50"></text></g><g><title>swoole::network::Address::get_addr (9 samples, 0.02%)</title><rect x="43.3284%" y="261" width="0.0194%" height="15" fill="rgb(213,201,24)" fg:x="20068" fg:w="9"/><text x="43.5784%" y="271.50"></text></g><g><title>swoole::network::Address::get_port (67 samples, 0.14%)</title><rect x="43.3479%" y="277" width="0.1447%" height="15" fill="rgb(248,116,28)" fg:x="20077" fg:w="67"/><text x="43.5979%" y="287.50"></text></g><g><title>Context (5 samples, 0.01%)</title><rect x="43.5595%" y="261" width="0.0108%" height="15" fill="rgb(219,72,43)" fg:x="20175" fg:w="5"/><text x="43.8095%" y="271.50"></text></g><g><title>object_properties_init (258 samples, 0.56%)</title><rect x="43.6717%" y="213" width="0.5570%" height="15" fill="rgb(209,138,14)" fg:x="20227" fg:w="258"/><text x="43.9217%" y="223.50"></text></g><g><title>_object_properties_init (258 samples, 0.56%)</title><rect x="43.6717%" y="197" width="0.5570%" height="15" fill="rgb(222,18,33)" fg:x="20227" fg:w="258"/><text x="43.9217%" y="207.50"></text></g><g><title>zend_class_default_properties_table (10 samples, 0.02%)</title><rect x="44.2072%" y="181" width="0.0216%" height="15" fill="rgb(213,199,7)" fg:x="20475" fg:w="10"/><text x="44.4572%" y="191.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="44.4512%" y="165" width="0.0324%" height="15" fill="rgb(250,110,10)" fg:x="20588" fg:w="15"/><text x="44.7012%" y="175.50"></text></g><g><title>_emalloc (219 samples, 0.47%)</title><rect x="44.2309%" y="197" width="0.4728%" height="15" fill="rgb(248,123,6)" fg:x="20486" fg:w="219"/><text x="44.4809%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (118 samples, 0.25%)</title><rect x="44.4490%" y="181" width="0.2548%" height="15" fill="rgb(206,91,31)" fg:x="20587" fg:w="118"/><text x="44.6990%" y="191.50"></text></g><g><title>zend_mm_small_size_to_bin (102 samples, 0.22%)</title><rect x="44.4835%" y="165" width="0.2202%" height="15" fill="rgb(211,154,13)" fg:x="20603" fg:w="102"/><text x="44.7335%" y="175.50"></text></g><g><title>zend_object_alloc (223 samples, 0.48%)</title><rect x="44.2288%" y="213" width="0.4815%" height="15" fill="rgb(225,148,7)" fg:x="20485" fg:w="223"/><text x="44.4788%" y="223.50"></text></g><g><title>php_swoole_http_request_create_object (515 samples, 1.11%)</title><rect x="43.6631%" y="229" width="1.1119%" height="15" fill="rgb(220,160,43)" fg:x="20223" fg:w="515"/><text x="43.9131%" y="239.50"></text></g><g><title>zend_object_std_init (30 samples, 0.06%)</title><rect x="44.7103%" y="213" width="0.0648%" height="15" fill="rgb(213,52,39)" fg:x="20708" fg:w="30"/><text x="44.9603%" y="223.50"></text></g><g><title>_zend_object_std_init (30 samples, 0.06%)</title><rect x="44.7103%" y="197" width="0.0648%" height="15" fill="rgb(243,137,7)" fg:x="20708" fg:w="30"/><text x="44.9603%" y="207.50"></text></g><g><title>zend_objects_store_put (30 samples, 0.06%)</title><rect x="44.7103%" y="181" width="0.0648%" height="15" fill="rgb(230,79,13)" fg:x="20708" fg:w="30"/><text x="44.9603%" y="191.50"></text></g><g><title>object_properties_init (45 samples, 0.10%)</title><rect x="44.7880%" y="213" width="0.0972%" height="15" fill="rgb(247,105,23)" fg:x="20744" fg:w="45"/><text x="45.0380%" y="223.50"></text></g><g><title>_object_properties_init (44 samples, 0.09%)</title><rect x="44.7901%" y="197" width="0.0950%" height="15" fill="rgb(223,179,41)" fg:x="20745" fg:w="44"/><text x="45.0401%" y="207.50"></text></g><g><title>zend_class_default_properties_table (11 samples, 0.02%)</title><rect x="44.8614%" y="181" width="0.0237%" height="15" fill="rgb(218,9,34)" fg:x="20778" fg:w="11"/><text x="45.1114%" y="191.50"></text></g><g><title>zend_mm_alloc_small (8 samples, 0.02%)</title><rect x="44.8938%" y="165" width="0.0173%" height="15" fill="rgb(222,106,8)" fg:x="20793" fg:w="8"/><text x="45.1438%" y="175.50"></text></g><g><title>_emalloc (14 samples, 0.03%)</title><rect x="44.8851%" y="197" width="0.0302%" height="15" fill="rgb(211,220,0)" fg:x="20789" fg:w="14"/><text x="45.1351%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (10 samples, 0.02%)</title><rect x="44.8938%" y="181" width="0.0216%" height="15" fill="rgb(229,52,16)" fg:x="20793" fg:w="10"/><text x="45.1438%" y="191.50"></text></g><g><title>zend_object_alloc (19 samples, 0.04%)</title><rect x="44.8851%" y="213" width="0.0410%" height="15" fill="rgb(212,155,18)" fg:x="20789" fg:w="19"/><text x="45.1351%" y="223.50"></text></g><g><title>zend_object_properties_size (5 samples, 0.01%)</title><rect x="44.9154%" y="197" width="0.0108%" height="15" fill="rgb(242,21,14)" fg:x="20803" fg:w="5"/><text x="45.1654%" y="207.50"></text></g><g><title>object_init_ex (641 samples, 1.38%)</title><rect x="43.5703%" y="261" width="1.3840%" height="15" fill="rgb(222,19,48)" fg:x="20180" fg:w="641"/><text x="43.8203%" y="271.50"></text></g><g><title>_object_and_properties_init (641 samples, 1.38%)</title><rect x="43.5703%" y="245" width="1.3840%" height="15" fill="rgb(232,45,27)" fg:x="20180" fg:w="641"/><text x="43.8203%" y="255.50"></text></g><g><title>php_swoole_http_response_create_object (83 samples, 0.18%)</title><rect x="44.7750%" y="229" width="0.1792%" height="15" fill="rgb(249,103,42)" fg:x="20738" fg:w="83"/><text x="45.0250%" y="239.50"></text></g><g><title>zend_object_std_init (13 samples, 0.03%)</title><rect x="44.9262%" y="213" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="20808" fg:w="13"/><text x="45.1762%" y="223.50"></text></g><g><title>_zend_object_std_init (13 samples, 0.03%)</title><rect x="44.9262%" y="197" width="0.0281%" height="15" fill="rgb(252,33,42)" fg:x="20808" fg:w="13"/><text x="45.1762%" y="207.50"></text></g><g><title>zend_objects_store_put (9 samples, 0.02%)</title><rect x="44.9348%" y="181" width="0.0194%" height="15" fill="rgb(209,212,41)" fg:x="20812" fg:w="9"/><text x="45.1848%" y="191.50"></text></g><g><title>operator new (253 samples, 0.55%)</title><rect x="44.9542%" y="261" width="0.5462%" height="15" fill="rgb(207,154,6)" fg:x="20821" fg:w="253"/><text x="45.2042%" y="271.50"></text></g><g><title>_mi_malloc_generic (71 samples, 0.15%)</title><rect x="45.3472%" y="245" width="0.1533%" height="15" fill="rgb(223,64,47)" fg:x="21003" fg:w="71"/><text x="45.5972%" y="255.50"></text></g><g><title>mi_find_page (23 samples, 0.05%)</title><rect x="45.4508%" y="229" width="0.0497%" height="15" fill="rgb(211,161,38)" fg:x="21051" fg:w="23"/><text x="45.7008%" y="239.50"></text></g><g><title>php_swoole_http_request_set_context (21 samples, 0.05%)</title><rect x="45.5005%" y="261" width="0.0453%" height="15" fill="rgb(219,138,40)" fg:x="21074" fg:w="21"/><text x="45.7505%" y="271.50"></text></g><g><title>php_swoole_http_response_set_context (19 samples, 0.04%)</title><rect x="45.5458%" y="261" width="0.0410%" height="15" fill="rgb(241,228,46)" fg:x="21095" fg:w="19"/><text x="45.7958%" y="271.50"></text></g><g><title>_emalloc_56 (46 samples, 0.10%)</title><rect x="45.6818%" y="229" width="0.0993%" height="15" fill="rgb(223,209,38)" fg:x="21158" fg:w="46"/><text x="45.9318%" y="239.50"></text></g><g><title>zend_mm_alloc_small (20 samples, 0.04%)</title><rect x="45.7380%" y="213" width="0.0432%" height="15" fill="rgb(236,164,45)" fg:x="21184" fg:w="20"/><text x="45.9880%" y="223.50"></text></g><g><title>_zend_new_array_0 (86 samples, 0.19%)</title><rect x="45.6818%" y="245" width="0.1857%" height="15" fill="rgb(231,15,5)" fg:x="21158" fg:w="86"/><text x="45.9318%" y="255.50"></text></g><g><title>_zend_hash_init_int (40 samples, 0.09%)</title><rect x="45.7812%" y="229" width="0.0864%" height="15" fill="rgb(252,35,15)" fg:x="21204" fg:w="40"/><text x="46.0312%" y="239.50"></text></g><g><title>zend_gc_set_refcount (24 samples, 0.05%)</title><rect x="45.8157%" y="213" width="0.0518%" height="15" fill="rgb(248,181,18)" fg:x="21220" fg:w="24"/><text x="46.0657%" y="223.50"></text></g><g><title>zend_string_equal_content (44 samples, 0.09%)</title><rect x="46.0942%" y="149" width="0.0950%" height="15" fill="rgb(233,39,42)" fg:x="21349" fg:w="44"/><text x="46.3442%" y="159.50"></text></g><g><title>zend_string_equal_val (8 samples, 0.02%)</title><rect x="46.1719%" y="133" width="0.0173%" height="15" fill="rgb(238,110,33)" fg:x="21385" fg:w="8"/><text x="46.4219%" y="143.50"></text></g><g><title>zend_get_property_offset (154 samples, 0.33%)</title><rect x="45.9366%" y="197" width="0.3325%" height="15" fill="rgb(233,195,10)" fg:x="21276" fg:w="154"/><text x="46.1866%" y="207.50"></text></g><g><title>zend_hash_find (134 samples, 0.29%)</title><rect x="45.9798%" y="181" width="0.2893%" height="15" fill="rgb(254,105,3)" fg:x="21296" fg:w="134"/><text x="46.2298%" y="191.50"></text></g><g><title>zend_hash_find_bucket (134 samples, 0.29%)</title><rect x="45.9798%" y="165" width="0.2893%" height="15" fill="rgb(221,225,9)" fg:x="21296" fg:w="134"/><text x="46.2298%" y="175.50"></text></g><g><title>zend_string_hash_val (37 samples, 0.08%)</title><rect x="46.1892%" y="149" width="0.0799%" height="15" fill="rgb(224,227,45)" fg:x="21393" fg:w="37"/><text x="46.4392%" y="159.50"></text></g><g><title>zend_string_hash_func (35 samples, 0.08%)</title><rect x="46.1935%" y="133" width="0.0756%" height="15" fill="rgb(229,198,43)" fg:x="21395" fg:w="35"/><text x="46.4435%" y="143.50"></text></g><g><title>zend_hash_func (31 samples, 0.07%)</title><rect x="46.2022%" y="117" width="0.0669%" height="15" fill="rgb(206,209,35)" fg:x="21399" fg:w="31"/><text x="46.4522%" y="127.50"></text></g><g><title>zend_inline_hash_func (31 samples, 0.07%)</title><rect x="46.2022%" y="101" width="0.0669%" height="15" fill="rgb(245,195,53)" fg:x="21399" fg:w="31"/><text x="46.4522%" y="111.50"></text></g><g><title>zend_read_property_ex (185 samples, 0.40%)</title><rect x="45.8740%" y="229" width="0.3994%" height="15" fill="rgb(240,92,26)" fg:x="21247" fg:w="185"/><text x="46.1240%" y="239.50"></text></g><g><title>zend_std_read_property (179 samples, 0.39%)</title><rect x="45.8870%" y="213" width="0.3865%" height="15" fill="rgb(207,40,23)" fg:x="21253" fg:w="179"/><text x="46.1370%" y="223.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="46.2821%" y="165" width="0.0324%" height="15" fill="rgb(223,111,35)" fg:x="21436" fg:w="15"/><text x="46.5321%" y="175.50"></text></g><g><title>zend_string_init (26 samples, 0.06%)</title><rect x="46.2734%" y="229" width="0.0561%" height="15" fill="rgb(229,147,28)" fg:x="21432" fg:w="26"/><text x="46.5234%" y="239.50"></text></g><g><title>zend_string_alloc (26 samples, 0.06%)</title><rect x="46.2734%" y="213" width="0.0561%" height="15" fill="rgb(211,29,28)" fg:x="21432" fg:w="26"/><text x="46.5234%" y="223.50"></text></g><g><title>_emalloc (25 samples, 0.05%)</title><rect x="46.2756%" y="197" width="0.0540%" height="15" fill="rgb(228,72,33)" fg:x="21433" fg:w="25"/><text x="46.5256%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (22 samples, 0.05%)</title><rect x="46.2821%" y="181" width="0.0475%" height="15" fill="rgb(205,214,31)" fg:x="21436" fg:w="22"/><text x="46.5321%" y="191.50"></text></g><g><title>zend_mm_small_size_to_bin (7 samples, 0.02%)</title><rect x="46.3144%" y="165" width="0.0151%" height="15" fill="rgb(224,111,15)" fg:x="21451" fg:w="7"/><text x="46.5644%" y="175.50"></text></g><g><title>swoole_http_init_and_read_property (358 samples, 0.77%)</title><rect x="45.5868%" y="261" width="0.7730%" height="15" fill="rgb(253,21,26)" fg:x="21114" fg:w="358"/><text x="45.8368%" y="271.50"></text></g><g><title>zend_read_property (228 samples, 0.49%)</title><rect x="45.8675%" y="245" width="0.4923%" height="15" fill="rgb(245,139,43)" fg:x="21244" fg:w="228"/><text x="46.1175%" y="255.50"></text></g><g><title>zend_string_release_ex (14 samples, 0.03%)</title><rect x="46.3296%" y="229" width="0.0302%" height="15" fill="rgb(252,170,7)" fg:x="21458" fg:w="14"/><text x="46.5796%" y="239.50"></text></g><g><title>_efree (11 samples, 0.02%)</title><rect x="46.3360%" y="213" width="0.0237%" height="15" fill="rgb(231,118,14)" fg:x="21461" fg:w="11"/><text x="46.5860%" y="223.50"></text></g><g><title>zend_mm_free_heap (9 samples, 0.02%)</title><rect x="46.3404%" y="197" width="0.0194%" height="15" fill="rgb(238,83,0)" fg:x="21463" fg:w="9"/><text x="46.5904%" y="207.50"></text></g><g><title>zend_mm_free_small (5 samples, 0.01%)</title><rect x="46.3490%" y="181" width="0.0108%" height="15" fill="rgb(221,39,39)" fg:x="21467" fg:w="5"/><text x="46.5990%" y="191.50"></text></g><g><title>property_uses_strict_types (57 samples, 0.12%)</title><rect x="46.5044%" y="213" width="0.1231%" height="15" fill="rgb(222,119,46)" fg:x="21539" fg:w="57"/><text x="46.7544%" y="223.50"></text></g><g><title>zend_string_equal_content (64 samples, 0.14%)</title><rect x="47.0615%" y="165" width="0.1382%" height="15" fill="rgb(222,165,49)" fg:x="21797" fg:w="64"/><text x="47.3115%" y="175.50"></text></g><g><title>zend_string_equal_val (37 samples, 0.08%)</title><rect x="47.1198%" y="149" width="0.0799%" height="15" fill="rgb(219,113,52)" fg:x="21824" fg:w="37"/><text x="47.3698%" y="159.50"></text></g><g><title>zend_std_write_property (442 samples, 0.95%)</title><rect x="46.4202%" y="229" width="0.9543%" height="15" fill="rgb(214,7,15)" fg:x="21500" fg:w="442"/><text x="46.6702%" y="239.50"></text></g><g><title>zend_get_property_offset (344 samples, 0.74%)</title><rect x="46.6318%" y="213" width="0.7427%" height="15" fill="rgb(235,32,4)" fg:x="21598" fg:w="344"/><text x="46.8818%" y="223.50"></text></g><g><title>zend_hash_find (284 samples, 0.61%)</title><rect x="46.7614%" y="197" width="0.6132%" height="15" fill="rgb(238,90,54)" fg:x="21658" fg:w="284"/><text x="47.0114%" y="207.50"></text></g><g><title>zend_hash_find_bucket (277 samples, 0.60%)</title><rect x="46.7765%" y="181" width="0.5981%" height="15" fill="rgb(213,208,19)" fg:x="21665" fg:w="277"/><text x="47.0265%" y="191.50"></text></g><g><title>zend_string_hash_val (81 samples, 0.17%)</title><rect x="47.1997%" y="165" width="0.1749%" height="15" fill="rgb(233,156,4)" fg:x="21861" fg:w="81"/><text x="47.4497%" y="175.50"></text></g><g><title>zend_string_hash_func (80 samples, 0.17%)</title><rect x="47.2018%" y="149" width="0.1727%" height="15" fill="rgb(207,194,5)" fg:x="21862" fg:w="80"/><text x="47.4518%" y="159.50"></text></g><g><title>zend_hash_func (77 samples, 0.17%)</title><rect x="47.2083%" y="133" width="0.1662%" height="15" fill="rgb(206,111,30)" fg:x="21865" fg:w="77"/><text x="47.4583%" y="143.50"></text></g><g><title>zend_inline_hash_func (77 samples, 0.17%)</title><rect x="47.2083%" y="117" width="0.1662%" height="15" fill="rgb(243,70,54)" fg:x="21865" fg:w="77"/><text x="47.4583%" y="127.50"></text></g><g><title>zend_mm_alloc_small (13 samples, 0.03%)</title><rect x="47.3940%" y="165" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="21951" fg:w="13"/><text x="47.6440%" y="175.50"></text></g><g><title>zend_string_init (27 samples, 0.06%)</title><rect x="47.3746%" y="229" width="0.0583%" height="15" fill="rgb(219,106,18)" fg:x="21942" fg:w="27"/><text x="47.6246%" y="239.50"></text></g><g><title>zend_string_alloc (25 samples, 0.05%)</title><rect x="47.3789%" y="213" width="0.0540%" height="15" fill="rgb(244,222,10)" fg:x="21944" fg:w="25"/><text x="47.6289%" y="223.50"></text></g><g><title>_emalloc (24 samples, 0.05%)</title><rect x="47.3810%" y="197" width="0.0518%" height="15" fill="rgb(236,179,52)" fg:x="21945" fg:w="24"/><text x="47.6310%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (18 samples, 0.04%)</title><rect x="47.3940%" y="181" width="0.0389%" height="15" fill="rgb(213,23,39)" fg:x="21951" fg:w="18"/><text x="47.6440%" y="191.50"></text></g><g><title>zend_mm_small_size_to_bin (5 samples, 0.01%)</title><rect x="47.4221%" y="165" width="0.0108%" height="15" fill="rgb(238,48,10)" fg:x="21964" fg:w="5"/><text x="47.6721%" y="175.50"></text></g><g><title>_efree (54 samples, 0.12%)</title><rect x="47.4436%" y="213" width="0.1166%" height="15" fill="rgb(251,196,23)" fg:x="21974" fg:w="54"/><text x="47.6936%" y="223.50"></text></g><g><title>zend_mm_free_heap (51 samples, 0.11%)</title><rect x="47.4501%" y="197" width="0.1101%" height="15" fill="rgb(250,152,24)" fg:x="21977" fg:w="51"/><text x="47.7001%" y="207.50"></text></g><g><title>swoole_http_context_new (1,886 samples, 4.07%)</title><rect x="43.4925%" y="277" width="4.0720%" height="15" fill="rgb(209,150,17)" fg:x="20144" fg:w="1886"/><text x="43.7425%" y="287.50">swoo..</text></g><g><title>zend_update_property_long (558 samples, 1.20%)</title><rect x="46.3598%" y="261" width="1.2048%" height="15" fill="rgb(234,202,34)" fg:x="21472" fg:w="558"/><text x="46.6098%" y="271.50"></text></g><g><title>zend_update_property (543 samples, 1.17%)</title><rect x="46.3922%" y="245" width="1.1724%" height="15" fill="rgb(253,148,53)" fg:x="21487" fg:w="543"/><text x="46.6422%" y="255.50"></text></g><g><title>zend_string_release_ex (61 samples, 0.13%)</title><rect x="47.4329%" y="229" width="0.1317%" height="15" fill="rgb(218,129,16)" fg:x="21969" fg:w="61"/><text x="47.6829%" y="239.50"></text></g><g><title>http_request_message_complete (61 samples, 0.13%)</title><rect x="50.9586%" y="261" width="0.1317%" height="15" fill="rgb(216,85,19)" fg:x="23602" fg:w="61"/><text x="51.2086%" y="271.50"></text></g><g><title>http_request_on_header_field (26 samples, 0.06%)</title><rect x="51.0903%" y="261" width="0.0561%" height="15" fill="rgb(235,228,7)" fg:x="23663" fg:w="26"/><text x="51.3403%" y="271.50"></text></g><g><title>_efree (15 samples, 0.03%)</title><rect x="51.1853%" y="245" width="0.0324%" height="15" fill="rgb(245,175,0)" fg:x="23707" fg:w="15"/><text x="51.4353%" y="255.50"></text></g><g><title>zend_mm_free_heap (12 samples, 0.03%)</title><rect x="51.1918%" y="229" width="0.0259%" height="15" fill="rgb(208,168,36)" fg:x="23710" fg:w="12"/><text x="51.4418%" y="239.50"></text></g><g><title>zend_mm_free_small (7 samples, 0.02%)</title><rect x="51.2026%" y="213" width="0.0151%" height="15" fill="rgb(246,171,24)" fg:x="23715" fg:w="7"/><text x="51.4526%" y="223.50"></text></g><g><title>zend_string_init (21 samples, 0.05%)</title><rect x="51.2631%" y="229" width="0.0453%" height="15" fill="rgb(215,142,24)" fg:x="23743" fg:w="21"/><text x="51.5131%" y="239.50"></text></g><g><title>zend_string_alloc (21 samples, 0.05%)</title><rect x="51.2631%" y="213" width="0.0453%" height="15" fill="rgb(250,187,7)" fg:x="23743" fg:w="21"/><text x="51.5131%" y="223.50"></text></g><g><title>zend_hash_real_init_mixed (211 samples, 0.46%)</title><rect x="51.5826%" y="181" width="0.4556%" height="15" fill="rgb(228,66,33)" fg:x="23891" fg:w="211"/><text x="51.8326%" y="191.50"></text></g><g><title>zend_hash_real_init_mixed_ex (211 samples, 0.46%)</title><rect x="51.5826%" y="165" width="0.4556%" height="15" fill="rgb(234,215,21)" fg:x="23891" fg:w="211"/><text x="51.8326%" y="175.50"></text></g><g><title>_emalloc_320 (193 samples, 0.42%)</title><rect x="51.6215%" y="149" width="0.4167%" height="15" fill="rgb(222,191,20)" fg:x="23909" fg:w="193"/><text x="51.8715%" y="159.50"></text></g><g><title>zend_mm_alloc_small (14 samples, 0.03%)</title><rect x="52.0079%" y="133" width="0.0302%" height="15" fill="rgb(245,79,54)" fg:x="24088" fg:w="14"/><text x="52.2579%" y="143.50"></text></g><g><title>zend_mm_alloc_small (6 samples, 0.01%)</title><rect x="52.0641%" y="117" width="0.0130%" height="15" fill="rgb(240,10,37)" fg:x="24114" fg:w="6"/><text x="52.3141%" y="127.50"></text></g><g><title>_emalloc (12 samples, 0.03%)</title><rect x="52.0533%" y="149" width="0.0259%" height="15" fill="rgb(214,192,32)" fg:x="24109" fg:w="12"/><text x="52.3033%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (7 samples, 0.02%)</title><rect x="52.0641%" y="133" width="0.0151%" height="15" fill="rgb(209,36,54)" fg:x="24114" fg:w="7"/><text x="52.3141%" y="143.50"></text></g><g><title>_zend_hash_str_add_or_update_i (362 samples, 0.78%)</title><rect x="51.3170%" y="197" width="0.7816%" height="15" fill="rgb(220,10,11)" fg:x="23768" fg:w="362"/><text x="51.5670%" y="207.50"></text></g><g><title>zend_string_init (28 samples, 0.06%)</title><rect x="52.0382%" y="181" width="0.0605%" height="15" fill="rgb(221,106,17)" fg:x="24102" fg:w="28"/><text x="52.2882%" y="191.50"></text></g><g><title>zend_string_alloc (24 samples, 0.05%)</title><rect x="52.0468%" y="165" width="0.0518%" height="15" fill="rgb(251,142,44)" fg:x="24106" fg:w="24"/><text x="52.2968%" y="175.50"></text></g><g><title>zend_gc_set_refcount (9 samples, 0.02%)</title><rect x="52.0792%" y="149" width="0.0194%" height="15" fill="rgb(238,13,15)" fg:x="24121" fg:w="9"/><text x="52.3292%" y="159.50"></text></g><g><title>add_assoc_stringl_ex (420 samples, 0.91%)</title><rect x="51.2177%" y="245" width="0.9068%" height="15" fill="rgb(208,107,27)" fg:x="23722" fg:w="420"/><text x="51.4677%" y="255.50"></text></g><g><title>zend_symtable_str_update (378 samples, 0.82%)</title><rect x="51.3084%" y="229" width="0.8161%" height="15" fill="rgb(205,136,37)" fg:x="23764" fg:w="378"/><text x="51.5584%" y="239.50"></text></g><g><title>zend_hash_str_update (378 samples, 0.82%)</title><rect x="51.3084%" y="213" width="0.8161%" height="15" fill="rgb(250,205,27)" fg:x="23764" fg:w="378"/><text x="51.5584%" y="223.50"></text></g><g><title>zend_hash_func (12 samples, 0.03%)</title><rect x="52.0986%" y="197" width="0.0259%" height="15" fill="rgb(210,80,43)" fg:x="24130" fg:w="12"/><text x="52.3486%" y="207.50"></text></g><g><title>zend_inline_hash_func (12 samples, 0.03%)</title><rect x="52.0986%" y="181" width="0.0259%" height="15" fill="rgb(247,160,36)" fg:x="24130" fg:w="12"/><text x="52.3486%" y="191.50"></text></g><g><title>_emalloc (9 samples, 0.02%)</title><rect x="52.1289%" y="229" width="0.0194%" height="15" fill="rgb(234,13,49)" fg:x="24144" fg:w="9"/><text x="52.3789%" y="239.50"></text></g><g><title>http_request_on_header_value (834 samples, 1.80%)</title><rect x="51.1465%" y="261" width="1.8007%" height="15" fill="rgb(234,122,0)" fg:x="23689" fg:w="834"/><text x="51.3965%" y="271.50">h..</text></g><g><title>zend_str_tolower_dup (379 samples, 0.82%)</title><rect x="52.1289%" y="245" width="0.8183%" height="15" fill="rgb(207,146,38)" fg:x="24144" fg:w="379"/><text x="52.3789%" y="255.50"></text></g><g><title>zend_str_tolower_copy (370 samples, 0.80%)</title><rect x="52.1483%" y="229" width="0.7989%" height="15" fill="rgb(207,177,25)" fg:x="24153" fg:w="370"/><text x="52.3983%" y="239.50"></text></g><g><title>zend_str_tolower_impl (370 samples, 0.80%)</title><rect x="52.1483%" y="213" width="0.7989%" height="15" fill="rgb(211,178,42)" fg:x="24153" fg:w="370"/><text x="52.3983%" y="223.50"></text></g><g><title>_zend_hash_str_add_or_update_i (23 samples, 0.05%)</title><rect x="53.0681%" y="197" width="0.0497%" height="15" fill="rgb(230,69,54)" fg:x="24579" fg:w="23"/><text x="53.3181%" y="207.50"></text></g><g><title>zend_string_init (10 samples, 0.02%)</title><rect x="53.0961%" y="181" width="0.0216%" height="15" fill="rgb(214,135,41)" fg:x="24592" fg:w="10"/><text x="53.3461%" y="191.50"></text></g><g><title>zend_string_alloc (10 samples, 0.02%)</title><rect x="53.0961%" y="165" width="0.0216%" height="15" fill="rgb(237,67,25)" fg:x="24592" fg:w="10"/><text x="53.3461%" y="175.50"></text></g><g><title>_emalloc (10 samples, 0.02%)</title><rect x="53.0961%" y="149" width="0.0216%" height="15" fill="rgb(222,189,50)" fg:x="24592" fg:w="10"/><text x="53.3461%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (8 samples, 0.02%)</title><rect x="53.1004%" y="133" width="0.0173%" height="15" fill="rgb(245,148,34)" fg:x="24594" fg:w="8"/><text x="53.3504%" y="143.50"></text></g><g><title>zend_mm_small_size_to_bin (5 samples, 0.01%)</title><rect x="53.1069%" y="117" width="0.0108%" height="15" fill="rgb(222,29,6)" fg:x="24597" fg:w="5"/><text x="53.3569%" y="127.50"></text></g><g><title>add_assoc_double_ex (68 samples, 0.15%)</title><rect x="53.0616%" y="245" width="0.1468%" height="15" fill="rgb(221,189,43)" fg:x="24576" fg:w="68"/><text x="53.3116%" y="255.50"></text></g><g><title>zend_symtable_str_update (67 samples, 0.14%)</title><rect x="53.0637%" y="229" width="0.1447%" height="15" fill="rgb(207,36,27)" fg:x="24577" fg:w="67"/><text x="53.3137%" y="239.50"></text></g><g><title>zend_hash_str_update (66 samples, 0.14%)</title><rect x="53.0659%" y="213" width="0.1425%" height="15" fill="rgb(217,90,24)" fg:x="24578" fg:w="66"/><text x="53.3159%" y="223.50"></text></g><g><title>zend_hash_func (42 samples, 0.09%)</title><rect x="53.1177%" y="197" width="0.0907%" height="15" fill="rgb(224,66,35)" fg:x="24602" fg:w="42"/><text x="53.3677%" y="207.50"></text></g><g><title>zend_inline_hash_func (42 samples, 0.09%)</title><rect x="53.1177%" y="181" width="0.0907%" height="15" fill="rgb(221,13,50)" fg:x="24602" fg:w="42"/><text x="53.3677%" y="191.50"></text></g><g><title>_zend_hash_str_add_or_update_i (27 samples, 0.06%)</title><rect x="53.2300%" y="197" width="0.0583%" height="15" fill="rgb(236,68,49)" fg:x="24654" fg:w="27"/><text x="53.4800%" y="207.50"></text></g><g><title>zend_string_init (11 samples, 0.02%)</title><rect x="53.2645%" y="181" width="0.0237%" height="15" fill="rgb(229,146,28)" fg:x="24670" fg:w="11"/><text x="53.5145%" y="191.50"></text></g><g><title>zend_string_alloc (10 samples, 0.02%)</title><rect x="53.2667%" y="165" width="0.0216%" height="15" fill="rgb(225,31,38)" fg:x="24671" fg:w="10"/><text x="53.5167%" y="175.50"></text></g><g><title>_emalloc (7 samples, 0.02%)</title><rect x="53.2732%" y="149" width="0.0151%" height="15" fill="rgb(250,208,3)" fg:x="24674" fg:w="7"/><text x="53.5232%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (6 samples, 0.01%)</title><rect x="53.2753%" y="133" width="0.0130%" height="15" fill="rgb(246,54,23)" fg:x="24675" fg:w="6"/><text x="53.5253%" y="143.50"></text></g><g><title>add_assoc_long_ex (63 samples, 0.14%)</title><rect x="53.2084%" y="245" width="0.1360%" height="15" fill="rgb(243,76,11)" fg:x="24644" fg:w="63"/><text x="53.4584%" y="255.50"></text></g><g><title>zend_symtable_str_update (56 samples, 0.12%)</title><rect x="53.2235%" y="229" width="0.1209%" height="15" fill="rgb(245,21,50)" fg:x="24651" fg:w="56"/><text x="53.4735%" y="239.50"></text></g><g><title>zend_hash_str_update (55 samples, 0.12%)</title><rect x="53.2257%" y="213" width="0.1187%" height="15" fill="rgb(228,9,43)" fg:x="24652" fg:w="55"/><text x="53.4757%" y="223.50"></text></g><g><title>zend_hash_func (26 samples, 0.06%)</title><rect x="53.2883%" y="197" width="0.0561%" height="15" fill="rgb(208,100,47)" fg:x="24681" fg:w="26"/><text x="53.5383%" y="207.50"></text></g><g><title>zend_inline_hash_func (26 samples, 0.06%)</title><rect x="53.2883%" y="181" width="0.0561%" height="15" fill="rgb(232,26,8)" fg:x="24681" fg:w="26"/><text x="53.5383%" y="191.50"></text></g><g><title>zend_hash_str_find_bucket (17 samples, 0.04%)</title><rect x="53.3984%" y="181" width="0.0367%" height="15" fill="rgb(216,166,38)" fg:x="24732" fg:w="17"/><text x="53.6484%" y="191.50"></text></g><g><title>_zend_hash_str_add_or_update_i (34 samples, 0.07%)</title><rect x="53.3725%" y="197" width="0.0734%" height="15" fill="rgb(251,202,51)" fg:x="24720" fg:w="34"/><text x="53.6225%" y="207.50"></text></g><g><title>zend_string_init (5 samples, 0.01%)</title><rect x="53.4351%" y="181" width="0.0108%" height="15" fill="rgb(254,216,34)" fg:x="24749" fg:w="5"/><text x="53.6851%" y="191.50"></text></g><g><title>zend_string_alloc (5 samples, 0.01%)</title><rect x="53.4351%" y="165" width="0.0108%" height="15" fill="rgb(251,32,27)" fg:x="24749" fg:w="5"/><text x="53.6851%" y="175.50"></text></g><g><title>add_assoc_str_ex (70 samples, 0.15%)</title><rect x="53.3444%" y="245" width="0.1511%" height="15" fill="rgb(208,127,28)" fg:x="24707" fg:w="70"/><text x="53.5944%" y="255.50"></text></g><g><title>zend_symtable_str_update (59 samples, 0.13%)</title><rect x="53.3682%" y="229" width="0.1274%" height="15" fill="rgb(224,137,22)" fg:x="24718" fg:w="59"/><text x="53.6182%" y="239.50"></text></g><g><title>zend_hash_str_update (58 samples, 0.13%)</title><rect x="53.3703%" y="213" width="0.1252%" height="15" fill="rgb(254,70,32)" fg:x="24719" fg:w="58"/><text x="53.6203%" y="223.50"></text></g><g><title>zend_hash_func (23 samples, 0.05%)</title><rect x="53.4459%" y="197" width="0.0497%" height="15" fill="rgb(229,75,37)" fg:x="24754" fg:w="23"/><text x="53.6959%" y="207.50"></text></g><g><title>zend_inline_hash_func (23 samples, 0.05%)</title><rect x="53.4459%" y="181" width="0.0497%" height="15" fill="rgb(252,64,23)" fg:x="24754" fg:w="23"/><text x="53.6959%" y="191.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="53.6834%" y="165" width="0.0324%" height="15" fill="rgb(232,162,48)" fg:x="24864" fg:w="15"/><text x="53.9334%" y="175.50"></text></g><g><title>_emalloc (23 samples, 0.05%)</title><rect x="53.6726%" y="197" width="0.0497%" height="15" fill="rgb(246,160,12)" fg:x="24859" fg:w="23"/><text x="53.9226%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (18 samples, 0.04%)</title><rect x="53.6834%" y="181" width="0.0389%" height="15" fill="rgb(247,166,0)" fg:x="24864" fg:w="18"/><text x="53.9334%" y="191.50"></text></g><g><title>zend_string_init (64 samples, 0.14%)</title><rect x="53.5884%" y="229" width="0.1382%" height="15" fill="rgb(249,219,21)" fg:x="24820" fg:w="64"/><text x="53.8384%" y="239.50"></text></g><g><title>zend_string_alloc (28 samples, 0.06%)</title><rect x="53.6661%" y="213" width="0.0605%" height="15" fill="rgb(205,209,3)" fg:x="24856" fg:w="28"/><text x="53.9161%" y="223.50"></text></g><g><title>_zend_handle_numeric_str (27 samples, 0.06%)</title><rect x="53.7331%" y="213" width="0.0583%" height="15" fill="rgb(243,44,1)" fg:x="24887" fg:w="27"/><text x="53.9831%" y="223.50"></text></g><g><title>zend_hash_real_init_mixed (7 samples, 0.02%)</title><rect x="53.8950%" y="181" width="0.0151%" height="15" fill="rgb(206,159,16)" fg:x="24962" fg:w="7"/><text x="54.1450%" y="191.50"></text></g><g><title>zend_hash_real_init_mixed_ex (7 samples, 0.02%)</title><rect x="53.8950%" y="165" width="0.0151%" height="15" fill="rgb(244,77,30)" fg:x="24962" fg:w="7"/><text x="54.1450%" y="175.50"></text></g><g><title>zend_hash_str_find_bucket (17 samples, 0.04%)</title><rect x="53.9101%" y="181" width="0.0367%" height="15" fill="rgb(218,69,12)" fg:x="24969" fg:w="17"/><text x="54.1601%" y="191.50"></text></g><g><title>zend_mm_alloc_small (14 samples, 0.03%)</title><rect x="53.9554%" y="117" width="0.0302%" height="15" fill="rgb(212,87,7)" fg:x="24990" fg:w="14"/><text x="54.2054%" y="127.50"></text></g><g><title>_zend_hash_str_add_or_update_i (91 samples, 0.20%)</title><rect x="53.8000%" y="197" width="0.1965%" height="15" fill="rgb(245,114,25)" fg:x="24918" fg:w="91"/><text x="54.0500%" y="207.50"></text></g><g><title>zend_string_init (23 samples, 0.05%)</title><rect x="53.9468%" y="181" width="0.0497%" height="15" fill="rgb(210,61,42)" fg:x="24986" fg:w="23"/><text x="54.1968%" y="191.50"></text></g><g><title>zend_string_alloc (21 samples, 0.05%)</title><rect x="53.9511%" y="165" width="0.0453%" height="15" fill="rgb(211,52,33)" fg:x="24988" fg:w="21"/><text x="54.2011%" y="175.50"></text></g><g><title>_emalloc (21 samples, 0.05%)</title><rect x="53.9511%" y="149" width="0.0453%" height="15" fill="rgb(234,58,33)" fg:x="24988" fg:w="21"/><text x="54.2011%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (19 samples, 0.04%)</title><rect x="53.9554%" y="133" width="0.0410%" height="15" fill="rgb(220,115,36)" fg:x="24990" fg:w="19"/><text x="54.2054%" y="143.50"></text></g><g><title>zend_mm_small_size_to_bin (5 samples, 0.01%)</title><rect x="53.9857%" y="117" width="0.0108%" height="15" fill="rgb(243,153,54)" fg:x="25004" fg:w="5"/><text x="54.2357%" y="127.50"></text></g><g><title>add_assoc_string_ex (307 samples, 0.66%)</title><rect x="53.4956%" y="245" width="0.6628%" height="15" fill="rgb(251,47,18)" fg:x="24777" fg:w="307"/><text x="53.7456%" y="255.50"></text></g><g><title>zend_symtable_str_update (200 samples, 0.43%)</title><rect x="53.7266%" y="229" width="0.4318%" height="15" fill="rgb(242,102,42)" fg:x="24884" fg:w="200"/><text x="53.9766%" y="239.50"></text></g><g><title>zend_hash_str_update (170 samples, 0.37%)</title><rect x="53.7913%" y="213" width="0.3670%" height="15" fill="rgb(234,31,38)" fg:x="24914" fg:w="170"/><text x="54.0413%" y="223.50"></text></g><g><title>zend_hash_func (75 samples, 0.16%)</title><rect x="53.9965%" y="197" width="0.1619%" height="15" fill="rgb(221,117,51)" fg:x="25009" fg:w="75"/><text x="54.2465%" y="207.50"></text></g><g><title>zend_inline_hash_func (75 samples, 0.16%)</title><rect x="53.9965%" y="181" width="0.1619%" height="15" fill="rgb(212,20,18)" fg:x="25009" fg:w="75"/><text x="54.2465%" y="191.50"></text></g><g><title>zend_mm_alloc_small (11 samples, 0.02%)</title><rect x="54.1649%" y="165" width="0.0237%" height="15" fill="rgb(245,133,36)" fg:x="25087" fg:w="11"/><text x="54.4149%" y="175.50"></text></g><g><title>_emalloc (14 samples, 0.03%)</title><rect x="54.1627%" y="197" width="0.0302%" height="15" fill="rgb(212,6,19)" fg:x="25086" fg:w="14"/><text x="54.4127%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (13 samples, 0.03%)</title><rect x="54.1649%" y="181" width="0.0281%" height="15" fill="rgb(218,1,36)" fg:x="25087" fg:w="13"/><text x="54.4149%" y="191.50"></text></g><g><title>zend_string_init (16 samples, 0.03%)</title><rect x="54.1605%" y="229" width="0.0345%" height="15" fill="rgb(246,84,54)" fg:x="25085" fg:w="16"/><text x="54.4105%" y="239.50"></text></g><g><title>zend_string_alloc (16 samples, 0.03%)</title><rect x="54.1605%" y="213" width="0.0345%" height="15" fill="rgb(242,110,6)" fg:x="25085" fg:w="16"/><text x="54.4105%" y="223.50"></text></g><g><title>zend_hash_str_find_bucket (10 samples, 0.02%)</title><rect x="54.2663%" y="181" width="0.0216%" height="15" fill="rgb(214,47,5)" fg:x="25134" fg:w="10"/><text x="54.5163%" y="191.50"></text></g><g><title>zend_mm_alloc_small (5 samples, 0.01%)</title><rect x="54.2923%" y="117" width="0.0108%" height="15" fill="rgb(218,159,25)" fg:x="25146" fg:w="5"/><text x="54.5423%" y="127.50"></text></g><g><title>_emalloc (9 samples, 0.02%)</title><rect x="54.2901%" y="149" width="0.0194%" height="15" fill="rgb(215,211,28)" fg:x="25145" fg:w="9"/><text x="54.5401%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (8 samples, 0.02%)</title><rect x="54.2923%" y="133" width="0.0173%" height="15" fill="rgb(238,59,32)" fg:x="25146" fg:w="8"/><text x="54.5423%" y="143.50"></text></g><g><title>_zend_hash_str_add_or_update_i (47 samples, 0.10%)</title><rect x="54.2102%" y="197" width="0.1015%" height="15" fill="rgb(226,82,3)" fg:x="25108" fg:w="47"/><text x="54.4602%" y="207.50"></text></g><g><title>zend_string_init (11 samples, 0.02%)</title><rect x="54.2879%" y="181" width="0.0237%" height="15" fill="rgb(240,164,32)" fg:x="25144" fg:w="11"/><text x="54.5379%" y="191.50"></text></g><g><title>zend_string_alloc (11 samples, 0.02%)</title><rect x="54.2879%" y="165" width="0.0237%" height="15" fill="rgb(232,46,7)" fg:x="25144" fg:w="11"/><text x="54.5379%" y="175.50"></text></g><g><title>add_assoc_stringl_ex (91 samples, 0.20%)</title><rect x="54.1584%" y="245" width="0.1965%" height="15" fill="rgb(229,129,53)" fg:x="25084" fg:w="91"/><text x="54.4084%" y="255.50"></text></g><g><title>zend_symtable_str_update (74 samples, 0.16%)</title><rect x="54.1951%" y="229" width="0.1598%" height="15" fill="rgb(234,188,29)" fg:x="25101" fg:w="74"/><text x="54.4451%" y="239.50"></text></g><g><title>zend_hash_str_update (71 samples, 0.15%)</title><rect x="54.2016%" y="213" width="0.1533%" height="15" fill="rgb(246,141,4)" fg:x="25104" fg:w="71"/><text x="54.4516%" y="223.50"></text></g><g><title>zend_hash_func (20 samples, 0.04%)</title><rect x="54.3117%" y="197" width="0.0432%" height="15" fill="rgb(229,23,39)" fg:x="25155" fg:w="20"/><text x="54.5617%" y="207.50"></text></g><g><title>zend_inline_hash_func (20 samples, 0.04%)</title><rect x="54.3117%" y="181" width="0.0432%" height="15" fill="rgb(206,12,3)" fg:x="25155" fg:w="20"/><text x="54.5617%" y="191.50"></text></g><g><title>http_get_method_name (9 samples, 0.02%)</title><rect x="54.3549%" y="245" width="0.0194%" height="15" fill="rgb(252,226,20)" fg:x="25175" fg:w="9"/><text x="54.6049%" y="255.50"></text></g><g><title>swoole_http_method_str (9 samples, 0.02%)</title><rect x="54.3549%" y="229" width="0.0194%" height="15" fill="rgb(216,123,35)" fg:x="25175" fg:w="9"/><text x="54.6049%" y="239.50"></text></g><g><title>php_url_decode (39 samples, 0.08%)</title><rect x="54.3743%" y="245" width="0.0842%" height="15" fill="rgb(212,68,40)" fg:x="25184" fg:w="39"/><text x="54.6243%" y="255.50"></text></g><g><title>swoole::microtime (21 samples, 0.05%)</title><rect x="54.4585%" y="245" width="0.0453%" height="15" fill="rgb(254,125,32)" fg:x="25223" fg:w="21"/><text x="54.7085%" y="255.50"></text></g><g><title>swoole_http_should_keep_alive (18 samples, 0.04%)</title><rect x="54.5038%" y="245" width="0.0389%" height="15" fill="rgb(253,97,22)" fg:x="25244" fg:w="18"/><text x="54.7538%" y="255.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="54.5686%" y="181" width="0.0324%" height="15" fill="rgb(241,101,14)" fg:x="25274" fg:w="15"/><text x="54.8186%" y="191.50"></text></g><g><title>http_request_on_headers_complete (767 samples, 1.66%)</title><rect x="52.9471%" y="261" width="1.6560%" height="15" fill="rgb(238,103,29)" fg:x="24523" fg:w="767"/><text x="53.1971%" y="271.50"></text></g><g><title>zend_string_init (28 samples, 0.06%)</title><rect x="54.5427%" y="245" width="0.0605%" height="15" fill="rgb(233,195,47)" fg:x="25262" fg:w="28"/><text x="54.7927%" y="255.50"></text></g><g><title>zend_string_alloc (24 samples, 0.05%)</title><rect x="54.5513%" y="229" width="0.0518%" height="15" fill="rgb(246,218,30)" fg:x="25266" fg:w="24"/><text x="54.8013%" y="239.50"></text></g><g><title>_emalloc (18 samples, 0.04%)</title><rect x="54.5643%" y="213" width="0.0389%" height="15" fill="rgb(219,145,47)" fg:x="25272" fg:w="18"/><text x="54.8143%" y="223.50"></text></g><g><title>zend_mm_alloc_heap (18 samples, 0.04%)</title><rect x="54.5643%" y="197" width="0.0389%" height="15" fill="rgb(243,12,26)" fg:x="25272" fg:w="18"/><text x="54.8143%" y="207.50"></text></g><g><title>zend_mm_alloc_small (12 samples, 0.03%)</title><rect x="54.6334%" y="197" width="0.0259%" height="15" fill="rgb(214,87,16)" fg:x="25304" fg:w="12"/><text x="54.8834%" y="207.50"></text></g><g><title>swoole_http_parser_execute (3,290 samples, 7.10%)</title><rect x="47.5646%" y="277" width="7.1034%" height="15" fill="rgb(208,99,42)" fg:x="22030" fg:w="3290"/><text x="47.8146%" y="287.50">swoole_htt..</text></g><g><title>http_request_on_path (30 samples, 0.06%)</title><rect x="54.6032%" y="261" width="0.0648%" height="15" fill="rgb(253,99,2)" fg:x="25290" fg:w="30"/><text x="54.8532%" y="271.50"></text></g><g><title>_estrndup (23 samples, 0.05%)</title><rect x="54.6183%" y="245" width="0.0497%" height="15" fill="rgb(220,168,23)" fg:x="25297" fg:w="23"/><text x="54.8683%" y="255.50"></text></g><g><title>_emalloc (18 samples, 0.04%)</title><rect x="54.6291%" y="229" width="0.0389%" height="15" fill="rgb(242,38,24)" fg:x="25302" fg:w="18"/><text x="54.8791%" y="239.50"></text></g><g><title>zend_mm_alloc_heap (16 samples, 0.03%)</title><rect x="54.6334%" y="213" width="0.0345%" height="15" fill="rgb(225,182,9)" fg:x="25304" fg:w="16"/><text x="54.8834%" y="223.50"></text></g><g><title>swoole_http_parser_init (32 samples, 0.07%)</title><rect x="54.6679%" y="277" width="0.0691%" height="15" fill="rgb(243,178,37)" fg:x="25320" fg:w="32"/><text x="54.9179%" y="287.50"></text></g><g><title>swoole_http_server_onBeforeRequest (266 samples, 0.57%)</title><rect x="54.7370%" y="277" width="0.5743%" height="15" fill="rgb(232,139,19)" fg:x="25352" fg:w="266"/><text x="54.9870%" y="287.50"></text></g><g><title>swoole_isset_hook (22 samples, 0.05%)</title><rect x="55.3113%" y="277" width="0.0475%" height="15" fill="rgb(225,201,24)" fg:x="25618" fg:w="22"/><text x="55.5613%" y="287.50"></text></g><g><title>_efree (103 samples, 0.22%)</title><rect x="55.4819%" y="261" width="0.2224%" height="15" fill="rgb(221,47,46)" fg:x="25697" fg:w="103"/><text x="55.7319%" y="271.50"></text></g><g><title>zend_mm_free_heap (100 samples, 0.22%)</title><rect x="55.4884%" y="245" width="0.2159%" height="15" fill="rgb(249,23,13)" fg:x="25700" fg:w="100"/><text x="55.7384%" y="255.50"></text></g><g><title>zend_mm_free_small (6 samples, 0.01%)</title><rect x="55.6913%" y="229" width="0.0130%" height="15" fill="rgb(219,9,5)" fg:x="25794" fg:w="6"/><text x="55.9413%" y="239.50"></text></g><g><title>gc_remove_from_buffer (83 samples, 0.18%)</title><rect x="55.7043%" y="261" width="0.1792%" height="15" fill="rgb(254,171,16)" fg:x="25800" fg:w="83"/><text x="55.9543%" y="271.50"></text></g><g><title>gc_remove_from_roots (21 samples, 0.05%)</title><rect x="55.8382%" y="245" width="0.0453%" height="15" fill="rgb(230,171,20)" fg:x="25862" fg:w="21"/><text x="56.0882%" y="255.50"></text></g><g><title>gc_link_unused (19 samples, 0.04%)</title><rect x="55.8425%" y="229" width="0.0410%" height="15" fill="rgb(210,71,41)" fg:x="25864" fg:w="19"/><text x="56.0925%" y="239.50"></text></g><g><title>zend_get_property_offset (161 samples, 0.35%)</title><rect x="56.1966%" y="197" width="0.3476%" height="15" fill="rgb(206,173,20)" fg:x="26028" fg:w="161"/><text x="56.4466%" y="207.50"></text></g><g><title>zend_hash_find (93 samples, 0.20%)</title><rect x="56.3434%" y="181" width="0.2008%" height="15" fill="rgb(233,88,34)" fg:x="26096" fg:w="93"/><text x="56.5934%" y="191.50"></text></g><g><title>zend_hash_find_bucket (93 samples, 0.20%)</title><rect x="56.3434%" y="165" width="0.2008%" height="15" fill="rgb(223,209,46)" fg:x="26096" fg:w="93"/><text x="56.5934%" y="175.50"></text></g><g><title>zend_string_hash_val (12 samples, 0.03%)</title><rect x="56.5183%" y="149" width="0.0259%" height="15" fill="rgb(250,43,18)" fg:x="26177" fg:w="12"/><text x="56.7683%" y="159.50"></text></g><g><title>sw_zend_read_property_ex (256 samples, 0.55%)</title><rect x="55.9979%" y="245" width="0.5527%" height="15" fill="rgb(208,13,10)" fg:x="25936" fg:w="256"/><text x="56.2479%" y="255.50"></text></g><g><title>zend_read_property_ex (252 samples, 0.54%)</title><rect x="56.0066%" y="229" width="0.5441%" height="15" fill="rgb(212,200,36)" fg:x="25940" fg:w="252"/><text x="56.2566%" y="239.50"></text></g><g><title>zend_std_read_property (250 samples, 0.54%)</title><rect x="56.0109%" y="213" width="0.5398%" height="15" fill="rgb(225,90,30)" fg:x="25942" fg:w="250"/><text x="56.2609%" y="223.50"></text></g><g><title>swoole::http::Context::free (23 samples, 0.05%)</title><rect x="56.5507%" y="245" width="0.0497%" height="15" fill="rgb(236,182,39)" fg:x="26192" fg:w="23"/><text x="56.8007%" y="255.50"></text></g><g><title>rc_dtor_func (18 samples, 0.04%)</title><rect x="56.7579%" y="213" width="0.0389%" height="15" fill="rgb(212,144,35)" fg:x="26288" fg:w="18"/><text x="57.0079%" y="223.50"></text></g><g><title>_efree (292 samples, 0.63%)</title><rect x="57.1897%" y="197" width="0.6305%" height="15" fill="rgb(228,63,44)" fg:x="26488" fg:w="292"/><text x="57.4397%" y="207.50"></text></g><g><title>zend_mm_free_heap (292 samples, 0.63%)</title><rect x="57.1897%" y="181" width="0.6305%" height="15" fill="rgb(228,109,6)" fg:x="26488" fg:w="292"/><text x="57.4397%" y="191.50"></text></g><g><title>zend_mm_free_small (266 samples, 0.57%)</title><rect x="57.2459%" y="165" width="0.5743%" height="15" fill="rgb(238,117,24)" fg:x="26514" fg:w="266"/><text x="57.4959%" y="175.50"></text></g><g><title>_efree (246 samples, 0.53%)</title><rect x="58.0642%" y="181" width="0.5311%" height="15" fill="rgb(242,26,26)" fg:x="26893" fg:w="246"/><text x="58.3142%" y="191.50"></text></g><g><title>zend_mm_free_heap (234 samples, 0.51%)</title><rect x="58.0901%" y="165" width="0.5052%" height="15" fill="rgb(221,92,48)" fg:x="26905" fg:w="234"/><text x="58.3401%" y="175.50"></text></g><g><title>zend_mm_free_small (193 samples, 0.42%)</title><rect x="58.1786%" y="149" width="0.4167%" height="15" fill="rgb(209,209,32)" fg:x="26946" fg:w="193"/><text x="58.4286%" y="159.50"></text></g><g><title>rc_dtor_func (13 samples, 0.03%)</title><rect x="58.5953%" y="181" width="0.0281%" height="15" fill="rgb(221,70,22)" fg:x="27139" fg:w="13"/><text x="58.8453%" y="191.50"></text></g><g><title>i_zval_ptr_dtor (443 samples, 0.96%)</title><rect x="57.8202%" y="197" width="0.9565%" height="15" fill="rgb(248,145,5)" fg:x="26780" fg:w="443"/><text x="58.0702%" y="207.50"></text></g><g><title>zend_gc_delref (71 samples, 0.15%)</title><rect x="58.6234%" y="181" width="0.1533%" height="15" fill="rgb(226,116,26)" fg:x="27152" fg:w="71"/><text x="58.8734%" y="191.50"></text></g><g><title>_efree (51 samples, 0.11%)</title><rect x="58.9710%" y="181" width="0.1101%" height="15" fill="rgb(244,5,17)" fg:x="27313" fg:w="51"/><text x="59.2210%" y="191.50"></text></g><g><title>zend_mm_free_heap (43 samples, 0.09%)</title><rect x="58.9883%" y="165" width="0.0928%" height="15" fill="rgb(252,159,33)" fg:x="27321" fg:w="43"/><text x="59.2383%" y="175.50"></text></g><g><title>zend_mm_free_small (20 samples, 0.04%)</title><rect x="59.0379%" y="149" width="0.0432%" height="15" fill="rgb(206,71,0)" fg:x="27344" fg:w="20"/><text x="59.2879%" y="159.50"></text></g><g><title>zend_array_destroy (1,075 samples, 2.32%)</title><rect x="56.7968%" y="213" width="2.3210%" height="15" fill="rgb(233,118,54)" fg:x="26306" fg:w="1075"/><text x="57.0468%" y="223.50">z..</text></g><g><title>zend_string_release_ex (158 samples, 0.34%)</title><rect x="58.7767%" y="197" width="0.3411%" height="15" fill="rgb(234,83,48)" fg:x="27223" fg:w="158"/><text x="59.0267%" y="207.50"></text></g><g><title>zend_gc_delref (17 samples, 0.04%)</title><rect x="59.0811%" y="181" width="0.0367%" height="15" fill="rgb(228,3,54)" fg:x="27364" fg:w="17"/><text x="59.3311%" y="191.50"></text></g><g><title>php_swoole_http_request_free_object (1,520 samples, 3.28%)</title><rect x="55.8835%" y="261" width="3.2818%" height="15" fill="rgb(226,155,13)" fg:x="25883" fg:w="1520"/><text x="56.1335%" y="271.50">php..</text></g><g><title>zend_object_std_dtor (1,188 samples, 2.56%)</title><rect x="56.6003%" y="245" width="2.5650%" height="15" fill="rgb(241,28,37)" fg:x="26215" fg:w="1188"/><text x="56.8503%" y="255.50">ze..</text></g><g><title>i_zval_ptr_dtor (1,124 samples, 2.43%)</title><rect x="56.7385%" y="229" width="2.4268%" height="15" fill="rgb(233,93,10)" fg:x="26279" fg:w="1124"/><text x="56.9885%" y="239.50">i_..</text></g><g><title>zend_gc_delref (22 samples, 0.05%)</title><rect x="59.1178%" y="213" width="0.0475%" height="15" fill="rgb(225,113,19)" fg:x="27381" fg:w="22"/><text x="59.3678%" y="223.50"></text></g><g><title>_mi_page_retire (35 samples, 0.08%)</title><rect x="59.2150%" y="245" width="0.0756%" height="15" fill="rgb(241,2,18)" fg:x="27426" fg:w="35"/><text x="59.4650%" y="255.50"></text></g><g><title>free (26 samples, 0.06%)</title><rect x="59.2905%" y="245" width="0.0561%" height="15" fill="rgb(228,207,21)" fg:x="27461" fg:w="26"/><text x="59.5405%" y="255.50"></text></g><g><title>php_swoole_http_response_fetch_object (12 samples, 0.03%)</title><rect x="59.3467%" y="245" width="0.0259%" height="15" fill="rgb(213,211,35)" fg:x="27487" fg:w="12"/><text x="59.5967%" y="255.50"></text></g><g><title>_efree (34 samples, 0.07%)</title><rect x="59.5496%" y="229" width="0.0734%" height="15" fill="rgb(209,83,10)" fg:x="27581" fg:w="34"/><text x="59.7996%" y="239.50"></text></g><g><title>zend_mm_free_heap (34 samples, 0.07%)</title><rect x="59.5496%" y="213" width="0.0734%" height="15" fill="rgb(209,164,1)" fg:x="27581" fg:w="34"/><text x="59.7996%" y="223.50"></text></g><g><title>zend_mm_free_small (5 samples, 0.01%)</title><rect x="59.6122%" y="197" width="0.0108%" height="15" fill="rgb(213,184,43)" fg:x="27610" fg:w="5"/><text x="59.8622%" y="207.50"></text></g><g><title>zend_string_release (38 samples, 0.08%)</title><rect x="59.6230%" y="229" width="0.0820%" height="15" fill="rgb(231,61,34)" fg:x="27615" fg:w="38"/><text x="59.8730%" y="239.50"></text></g><g><title>__gnu_cxx::__exchange_and_add_dispatch (238 samples, 0.51%)</title><rect x="59.7806%" y="165" width="0.5139%" height="15" fill="rgb(235,75,3)" fg:x="27688" fg:w="238"/><text x="60.0306%" y="175.50"></text></g><g><title>__gnu_cxx::__exchange_and_add (238 samples, 0.51%)</title><rect x="59.7806%" y="149" width="0.5139%" height="15" fill="rgb(220,106,47)" fg:x="27688" fg:w="238"/><text x="60.0306%" y="159.50"></text></g><g><title>free (21 samples, 0.05%)</title><rect x="60.2945%" y="165" width="0.0453%" height="15" fill="rgb(210,196,33)" fg:x="27926" fg:w="21"/><text x="60.5445%" y="175.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (6 samples, 0.01%)</title><rect x="60.3398%" y="165" width="0.0130%" height="15" fill="rgb(229,154,42)" fg:x="27947" fg:w="6"/><text x="60.5898%" y="175.50"></text></g><g><title>~__allocated_ptr (6 samples, 0.01%)</title><rect x="60.3398%" y="149" width="0.0130%" height="15" fill="rgb(228,114,26)" fg:x="27947" fg:w="6"/><text x="60.5898%" y="159.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (6 samples, 0.01%)</title><rect x="60.3398%" y="133" width="0.0130%" height="15" fill="rgb(208,144,1)" fg:x="27947" fg:w="6"/><text x="60.5898%" y="143.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (6 samples, 0.01%)</title><rect x="60.3398%" y="117" width="0.0130%" height="15" fill="rgb(239,112,37)" fg:x="27947" fg:w="6"/><text x="60.5898%" y="127.50"></text></g><g><title>_mi_page_retire (33 samples, 0.07%)</title><rect x="60.3528%" y="101" width="0.0712%" height="15" fill="rgb(210,96,50)" fg:x="27953" fg:w="33"/><text x="60.6028%" y="111.50"></text></g><g><title>~__shared_ptr (351 samples, 0.76%)</title><rect x="59.7051%" y="213" width="0.7578%" height="15" fill="rgb(222,178,2)" fg:x="27653" fg:w="351"/><text x="59.9551%" y="223.50"></text></g><g><title>~__shared_count (351 samples, 0.76%)</title><rect x="59.7051%" y="197" width="0.7578%" height="15" fill="rgb(226,74,18)" fg:x="27653" fg:w="351"/><text x="59.9551%" y="207.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (333 samples, 0.72%)</title><rect x="59.7439%" y="181" width="0.7190%" height="15" fill="rgb(225,67,54)" fg:x="27671" fg:w="333"/><text x="59.9939%" y="191.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (51 samples, 0.11%)</title><rect x="60.3528%" y="165" width="0.1101%" height="15" fill="rgb(251,92,32)" fg:x="27953" fg:w="51"/><text x="60.6028%" y="175.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;swoole::String&gt; &gt;::destroy&lt;swoole::String&gt; (51 samples, 0.11%)</title><rect x="60.3528%" y="149" width="0.1101%" height="15" fill="rgb(228,149,22)" fg:x="27953" fg:w="51"/><text x="60.6028%" y="159.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;swoole::String&gt;::destroy&lt;swoole::String&gt; (51 samples, 0.11%)</title><rect x="60.3528%" y="133" width="0.1101%" height="15" fill="rgb(243,54,13)" fg:x="27953" fg:w="51"/><text x="60.6028%" y="143.50"></text></g><g><title>~String (51 samples, 0.11%)</title><rect x="60.3528%" y="117" width="0.1101%" height="15" fill="rgb(243,180,28)" fg:x="27953" fg:w="51"/><text x="60.6028%" y="127.50"></text></g><g><title>free (18 samples, 0.04%)</title><rect x="60.4240%" y="101" width="0.0389%" height="15" fill="rgb(208,167,24)" fg:x="27986" fg:w="18"/><text x="60.6740%" y="111.50"></text></g><g><title>swoole::http::Context::free (510 samples, 1.10%)</title><rect x="59.3726%" y="245" width="1.1011%" height="15" fill="rgb(245,73,45)" fg:x="27499" fg:w="510"/><text x="59.6226%" y="255.50"></text></g><g><title>~Context (356 samples, 0.77%)</title><rect x="59.7051%" y="229" width="0.7686%" height="15" fill="rgb(237,203,48)" fg:x="27653" fg:w="356"/><text x="59.9551%" y="239.50"></text></g><g><title>~basic_string (5 samples, 0.01%)</title><rect x="60.4629%" y="213" width="0.0108%" height="15" fill="rgb(211,197,16)" fg:x="28004" fg:w="5"/><text x="60.7129%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5 samples, 0.01%)</title><rect x="60.4629%" y="197" width="0.0108%" height="15" fill="rgb(243,99,51)" fg:x="28004" fg:w="5"/><text x="60.7129%" y="207.50"></text></g><g><title>_efree_56 (5 samples, 0.01%)</title><rect x="60.5255%" y="213" width="0.0108%" height="15" fill="rgb(215,123,29)" fg:x="28033" fg:w="5"/><text x="60.7755%" y="223.50"></text></g><g><title>_efree (11 samples, 0.02%)</title><rect x="60.5730%" y="197" width="0.0237%" height="15" fill="rgb(239,186,37)" fg:x="28055" fg:w="11"/><text x="60.8230%" y="207.50"></text></g><g><title>zend_mm_free_heap (10 samples, 0.02%)</title><rect x="60.5752%" y="181" width="0.0216%" height="15" fill="rgb(252,136,39)" fg:x="28056" fg:w="10"/><text x="60.8252%" y="191.50"></text></g><g><title>zend_mm_free_small (7 samples, 0.02%)</title><rect x="60.5817%" y="165" width="0.0151%" height="15" fill="rgb(223,213,32)" fg:x="28059" fg:w="7"/><text x="60.8317%" y="175.50"></text></g><g><title>i_zval_ptr_dtor (13 samples, 0.03%)</title><rect x="60.5968%" y="197" width="0.0281%" height="15" fill="rgb(233,115,5)" fg:x="28066" fg:w="13"/><text x="60.8468%" y="207.50"></text></g><g><title>_efree (9 samples, 0.02%)</title><rect x="60.6421%" y="181" width="0.0194%" height="15" fill="rgb(207,226,44)" fg:x="28087" fg:w="9"/><text x="60.8921%" y="191.50"></text></g><g><title>zend_mm_free_heap (8 samples, 0.02%)</title><rect x="60.6443%" y="165" width="0.0173%" height="15" fill="rgb(208,126,0)" fg:x="28088" fg:w="8"/><text x="60.8943%" y="175.50"></text></g><g><title>zend_mm_free_small (5 samples, 0.01%)</title><rect x="60.6507%" y="149" width="0.0108%" height="15" fill="rgb(244,66,21)" fg:x="28091" fg:w="5"/><text x="60.9007%" y="159.50"></text></g><g><title>zend_array_destroy (56 samples, 0.12%)</title><rect x="60.5450%" y="213" width="0.1209%" height="15" fill="rgb(222,97,12)" fg:x="28042" fg:w="56"/><text x="60.7950%" y="223.50"></text></g><g><title>zend_string_release_ex (19 samples, 0.04%)</title><rect x="60.6248%" y="197" width="0.0410%" height="15" fill="rgb(219,213,19)" fg:x="28079" fg:w="19"/><text x="60.8748%" y="207.50"></text></g><g><title>php_swoole_http_response_free_object (700 samples, 1.51%)</title><rect x="59.1653%" y="261" width="1.5114%" height="15" fill="rgb(252,169,30)" fg:x="27403" fg:w="700"/><text x="59.4153%" y="271.50"></text></g><g><title>zend_object_std_dtor (94 samples, 0.20%)</title><rect x="60.4737%" y="245" width="0.2030%" height="15" fill="rgb(206,32,51)" fg:x="28009" fg:w="94"/><text x="60.7237%" y="255.50"></text></g><g><title>i_zval_ptr_dtor (70 samples, 0.15%)</title><rect x="60.5255%" y="229" width="0.1511%" height="15" fill="rgb(250,172,42)" fg:x="28033" fg:w="70"/><text x="60.7755%" y="239.50"></text></g><g><title>zend_gc_delref (5 samples, 0.01%)</title><rect x="60.6659%" y="213" width="0.0108%" height="15" fill="rgb(209,34,43)" fg:x="28098" fg:w="5"/><text x="60.9159%" y="223.50"></text></g><g><title>zend_fiber_switch_block (33 samples, 0.07%)</title><rect x="60.6767%" y="261" width="0.0712%" height="15" fill="rgb(223,11,35)" fg:x="28103" fg:w="33"/><text x="60.9267%" y="271.50"></text></g><g><title>zend_fiber_switch_unblock (15 samples, 0.03%)</title><rect x="60.7479%" y="261" width="0.0324%" height="15" fill="rgb(251,219,26)" fg:x="28136" fg:w="15"/><text x="60.9979%" y="271.50"></text></g><g><title>zend_gc_delref (6 samples, 0.01%)</title><rect x="60.7803%" y="261" width="0.0130%" height="15" fill="rgb(231,119,3)" fg:x="28151" fg:w="6"/><text x="61.0303%" y="271.50"></text></g><g><title>zend_vm_calc_used_stack (9 samples, 0.02%)</title><rect x="62.4838%" y="165" width="0.0194%" height="15" fill="rgb(216,97,11)" fg:x="28940" fg:w="9"/><text x="62.7338%" y="175.50"></text></g><g><title>zend_call_function (364 samples, 0.79%)</title><rect x="61.7519%" y="197" width="0.7859%" height="15" fill="rgb(223,59,9)" fg:x="28601" fg:w="364"/><text x="62.0019%" y="207.50"></text></g><g><title>zend_vm_stack_push_call_frame (25 samples, 0.05%)</title><rect x="62.4838%" y="181" width="0.0540%" height="15" fill="rgb(233,93,31)" fg:x="28940" fg:w="25"/><text x="62.7338%" y="191.50"></text></g><g><title>zend_vm_stack_push_call_frame_ex (16 samples, 0.03%)</title><rect x="62.5032%" y="165" width="0.0345%" height="15" fill="rgb(239,81,33)" fg:x="28949" fg:w="16"/><text x="62.7532%" y="175.50"></text></g><g><title>zend_call_known_instance_method_with_0_params (426 samples, 0.92%)</title><rect x="61.6267%" y="245" width="0.9198%" height="15" fill="rgb(213,120,34)" fg:x="28543" fg:w="426"/><text x="61.8767%" y="255.50"></text></g><g><title>zend_call_known_instance_method (426 samples, 0.92%)</title><rect x="61.6267%" y="229" width="0.9198%" height="15" fill="rgb(243,49,53)" fg:x="28543" fg:w="426"/><text x="61.8767%" y="239.50"></text></g><g><title>zend_call_known_function (423 samples, 0.91%)</title><rect x="61.6331%" y="213" width="0.9133%" height="15" fill="rgb(247,216,33)" fg:x="28546" fg:w="423"/><text x="61.8831%" y="223.50"></text></g><g><title>zend_objects_store_del (3,352 samples, 7.24%)</title><rect x="55.3588%" y="277" width="7.2372%" height="15" fill="rgb(226,26,14)" fg:x="25640" fg:w="3352"/><text x="55.6088%" y="287.50">zend_objec..</text></g><g><title>zend_objects_destroy_object (835 samples, 1.80%)</title><rect x="60.7932%" y="261" width="1.8028%" height="15" fill="rgb(215,49,53)" fg:x="28157" fg:w="835"/><text x="61.0432%" y="271.50">z..</text></g><g><title>zend_object_release (22 samples, 0.05%)</title><rect x="62.5486%" y="245" width="0.0475%" height="15" fill="rgb(245,162,40)" fg:x="28970" fg:w="22"/><text x="62.7986%" y="255.50"></text></g><g><title>zend_gc_delref (9 samples, 0.02%)</title><rect x="62.5766%" y="229" width="0.0194%" height="15" fill="rgb(229,68,17)" fg:x="28983" fg:w="9"/><text x="62.8266%" y="239.50"></text></g><g><title>rc_dtor_func (24 samples, 0.05%)</title><rect x="62.6587%" y="245" width="0.0518%" height="15" fill="rgb(213,182,10)" fg:x="29021" fg:w="24"/><text x="62.9087%" y="255.50"></text></g><g><title>php_swoole_http_server_onReceive (17,060 samples, 36.83%)</title><rect x="25.9003%" y="293" width="36.8339%" height="15" fill="rgb(245,125,30)" fg:x="11996" fg:w="17060"/><text x="26.1503%" y="303.50">php_swoole_http_server_onReceive</text></g><g><title>zval_ptr_dtor (64 samples, 0.14%)</title><rect x="62.5961%" y="277" width="0.1382%" height="15" fill="rgb(232,202,2)" fg:x="28992" fg:w="64"/><text x="62.8461%" y="287.50"></text></g><g><title>i_zval_ptr_dtor (64 samples, 0.14%)</title><rect x="62.5961%" y="261" width="0.1382%" height="15" fill="rgb(237,140,51)" fg:x="28992" fg:w="64"/><text x="62.8461%" y="271.50"></text></g><g><title>zend_gc_delref (11 samples, 0.02%)</title><rect x="62.7105%" y="245" width="0.0237%" height="15" fill="rgb(236,157,25)" fg:x="29045" fg:w="11"/><text x="62.9605%" y="255.50"></text></g><g><title>std::_Function_base::_M_empty (52 samples, 0.11%)</title><rect x="62.7343%" y="293" width="0.1123%" height="15" fill="rgb(219,209,0)" fg:x="29056" fg:w="52"/><text x="62.9843%" y="303.50"></text></g><g><title>std::function&lt;int (swoole::Server*, swoole::RecvData*)&gt;::operator (17,244 samples, 37.23%)</title><rect x="25.8982%" y="309" width="37.2312%" height="15" fill="rgb(240,116,54)" fg:x="11995" fg:w="17244"/><text x="26.1482%" y="319.50">std::function&lt;int (swoole::Server*, swoole::RecvData*)&gt;::oper..</text></g><g><title>std::_Function_handler&lt;int (swoole::Server*, swoole::RecvData*), int (*)(swoole::Server*, swoole::RecvData*)&gt;::_M_invoke (131 samples, 0.28%)</title><rect x="62.8465%" y="293" width="0.2828%" height="15" fill="rgb(216,10,36)" fg:x="29108" fg:w="131"/><text x="63.0965%" y="303.50"></text></g><g><title>std::__invoke_r&lt;int, int (*&amp;)(swoole::Server*, swoole::RecvData*), swoole::Server*, swoole::RecvData*&gt; (131 samples, 0.28%)</title><rect x="62.8465%" y="277" width="0.2828%" height="15" fill="rgb(222,72,44)" fg:x="29108" fg:w="131"/><text x="63.0965%" y="287.50"></text></g><g><title>std::__invoke_impl&lt;int, int (*&amp;)(swoole::Server*, swoole::RecvData*), swoole::Server*, swoole::RecvData*&gt; (131 samples, 0.28%)</title><rect x="62.8465%" y="261" width="0.2828%" height="15" fill="rgb(232,159,9)" fg:x="29108" fg:w="131"/><text x="63.0965%" y="271.50"></text></g><g><title>swoole::BaseFactory::dispatch (18,061 samples, 39.00%)</title><rect x="24.1385%" y="357" width="38.9952%" height="15" fill="rgb(210,39,32)" fg:x="11180" fg:w="18061"/><text x="24.3885%" y="367.50">swoole::BaseFactory::dispatch</text></g><g><title>swoole::Server::worker_accept_event (17,712 samples, 38.24%)</title><rect x="24.8920%" y="341" width="38.2416%" height="15" fill="rgb(216,194,45)" fg:x="11529" fg:w="17712"/><text x="25.1420%" y="351.50">swoole::Server::worker_accept_event</text></g><g><title>swoole::Worker_do_task (17,256 samples, 37.26%)</title><rect x="25.8766%" y="325" width="37.2571%" height="15" fill="rgb(218,18,35)" fg:x="11985" fg:w="17256"/><text x="26.1266%" y="335.50">swoole::Worker_do_task</text></g><g><title>swoole::Server::dispatch_task (18,756 samples, 40.50%)</title><rect x="23.0244%" y="373" width="40.4957%" height="15" fill="rgb(207,83,51)" fg:x="10664" fg:w="18756"/><text x="23.2744%" y="383.50">swoole::Server::dispatch_task</text></g><g><title>swoole::Server::is_process_mode (175 samples, 0.38%)</title><rect x="63.1423%" y="357" width="0.3778%" height="15" fill="rgb(225,63,43)" fg:x="29245" fg:w="175"/><text x="63.3923%" y="367.50"></text></g><g><title>swoole::http_server::Request::get_header_length (87 samples, 0.19%)</title><rect x="63.5288%" y="373" width="0.1878%" height="15" fill="rgb(207,57,36)" fg:x="29424" fg:w="87"/><text x="63.7788%" y="383.50"></text></g><g><title>swoole::http_server::Request::get_protocol (134 samples, 0.29%)</title><rect x="63.7166%" y="373" width="0.2893%" height="15" fill="rgb(216,99,33)" fg:x="29511" fg:w="134"/><text x="63.9666%" y="383.50"></text></g><g><title>swoole::http_server::Request::parse_header_info (158 samples, 0.34%)</title><rect x="64.0060%" y="373" width="0.3411%" height="15" fill="rgb(225,42,16)" fg:x="29645" fg:w="158"/><text x="64.2560%" y="383.50"></text></g><g><title>swoole_strcasect (38 samples, 0.08%)</title><rect x="64.2650%" y="357" width="0.0820%" height="15" fill="rgb(220,201,45)" fg:x="29765" fg:w="38"/><text x="64.5150%" y="367.50"></text></g><g><title>swoole::http_server::dispatch_request (14 samples, 0.03%)</title><rect x="64.3471%" y="373" width="0.0302%" height="15" fill="rgb(225,33,4)" fg:x="29803" fg:w="14"/><text x="64.5971%" y="383.50"></text></g><g><title>swoole::Server::is_unavailable (13 samples, 0.03%)</title><rect x="64.3493%" y="357" width="0.0281%" height="15" fill="rgb(224,33,50)" fg:x="29804" fg:w="13"/><text x="64.5993%" y="367.50"></text></g><g><title>swoole::Server::get_concurrency (10 samples, 0.02%)</title><rect x="64.3557%" y="341" width="0.0216%" height="15" fill="rgb(246,198,51)" fg:x="29807" fg:w="10"/><text x="64.6057%" y="351.50"></text></g><g><title>swoole::Port_onRead_http (19,978 samples, 43.13%)</title><rect x="21.3404%" y="389" width="43.1341%" height="15" fill="rgb(205,22,4)" fg:x="9884" fg:w="19978"/><text x="21.5904%" y="399.50">swoole::Port_onRead_http</text></g><g><title>swoole::network::Socket::recv (45 samples, 0.10%)</title><rect x="64.3773%" y="373" width="0.0972%" height="15" fill="rgb(206,3,8)" fg:x="29817" fg:w="45"/><text x="64.6273%" y="383.50"></text></g><g><title>swoole::Server::get_connection (5 samples, 0.01%)</title><rect x="64.4745%" y="389" width="0.0108%" height="15" fill="rgb(251,23,15)" fg:x="29862" fg:w="5"/><text x="64.7245%" y="399.50"></text></g><g><title>swoole::Server::get_port_by_fd (14 samples, 0.03%)</title><rect x="64.4853%" y="389" width="0.0302%" height="15" fill="rgb(252,88,28)" fg:x="29867" fg:w="14"/><text x="64.7353%" y="399.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (14 samples, 0.03%)</title><rect x="64.4853%" y="373" width="0.0302%" height="15" fill="rgb(212,127,14)" fg:x="29867" fg:w="14"/><text x="64.7353%" y="383.50"></text></g><g><title>php_execute_script (20,943 samples, 45.22%)</title><rect x="19.3713%" y="581" width="45.2176%" height="15" fill="rgb(247,145,37)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="591.50">php_execute_script</text></g><g><title>zend_execute_scripts (20,943 samples, 45.22%)</title><rect x="19.3713%" y="565" width="45.2176%" height="15" fill="rgb(209,117,53)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="575.50">zend_execute_scripts</text></g><g><title>zend_execute (20,943 samples, 45.22%)</title><rect x="19.3713%" y="549" width="45.2176%" height="15" fill="rgb(212,90,42)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="559.50">zend_execute</text></g><g><title>execute_ex (20,943 samples, 45.22%)</title><rect x="19.3713%" y="533" width="45.2176%" height="15" fill="rgb(218,164,37)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="543.50">execute_ex</text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (20,943 samples, 45.22%)</title><rect x="19.3713%" y="517" width="45.2176%" height="15" fill="rgb(246,65,34)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="527.50">ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER</text></g><g><title>zim_swoole_server_start (20,943 samples, 45.22%)</title><rect x="19.3713%" y="501" width="45.2176%" height="15" fill="rgb(231,100,33)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="511.50">zim_swoole_server_start</text></g><g><title>swoole::Server::start (20,943 samples, 45.22%)</title><rect x="19.3713%" y="485" width="45.2176%" height="15" fill="rgb(228,126,14)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="495.50">swoole::Server::start</text></g><g><title>swoole::Server::start_reactor_processes (20,943 samples, 45.22%)</title><rect x="19.3713%" y="469" width="45.2176%" height="15" fill="rgb(215,173,21)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="479.50">swoole::Server::start_reactor_processes</text></g><g><title>swoole::ReactorProcess_loop (20,943 samples, 45.22%)</title><rect x="19.3713%" y="453" width="45.2176%" height="15" fill="rgb(210,6,40)" fg:x="8972" fg:w="20943"/><text x="19.6213%" y="463.50">swoole::ReactorProcess_loop</text></g><g><title>swoole::Reactor::wait (20,942 samples, 45.22%)</title><rect x="19.3734%" y="437" width="45.2155%" height="15" fill="rgb(212,48,18)" fg:x="8973" fg:w="20942"/><text x="19.6234%" y="447.50">swoole::Reactor::wait</text></g><g><title>swoole::ReactorEpoll::wait (20,942 samples, 45.22%)</title><rect x="19.3734%" y="421" width="45.2155%" height="15" fill="rgb(230,214,11)" fg:x="8973" fg:w="20942"/><text x="19.6234%" y="431.50">swoole::ReactorEpoll::wait</text></g><g><title>swoole::ReactorThread_onRead (20,512 samples, 44.29%)</title><rect x="20.3018%" y="405" width="44.2871%" height="15" fill="rgb(254,105,39)" fg:x="9403" fg:w="20512"/><text x="20.5518%" y="415.50">swoole::ReactorThread_onRead</text></g><g><title>swoole::microtime (34 samples, 0.07%)</title><rect x="64.5155%" y="389" width="0.0734%" height="15" fill="rgb(245,158,5)" fg:x="29881" fg:w="34"/><text x="64.7655%" y="399.50"></text></g><g><title>php_swoole_get_recv_data (219 samples, 0.47%)</title><rect x="64.5932%" y="581" width="0.4728%" height="15" fill="rgb(249,208,11)" fg:x="29917" fg:w="219"/><text x="64.8432%" y="591.50"></text></g><g><title>pop_arg (85 samples, 0.18%)</title><rect x="65.0812%" y="581" width="0.1835%" height="15" fill="rgb(210,39,28)" fg:x="30143" fg:w="85"/><text x="65.3312%" y="591.50"></text></g><g><title>printf_core (1,569 samples, 3.39%)</title><rect x="65.2647%" y="581" width="3.3876%" height="15" fill="rgb(211,56,53)" fg:x="30228" fg:w="1569"/><text x="65.5147%" y="591.50">pri..</text></g><g><title>sn_write (114 samples, 0.25%)</title><rect x="68.6523%" y="581" width="0.2461%" height="15" fill="rgb(226,201,30)" fg:x="31797" fg:w="114"/><text x="68.9023%" y="591.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (6 samples, 0.01%)</title><rect x="68.9092%" y="581" width="0.0130%" height="15" fill="rgb(239,101,34)" fg:x="31916" fg:w="6"/><text x="69.1592%" y="591.50"></text></g><g><title>strnlen (30 samples, 0.06%)</title><rect x="68.9351%" y="581" width="0.0648%" height="15" fill="rgb(226,209,5)" fg:x="31928" fg:w="30"/><text x="69.1851%" y="591.50"></text></g><g><title>swoole::ProcessPool::get_worker (23 samples, 0.05%)</title><rect x="69.2093%" y="565" width="0.0497%" height="15" fill="rgb(250,105,47)" fg:x="32055" fg:w="23"/><text x="69.4593%" y="575.50"></text></g><g><title>swoole::Server::get_session (15 samples, 0.03%)</title><rect x="69.2590%" y="565" width="0.0324%" height="15" fill="rgb(230,72,3)" fg:x="32078" fg:w="15"/><text x="69.5090%" y="575.50"></text></g><g><title>swoole::Server::get_connection_verify (37 samples, 0.08%)</title><rect x="69.6390%" y="549" width="0.0799%" height="15" fill="rgb(232,218,39)" fg:x="32254" fg:w="37"/><text x="69.8890%" y="559.50"></text></g><g><title>swoole::Server::get_connection_verify_no_ssl (36 samples, 0.08%)</title><rect x="69.6412%" y="533" width="0.0777%" height="15" fill="rgb(248,166,6)" fg:x="32255" fg:w="36"/><text x="69.8912%" y="543.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (6 samples, 0.01%)</title><rect x="69.7189%" y="549" width="0.0130%" height="15" fill="rgb(247,89,20)" fg:x="32291" fg:w="6"/><text x="69.9689%" y="559.50"></text></g><g><title>swoole::Server::is_base_mode (88 samples, 0.19%)</title><rect x="69.7318%" y="549" width="0.1900%" height="15" fill="rgb(248,130,54)" fg:x="32297" fg:w="88"/><text x="69.9818%" y="559.50"></text></g><g><title>swoole::microtime (148 samples, 0.32%)</title><rect x="69.9218%" y="549" width="0.3195%" height="15" fill="rgb(234,196,4)" fg:x="32385" fg:w="148"/><text x="70.1718%" y="559.50"></text></g><g><title>swoole::network::Socket::send (89 samples, 0.19%)</title><rect x="70.0492%" y="533" width="0.1922%" height="15" fill="rgb(250,143,31)" fg:x="32444" fg:w="89"/><text x="70.2992%" y="543.50"></text></g><g><title>__clock_gettime (89 samples, 0.19%)</title><rect x="70.0492%" y="517" width="0.1922%" height="15" fill="rgb(211,110,34)" fg:x="32444" fg:w="89"/><text x="70.2992%" y="527.50"></text></g><g><title>__vdso_clock_gettime (81 samples, 0.17%)</title><rect x="70.0665%" y="501" width="0.1749%" height="15" fill="rgb(215,124,48)" fg:x="32452" fg:w="81"/><text x="70.3165%" y="511.50"></text></g><g><title>[[vdso]] (17 samples, 0.04%)</title><rect x="70.2047%" y="485" width="0.0367%" height="15" fill="rgb(216,46,13)" fg:x="32516" fg:w="17"/><text x="70.4547%" y="495.50"></text></g><g><title>swoole::BaseFactory::finish (690 samples, 1.49%)</title><rect x="69.0064%" y="581" width="1.4898%" height="15" fill="rgb(205,184,25)" fg:x="31961" fg:w="690"/><text x="69.2564%" y="591.50"></text></g><g><title>swoole::Server::send_to_connection (558 samples, 1.20%)</title><rect x="69.2914%" y="565" width="1.2048%" height="15" fill="rgb(228,1,10)" fg:x="32093" fg:w="558"/><text x="69.5414%" y="575.50"></text></g><g><title>swoole::network::Socket::send (118 samples, 0.25%)</title><rect x="70.2414%" y="549" width="0.2548%" height="15" fill="rgb(213,116,27)" fg:x="32533" fg:w="118"/><text x="70.4914%" y="559.50"></text></g><g><title>swoole::Coroutine::close (117 samples, 0.25%)</title><rect x="70.4962%" y="581" width="0.2526%" height="15" fill="rgb(241,95,50)" fg:x="32651" fg:w="117"/><text x="70.7462%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::main_func (52 samples, 0.11%)</title><rect x="70.7488%" y="581" width="0.1123%" height="15" fill="rgb(238,48,32)" fg:x="32768" fg:w="52"/><text x="70.9988%" y="591.50"></text></g><g><title>swoole::Port_onRead_http (55 samples, 0.12%)</title><rect x="70.8610%" y="581" width="0.1187%" height="15" fill="rgb(235,113,49)" fg:x="32820" fg:w="55"/><text x="71.1110%" y="591.50"></text></g><g><title>swoole::Server::dispatch_task (40 samples, 0.09%)</title><rect x="70.9798%" y="581" width="0.0864%" height="15" fill="rgb(205,127,43)" fg:x="32875" fg:w="40"/><text x="71.2298%" y="591.50"></text></g><g><title>swoole::Server::send_to_connection (44 samples, 0.09%)</title><rect x="71.0662%" y="581" width="0.0950%" height="15" fill="rgb(250,162,2)" fg:x="32915" fg:w="44"/><text x="71.3162%" y="591.50"></text></g><g><title>swoole::String::append (29 samples, 0.06%)</title><rect x="71.1633%" y="581" width="0.0626%" height="15" fill="rgb(220,13,41)" fg:x="32960" fg:w="29"/><text x="71.4133%" y="591.50"></text></g><g><title>swoole::coroutine::Context::swap_in (19 samples, 0.04%)</title><rect x="71.2259%" y="581" width="0.0410%" height="15" fill="rgb(249,221,25)" fg:x="32989" fg:w="19"/><text x="71.4759%" y="591.50"></text></g><g><title>swoole::http::Context::build_header (6 samples, 0.01%)</title><rect x="71.2669%" y="581" width="0.0130%" height="15" fill="rgb(215,208,19)" fg:x="33008" fg:w="6"/><text x="71.5169%" y="591.50"></text></g><g><title>swoole::http::Context::compress (19 samples, 0.04%)</title><rect x="71.2799%" y="581" width="0.0410%" height="15" fill="rgb(236,175,2)" fg:x="33014" fg:w="19"/><text x="71.5299%" y="591.50"></text></g><g><title>swoole::http::Context::end (7 samples, 0.02%)</title><rect x="71.3209%" y="581" width="0.0151%" height="15" fill="rgb(241,52,2)" fg:x="33033" fg:w="7"/><text x="71.5709%" y="591.50"></text></g><g><title>swoole::http::Context::init (5 samples, 0.01%)</title><rect x="71.3468%" y="581" width="0.0108%" height="15" fill="rgb(248,140,14)" fg:x="33045" fg:w="5"/><text x="71.5968%" y="591.50"></text></g><g><title>swoole::http::Context::set_header (6 samples, 0.01%)</title><rect x="71.3576%" y="581" width="0.0130%" height="15" fill="rgb(253,22,42)" fg:x="33050" fg:w="6"/><text x="71.6076%" y="591.50"></text></g><g><title>swoole::http_server::Request::get_protocol (223 samples, 0.48%)</title><rect x="71.3706%" y="581" width="0.4815%" height="15" fill="rgb(234,61,47)" fg:x="33056" fg:w="223"/><text x="71.6206%" y="591.50"></text></g><g><title>swoole::http_server::Request::parse_header_info (16 samples, 0.03%)</title><rect x="71.8521%" y="581" width="0.0345%" height="15" fill="rgb(208,226,15)" fg:x="33279" fg:w="16"/><text x="72.1021%" y="591.50"></text></g><g><title>swoole_strcasect (11 samples, 0.02%)</title><rect x="71.8629%" y="565" width="0.0237%" height="15" fill="rgb(217,221,4)" fg:x="33284" fg:w="11"/><text x="72.1129%" y="575.50"></text></g><g><title>swoole::microtime (5 samples, 0.01%)</title><rect x="71.8866%" y="581" width="0.0108%" height="15" fill="rgb(212,174,34)" fg:x="33295" fg:w="5"/><text x="72.1366%" y="591.50"></text></g><g><title>swoole::network::Address::get_port (116 samples, 0.25%)</title><rect x="71.8974%" y="581" width="0.2505%" height="15" fill="rgb(253,83,4)" fg:x="33300" fg:w="116"/><text x="72.1474%" y="591.50"></text></g><g><title>swoole::network::Socket::recv (106 samples, 0.23%)</title><rect x="72.1479%" y="581" width="0.2289%" height="15" fill="rgb(250,195,49)" fg:x="33416" fg:w="106"/><text x="72.3979%" y="591.50"></text></g><g><title>swoole_http_parser_execute (9 samples, 0.02%)</title><rect x="72.3789%" y="581" width="0.0194%" height="15" fill="rgb(241,192,25)" fg:x="33523" fg:w="9"/><text x="72.6289%" y="591.50"></text></g><g><title>swoole_isset_hook (99 samples, 0.21%)</title><rect x="72.4005%" y="581" width="0.2137%" height="15" fill="rgb(208,124,10)" fg:x="33533" fg:w="99"/><text x="72.6505%" y="591.50"></text></g><g><title>vfprintf (288 samples, 0.62%)</title><rect x="72.6185%" y="581" width="0.6218%" height="15" fill="rgb(222,33,0)" fg:x="33634" fg:w="288"/><text x="72.8685%" y="591.50"></text></g><g><title>zend::function::call (12 samples, 0.03%)</title><rect x="73.2447%" y="581" width="0.0259%" height="15" fill="rgb(234,209,28)" fg:x="33924" fg:w="12"/><text x="73.4947%" y="591.50"></text></g><g><title>i_zval_ptr_dtor (31 samples, 0.07%)</title><rect x="73.4174%" y="565" width="0.0669%" height="15" fill="rgb(224,11,23)" fg:x="34004" fg:w="31"/><text x="73.6674%" y="575.50"></text></g><g><title>zend_array_destroy (114 samples, 0.25%)</title><rect x="73.2706%" y="581" width="0.2461%" height="15" fill="rgb(232,99,1)" fg:x="33936" fg:w="114"/><text x="73.5206%" y="591.50"></text></g><g><title>zend_string_release_ex (15 samples, 0.03%)</title><rect x="73.4843%" y="565" width="0.0324%" height="15" fill="rgb(237,95,45)" fg:x="34035" fg:w="15"/><text x="73.7343%" y="575.50"></text></g><g><title>zend_call_known_function (6 samples, 0.01%)</title><rect x="73.5210%" y="581" width="0.0130%" height="15" fill="rgb(208,109,11)" fg:x="34052" fg:w="6"/><text x="73.7710%" y="591.50"></text></g><g><title>zend_string_equal_content (5 samples, 0.01%)</title><rect x="73.6225%" y="549" width="0.0108%" height="15" fill="rgb(216,190,48)" fg:x="34099" fg:w="5"/><text x="73.8725%" y="559.50"></text></g><g><title>zend_hash_find (43 samples, 0.09%)</title><rect x="73.5448%" y="581" width="0.0928%" height="15" fill="rgb(251,171,36)" fg:x="34063" fg:w="43"/><text x="73.7948%" y="591.50"></text></g><g><title>zend_hash_find_bucket (7 samples, 0.02%)</title><rect x="73.6225%" y="565" width="0.0151%" height="15" fill="rgb(230,62,22)" fg:x="34099" fg:w="7"/><text x="73.8725%" y="575.50"></text></g><g><title>zend_hash_func (8 samples, 0.02%)</title><rect x="73.6376%" y="581" width="0.0173%" height="15" fill="rgb(225,114,35)" fg:x="34106" fg:w="8"/><text x="73.8876%" y="591.50"></text></g><g><title>zend_hash_str_update (42 samples, 0.09%)</title><rect x="73.6571%" y="581" width="0.0907%" height="15" fill="rgb(215,118,42)" fg:x="34115" fg:w="42"/><text x="73.9071%" y="591.50"></text></g><g><title>zend_mm_free_pages (57 samples, 0.12%)</title><rect x="73.7564%" y="581" width="0.1231%" height="15" fill="rgb(243,119,21)" fg:x="34161" fg:w="57"/><text x="74.0064%" y="591.50"></text></g><g><title>zend_object_std_dtor (5 samples, 0.01%)</title><rect x="73.8816%" y="581" width="0.0108%" height="15" fill="rgb(252,177,53)" fg:x="34219" fg:w="5"/><text x="74.1316%" y="591.50"></text></g><g><title>zend_objects_destroy_object (6 samples, 0.01%)</title><rect x="73.8924%" y="581" width="0.0130%" height="15" fill="rgb(237,209,29)" fg:x="34224" fg:w="6"/><text x="74.1424%" y="591.50"></text></g><g><title>zend_string_init (10 samples, 0.02%)</title><rect x="73.9701%" y="565" width="0.0216%" height="15" fill="rgb(212,65,23)" fg:x="34260" fg:w="10"/><text x="74.2201%" y="575.50"></text></g><g><title>zend_string_alloc (7 samples, 0.02%)</title><rect x="73.9766%" y="549" width="0.0151%" height="15" fill="rgb(230,222,46)" fg:x="34263" fg:w="7"/><text x="74.2266%" y="559.50"></text></g><g><title>zend_read_property (40 samples, 0.09%)</title><rect x="73.9118%" y="581" width="0.0864%" height="15" fill="rgb(215,135,32)" fg:x="34233" fg:w="40"/><text x="74.1618%" y="591.50"></text></g><g><title>zend_std_write_property (52 samples, 0.11%)</title><rect x="74.0111%" y="581" width="0.1123%" height="15" fill="rgb(246,101,22)" fg:x="34279" fg:w="52"/><text x="74.2611%" y="591.50"></text></g><g><title>zend_str_tolower_dup (130 samples, 0.28%)</title><rect x="74.1234%" y="581" width="0.2807%" height="15" fill="rgb(206,107,13)" fg:x="34331" fg:w="130"/><text x="74.3734%" y="591.50"></text></g><g><title>zend_string_init (11 samples, 0.02%)</title><rect x="74.5228%" y="565" width="0.0237%" height="15" fill="rgb(250,100,44)" fg:x="34516" fg:w="11"/><text x="74.7728%" y="575.50"></text></g><g><title>zend_update_property (63 samples, 0.14%)</title><rect x="74.4127%" y="581" width="0.1360%" height="15" fill="rgb(231,147,38)" fg:x="34465" fg:w="63"/><text x="74.6627%" y="591.50"></text></g><g><title>zend_update_property_long (18 samples, 0.04%)</title><rect x="74.5488%" y="581" width="0.0389%" height="15" fill="rgb(229,8,40)" fg:x="34528" fg:w="18"/><text x="74.7988%" y="591.50"></text></g><g><title>[unknown] (29,507 samples, 63.71%)</title><rect x="10.9055%" y="597" width="63.7080%" height="15" fill="rgb(221,135,30)" fg:x="5051" fg:w="29507"/><text x="11.1555%" y="607.50">[unknown]</text></g><g><title>__clock_gettime (186 samples, 0.40%)</title><rect x="74.6135%" y="597" width="0.4016%" height="15" fill="rgb(249,193,18)" fg:x="34558" fg:w="186"/><text x="74.8635%" y="607.50"></text></g><g><title>__cp_begin (48 samples, 0.10%)</title><rect x="75.0151%" y="597" width="0.1036%" height="15" fill="rgb(209,133,39)" fg:x="34744" fg:w="48"/><text x="75.2651%" y="607.50"></text></g><g><title>__cp_end (147 samples, 0.32%)</title><rect x="75.1187%" y="597" width="0.3174%" height="15" fill="rgb(232,100,14)" fg:x="34792" fg:w="147"/><text x="75.3687%" y="607.50"></text></g><g><title>__clock_gettime (18 samples, 0.04%)</title><rect x="75.4361%" y="581" width="0.0389%" height="15" fill="rgb(224,185,1)" fg:x="34939" fg:w="18"/><text x="75.6861%" y="591.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.04%)</title><rect x="75.4361%" y="565" width="0.0389%" height="15" fill="rgb(223,139,8)" fg:x="34939" fg:w="18"/><text x="75.6861%" y="575.50"></text></g><g><title>__gmpn_invert_limb_table (19 samples, 0.04%)</title><rect x="75.4361%" y="597" width="0.0410%" height="15" fill="rgb(232,213,38)" fg:x="34939" fg:w="19"/><text x="75.6861%" y="607.50"></text></g><g><title>__strchrnul (8 samples, 0.02%)</title><rect x="75.4923%" y="597" width="0.0173%" height="15" fill="rgb(207,94,22)" fg:x="34965" fg:w="8"/><text x="75.7423%" y="607.50"></text></g><g><title>__syscall_cp (44 samples, 0.09%)</title><rect x="75.5095%" y="597" width="0.0950%" height="15" fill="rgb(219,183,54)" fg:x="34973" fg:w="44"/><text x="75.7595%" y="607.50"></text></g><g><title>__syscall_cp_c (124 samples, 0.27%)</title><rect x="75.6045%" y="597" width="0.2677%" height="15" fill="rgb(216,185,54)" fg:x="35017" fg:w="124"/><text x="75.8545%" y="607.50"></text></g><g><title>__syscall_ret (70 samples, 0.15%)</title><rect x="75.8723%" y="597" width="0.1511%" height="15" fill="rgb(254,217,39)" fg:x="35141" fg:w="70"/><text x="76.1223%" y="607.50"></text></g><g><title>_setjmp (57 samples, 0.12%)</title><rect x="76.0493%" y="597" width="0.1231%" height="15" fill="rgb(240,178,23)" fg:x="35223" fg:w="57"/><text x="76.2993%" y="607.50"></text></g><g><title>_start (7 samples, 0.02%)</title><rect x="76.1724%" y="597" width="0.0151%" height="15" fill="rgb(218,11,47)" fg:x="35280" fg:w="7"/><text x="76.4224%" y="607.50"></text></g><g><title>epoll_pwait (18 samples, 0.04%)</title><rect x="76.1897%" y="597" width="0.0389%" height="15" fill="rgb(218,51,51)" fg:x="35288" fg:w="18"/><text x="76.4397%" y="607.50"></text></g><g><title>epoll_wait (10 samples, 0.02%)</title><rect x="76.2285%" y="597" width="0.0216%" height="15" fill="rgb(238,126,27)" fg:x="35306" fg:w="10"/><text x="76.4785%" y="607.50"></text></g><g><title>getint (68 samples, 0.15%)</title><rect x="76.2523%" y="597" width="0.1468%" height="15" fill="rgb(249,202,22)" fg:x="35317" fg:w="68"/><text x="76.5023%" y="607.50"></text></g><g><title>gettimeofday (76 samples, 0.16%)</title><rect x="76.3991%" y="597" width="0.1641%" height="15" fill="rgb(254,195,49)" fg:x="35385" fg:w="76"/><text x="76.6491%" y="607.50"></text></g><g><title>inet_ntop (269 samples, 0.58%)</title><rect x="76.5632%" y="597" width="0.5808%" height="15" fill="rgb(208,123,14)" fg:x="35461" fg:w="269"/><text x="76.8132%" y="607.50"></text></g><g><title>isspace (92 samples, 0.20%)</title><rect x="77.1461%" y="597" width="0.1986%" height="15" fill="rgb(224,200,8)" fg:x="35731" fg:w="92"/><text x="77.3961%" y="607.50"></text></g><g><title>libc_start_init (7 samples, 0.02%)</title><rect x="77.3448%" y="597" width="0.0151%" height="15" fill="rgb(217,61,36)" fg:x="35823" fg:w="7"/><text x="77.5948%" y="607.50"></text></g><g><title>zend_ast_destroy (5 samples, 0.01%)</title><rect x="77.3599%" y="341" width="0.0108%" height="15" fill="rgb(206,35,45)" fg:x="35830" fg:w="5"/><text x="77.6099%" y="351.50"></text></g><g><title>zend_ast_destroy (6 samples, 0.01%)</title><rect x="77.3599%" y="405" width="0.0130%" height="15" fill="rgb(217,65,33)" fg:x="35830" fg:w="6"/><text x="77.6099%" y="415.50"></text></g><g><title>zend_ast_destroy (6 samples, 0.01%)</title><rect x="77.3599%" y="389" width="0.0130%" height="15" fill="rgb(222,158,48)" fg:x="35830" fg:w="6"/><text x="77.6099%" y="399.50"></text></g><g><title>zend_ast_destroy (6 samples, 0.01%)</title><rect x="77.3599%" y="373" width="0.0130%" height="15" fill="rgb(254,2,54)" fg:x="35830" fg:w="6"/><text x="77.6099%" y="383.50"></text></g><g><title>zend_ast_destroy (6 samples, 0.01%)</title><rect x="77.3599%" y="357" width="0.0130%" height="15" fill="rgb(250,143,38)" fg:x="35830" fg:w="6"/><text x="77.6099%" y="367.50"></text></g><g><title>zend_compile_func_decl (10 samples, 0.02%)</title><rect x="77.3750%" y="309" width="0.0216%" height="15" fill="rgb(248,25,0)" fg:x="35837" fg:w="10"/><text x="77.6250%" y="319.50"></text></g><g><title>zend_compile_params (6 samples, 0.01%)</title><rect x="77.3836%" y="293" width="0.0130%" height="15" fill="rgb(206,152,27)" fg:x="35841" fg:w="6"/><text x="77.6336%" y="303.50"></text></g><g><title>zend_compile_class_decl (14 samples, 0.03%)</title><rect x="77.3728%" y="373" width="0.0302%" height="15" fill="rgb(240,77,30)" fg:x="35836" fg:w="14"/><text x="77.6228%" y="383.50"></text></g><g><title>zend_compile_stmt (14 samples, 0.03%)</title><rect x="77.3728%" y="357" width="0.0302%" height="15" fill="rgb(231,5,3)" fg:x="35836" fg:w="14"/><text x="77.6228%" y="367.50"></text></g><g><title>zend_compile_stmt_list (14 samples, 0.03%)</title><rect x="77.3728%" y="341" width="0.0302%" height="15" fill="rgb(207,226,32)" fg:x="35836" fg:w="14"/><text x="77.6228%" y="351.50"></text></g><g><title>zend_compile_stmt (14 samples, 0.03%)</title><rect x="77.3728%" y="325" width="0.0302%" height="15" fill="rgb(222,207,47)" fg:x="35836" fg:w="14"/><text x="77.6228%" y="335.50"></text></g><g><title>swoole_compile_string (24 samples, 0.05%)</title><rect x="77.3599%" y="453" width="0.0518%" height="15" fill="rgb(229,115,45)" fg:x="35830" fg:w="24"/><text x="77.6099%" y="463.50"></text></g><g><title>compile_string (24 samples, 0.05%)</title><rect x="77.3599%" y="437" width="0.0518%" height="15" fill="rgb(224,191,6)" fg:x="35830" fg:w="24"/><text x="77.6099%" y="447.50"></text></g><g><title>zend_compile (24 samples, 0.05%)</title><rect x="77.3599%" y="421" width="0.0518%" height="15" fill="rgb(230,227,24)" fg:x="35830" fg:w="24"/><text x="77.6099%" y="431.50"></text></g><g><title>zend_compile_top_stmt (18 samples, 0.04%)</title><rect x="77.3728%" y="405" width="0.0389%" height="15" fill="rgb(228,80,19)" fg:x="35836" fg:w="18"/><text x="77.6228%" y="415.50"></text></g><g><title>zend_compile_top_stmt (18 samples, 0.04%)</title><rect x="77.3728%" y="389" width="0.0389%" height="15" fill="rgb(247,229,0)" fg:x="35836" fg:w="18"/><text x="77.6228%" y="399.50"></text></g><g><title>do_cli (25 samples, 0.05%)</title><rect x="77.3599%" y="565" width="0.0540%" height="15" fill="rgb(237,194,15)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="575.50"></text></g><g><title>php_request_startup (25 samples, 0.05%)</title><rect x="77.3599%" y="549" width="0.0540%" height="15" fill="rgb(219,203,20)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="559.50"></text></g><g><title>zend_activate_modules (25 samples, 0.05%)</title><rect x="77.3599%" y="533" width="0.0540%" height="15" fill="rgb(234,128,8)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="543.50"></text></g><g><title>zm_activate_swoole (25 samples, 0.05%)</title><rect x="77.3599%" y="517" width="0.0540%" height="15" fill="rgb(248,202,8)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="527.50"></text></g><g><title>php_swoole_load_library (25 samples, 0.05%)</title><rect x="77.3599%" y="501" width="0.0540%" height="15" fill="rgb(206,104,37)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="511.50"></text></g><g><title>zend::eval (25 samples, 0.05%)</title><rect x="77.3599%" y="485" width="0.0540%" height="15" fill="rgb(223,8,27)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="495.50"></text></g><g><title>zend_eval_stringl (25 samples, 0.05%)</title><rect x="77.3599%" y="469" width="0.0540%" height="15" fill="rgb(216,217,28)" fg:x="35830" fg:w="25"/><text x="77.6099%" y="479.50"></text></g><g><title>php_register_extensions (5 samples, 0.01%)</title><rect x="77.4139%" y="533" width="0.0108%" height="15" fill="rgb(249,199,1)" fg:x="35855" fg:w="5"/><text x="77.6639%" y="543.50"></text></g><g><title>zend_register_module_ex (5 samples, 0.01%)</title><rect x="77.4139%" y="517" width="0.0108%" height="15" fill="rgb(240,85,17)" fg:x="35855" fg:w="5"/><text x="77.6639%" y="527.50"></text></g><g><title>zend_register_functions (5 samples, 0.01%)</title><rect x="77.4139%" y="501" width="0.0108%" height="15" fill="rgb(206,108,45)" fg:x="35855" fg:w="5"/><text x="77.6639%" y="511.50"></text></g><g><title>zm_startup_openssl (13 samples, 0.03%)</title><rect x="77.4657%" y="485" width="0.0281%" height="15" fill="rgb(245,210,41)" fg:x="35879" fg:w="13"/><text x="77.7157%" y="495.50"></text></g><g><title>OPENSSL_init_ssl (13 samples, 0.03%)</title><rect x="77.4657%" y="469" width="0.0281%" height="15" fill="rgb(206,13,37)" fg:x="35879" fg:w="13"/><text x="77.7157%" y="479.50"></text></g><g><title>OPENSSL_init_crypto (13 samples, 0.03%)</title><rect x="77.4657%" y="453" width="0.0281%" height="15" fill="rgb(250,61,18)" fg:x="35879" fg:w="13"/><text x="77.7157%" y="463.50"></text></g><g><title>CRYPTO_THREAD_run_once (13 samples, 0.03%)</title><rect x="77.4657%" y="437" width="0.0281%" height="15" fill="rgb(235,172,48)" fg:x="35879" fg:w="13"/><text x="77.7157%" y="447.50"></text></g><g><title>ossl_init_config_ossl_ (12 samples, 0.03%)</title><rect x="77.4678%" y="421" width="0.0259%" height="15" fill="rgb(249,201,17)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="431.50"></text></g><g><title>openssl_config_int (12 samples, 0.03%)</title><rect x="77.4678%" y="405" width="0.0259%" height="15" fill="rgb(219,208,6)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="415.50"></text></g><g><title>OPENSSL_init_crypto (12 samples, 0.03%)</title><rect x="77.4678%" y="389" width="0.0259%" height="15" fill="rgb(248,31,23)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="399.50"></text></g><g><title>CRYPTO_THREAD_run_once (12 samples, 0.03%)</title><rect x="77.4678%" y="373" width="0.0259%" height="15" fill="rgb(245,15,42)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="383.50"></text></g><g><title>ossl_init_engine_dynamic_ossl_ (12 samples, 0.03%)</title><rect x="77.4678%" y="357" width="0.0259%" height="15" fill="rgb(222,217,39)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="367.50"></text></g><g><title>ERR_clear_error (12 samples, 0.03%)</title><rect x="77.4678%" y="341" width="0.0259%" height="15" fill="rgb(210,219,27)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="351.50"></text></g><g><title>ERR_get_state (12 samples, 0.03%)</title><rect x="77.4678%" y="325" width="0.0259%" height="15" fill="rgb(252,166,36)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="335.50"></text></g><g><title>OPENSSL_init_crypto (12 samples, 0.03%)</title><rect x="77.4678%" y="309" width="0.0259%" height="15" fill="rgb(245,132,34)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="319.50"></text></g><g><title>CRYPTO_THREAD_run_once (12 samples, 0.03%)</title><rect x="77.4678%" y="293" width="0.0259%" height="15" fill="rgb(236,54,3)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="303.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (12 samples, 0.03%)</title><rect x="77.4678%" y="277" width="0.0259%" height="15" fill="rgb(241,173,43)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="287.50"></text></g><g><title>err_load_crypto_strings_int (12 samples, 0.03%)</title><rect x="77.4678%" y="261" width="0.0259%" height="15" fill="rgb(215,190,9)" fg:x="35880" fg:w="12"/><text x="77.7178%" y="271.50"></text></g><g><title>zm_startup_swoole (10 samples, 0.02%)</title><rect x="77.5089%" y="485" width="0.0216%" height="15" fill="rgb(242,101,16)" fg:x="35899" fg:w="10"/><text x="77.7589%" y="495.50"></text></g><g><title>zend_hash_apply (50 samples, 0.11%)</title><rect x="77.4290%" y="533" width="0.1080%" height="15" fill="rgb(223,190,21)" fg:x="35862" fg:w="50"/><text x="77.6790%" y="543.50"></text></g><g><title>zend_startup_module_zval (50 samples, 0.11%)</title><rect x="77.4290%" y="517" width="0.1080%" height="15" fill="rgb(215,228,25)" fg:x="35862" fg:w="50"/><text x="77.6790%" y="527.50"></text></g><g><title>zend_startup_module_ex (50 samples, 0.11%)</title><rect x="77.4290%" y="501" width="0.1080%" height="15" fill="rgb(225,36,22)" fg:x="35862" fg:w="50"/><text x="77.6790%" y="511.50"></text></g><g><title>libc_start_main_stage2 (84 samples, 0.18%)</title><rect x="77.3599%" y="597" width="0.1814%" height="15" fill="rgb(251,106,46)" fg:x="35830" fg:w="84"/><text x="77.6099%" y="607.50"></text></g><g><title>main (84 samples, 0.18%)</title><rect x="77.3599%" y="581" width="0.1814%" height="15" fill="rgb(208,90,1)" fg:x="35830" fg:w="84"/><text x="77.6099%" y="591.50"></text></g><g><title>php_cli_startup (59 samples, 0.13%)</title><rect x="77.4139%" y="565" width="0.1274%" height="15" fill="rgb(243,10,4)" fg:x="35855" fg:w="59"/><text x="77.6639%" y="575.50"></text></g><g><title>php_module_startup (59 samples, 0.13%)</title><rect x="77.4139%" y="549" width="0.1274%" height="15" fill="rgb(212,137,27)" fg:x="35855" fg:w="59"/><text x="77.6639%" y="559.50"></text></g><g><title>memcpy (1,745 samples, 3.77%)</title><rect x="77.5434%" y="597" width="3.7676%" height="15" fill="rgb(231,220,49)" fg:x="35915" fg:w="1745"/><text x="77.7934%" y="607.50">memc..</text></g><g><title>memset (189 samples, 0.41%)</title><rect x="81.3110%" y="597" width="0.4081%" height="15" fill="rgb(237,96,20)" fg:x="37660" fg:w="189"/><text x="81.5610%" y="607.50"></text></g><g><title>ntohs (9 samples, 0.02%)</title><rect x="81.7191%" y="597" width="0.0194%" height="15" fill="rgb(239,229,30)" fg:x="37849" fg:w="9"/><text x="81.9691%" y="607.50"></text></g><g><title>printf_core (769 samples, 1.66%)</title><rect x="81.7471%" y="597" width="1.6603%" height="15" fill="rgb(219,65,33)" fg:x="37862" fg:w="769"/><text x="81.9971%" y="607.50"></text></g><g><title>recv (22 samples, 0.05%)</title><rect x="83.4075%" y="597" width="0.0475%" height="15" fill="rgb(243,134,7)" fg:x="38631" fg:w="22"/><text x="83.6575%" y="607.50"></text></g><g><title>recvfrom (19 samples, 0.04%)</title><rect x="83.4550%" y="597" width="0.0410%" height="15" fill="rgb(216,177,54)" fg:x="38653" fg:w="19"/><text x="83.7050%" y="607.50"></text></g><g><title>__alt_socketcall (10 samples, 0.02%)</title><rect x="83.4744%" y="581" width="0.0216%" height="15" fill="rgb(211,160,20)" fg:x="38662" fg:w="10"/><text x="83.7244%" y="591.50"></text></g><g><title>send (39 samples, 0.08%)</title><rect x="83.4960%" y="597" width="0.0842%" height="15" fill="rgb(239,85,39)" fg:x="38672" fg:w="39"/><text x="83.7460%" y="607.50"></text></g><g><title>sendto (68 samples, 0.15%)</title><rect x="83.5802%" y="597" width="0.1468%" height="15" fill="rgb(232,125,22)" fg:x="38711" fg:w="68"/><text x="83.8302%" y="607.50"></text></g><g><title>__alt_socketcall (11 samples, 0.02%)</title><rect x="83.7033%" y="581" width="0.0237%" height="15" fill="rgb(244,57,34)" fg:x="38768" fg:w="11"/><text x="83.9533%" y="591.50"></text></g><g><title>sigsetjmp (35 samples, 0.08%)</title><rect x="83.7270%" y="597" width="0.0756%" height="15" fill="rgb(214,203,32)" fg:x="38779" fg:w="35"/><text x="83.9770%" y="607.50"></text></g><g><title>sn_write (77 samples, 0.17%)</title><rect x="83.8026%" y="597" width="0.1662%" height="15" fill="rgb(207,58,43)" fg:x="38814" fg:w="77"/><text x="84.0526%" y="607.50"></text></g><g><title>snprintf (90 samples, 0.19%)</title><rect x="83.9688%" y="597" width="0.1943%" height="15" fill="rgb(215,193,15)" fg:x="38891" fg:w="90"/><text x="84.2188%" y="607.50"></text></g><g><title>strlen (247 samples, 0.53%)</title><rect x="84.1675%" y="597" width="0.5333%" height="15" fill="rgb(232,15,44)" fg:x="38983" fg:w="247"/><text x="84.4175%" y="607.50"></text></g><g><title>strncasecmp (328 samples, 0.71%)</title><rect x="84.7008%" y="597" width="0.7082%" height="15" fill="rgb(212,3,48)" fg:x="39230" fg:w="328"/><text x="84.9508%" y="607.50"></text></g><g><title>swoole_jump_fcontext (161 samples, 0.35%)</title><rect x="85.4154%" y="597" width="0.3476%" height="15" fill="rgb(218,128,7)" fg:x="39561" fg:w="161"/><text x="85.6654%" y="607.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_invoke (15 samples, 0.03%)</title><rect x="85.9206%" y="549" width="0.0324%" height="15" fill="rgb(226,216,39)" fg:x="39795" fg:w="15"/><text x="86.1706%" y="559.50"></text></g><g><title>std::__invoke_r&lt;void, void (*&amp;)(void*), void*&gt; (6 samples, 0.01%)</title><rect x="85.9401%" y="533" width="0.0130%" height="15" fill="rgb(243,47,51)" fg:x="39804" fg:w="6"/><text x="86.1901%" y="543.50"></text></g><g><title>std::__invoke_impl&lt;void, void (*&amp;)(void*), void*&gt; (6 samples, 0.01%)</title><rect x="85.9401%" y="517" width="0.0130%" height="15" fill="rgb(241,183,40)" fg:x="39804" fg:w="6"/><text x="86.1901%" y="527.50"></text></g><g><title>swoole::Server::get_connection_by_session_id (25 samples, 0.05%)</title><rect x="88.0754%" y="437" width="0.0540%" height="15" fill="rgb(231,217,32)" fg:x="40793" fg:w="25"/><text x="88.3254%" y="447.50"></text></g><g><title>swoole::Server::get_connection_fd (22 samples, 0.05%)</title><rect x="88.0819%" y="421" width="0.0475%" height="15" fill="rgb(229,61,38)" fg:x="40796" fg:w="22"/><text x="88.3319%" y="431.50"></text></g><g><title>http_context_send_data (501 samples, 1.08%)</title><rect x="87.1362%" y="485" width="1.0817%" height="15" fill="rgb(225,210,5)" fg:x="40358" fg:w="501"/><text x="87.3862%" y="495.50"></text></g><g><title>swoole::Server::send (464 samples, 1.00%)</title><rect x="87.2161%" y="469" width="1.0018%" height="15" fill="rgb(231,79,45)" fg:x="40395" fg:w="464"/><text x="87.4661%" y="479.50"></text></g><g><title>swoole::Server::get_port_by_session_id (96 samples, 0.21%)</title><rect x="88.0106%" y="453" width="0.2073%" height="15" fill="rgb(224,100,7)" fg:x="40763" fg:w="96"/><text x="88.2606%" y="463.50"></text></g><g><title>swoole::Server::get_port_by_fd (41 samples, 0.09%)</title><rect x="88.1294%" y="437" width="0.0885%" height="15" fill="rgb(241,198,18)" fg:x="40818" fg:w="41"/><text x="88.3794%" y="447.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (18 samples, 0.04%)</title><rect x="88.1790%" y="421" width="0.0389%" height="15" fill="rgb(252,97,53)" fg:x="40841" fg:w="18"/><text x="88.4290%" y="431.50"></text></g><g><title>php_swoole_get_send_data (19 samples, 0.04%)</title><rect x="88.2179%" y="485" width="0.0410%" height="15" fill="rgb(220,88,7)" fg:x="40859" fg:w="19"/><text x="88.4679%" y="495.50"></text></g><g><title>swoole::String::append (9 samples, 0.02%)</title><rect x="88.2589%" y="485" width="0.0194%" height="15" fill="rgb(213,176,14)" fg:x="40878" fg:w="9"/><text x="88.5089%" y="495.50"></text></g><g><title>http_set_date_header (12 samples, 0.03%)</title><rect x="88.8224%" y="469" width="0.0259%" height="15" fill="rgb(246,73,7)" fg:x="41139" fg:w="12"/><text x="89.0724%" y="479.50"></text></g><g><title>String (18 samples, 0.04%)</title><rect x="88.8591%" y="453" width="0.0389%" height="15" fill="rgb(245,64,36)" fg:x="41156" fg:w="18"/><text x="89.1091%" y="463.50"></text></g><g><title>zval_get_string (18 samples, 0.04%)</title><rect x="88.8591%" y="437" width="0.0389%" height="15" fill="rgb(245,80,10)" fg:x="41156" fg:w="18"/><text x="89.1091%" y="447.50"></text></g><g><title>zend_string_copy (16 samples, 0.03%)</title><rect x="88.8635%" y="421" width="0.0345%" height="15" fill="rgb(232,107,50)" fg:x="41158" fg:w="16"/><text x="89.1135%" y="431.50"></text></g><g><title>swoole::String::append (21 samples, 0.05%)</title><rect x="88.8980%" y="453" width="0.0453%" height="15" fill="rgb(253,3,0)" fg:x="41174" fg:w="21"/><text x="89.1480%" y="463.50"></text></g><g><title>swoole_http_has_crlf (44 samples, 0.09%)</title><rect x="88.9433%" y="453" width="0.0950%" height="15" fill="rgb(212,99,53)" fg:x="41195" fg:w="44"/><text x="89.1933%" y="463.50"></text></g><g><title>zend::String::rtrim (32 samples, 0.07%)</title><rect x="89.0383%" y="453" width="0.0691%" height="15" fill="rgb(249,111,54)" fg:x="41239" fg:w="32"/><text x="89.2883%" y="463.50"></text></g><g><title>swoole::rtrim (17 samples, 0.04%)</title><rect x="89.0707%" y="437" width="0.0367%" height="15" fill="rgb(249,55,30)" fg:x="41254" fg:w="17"/><text x="89.3207%" y="447.50"></text></g><g><title>operator (122 samples, 0.26%)</title><rect x="88.8483%" y="469" width="0.2634%" height="15" fill="rgb(237,47,42)" fg:x="41151" fg:w="122"/><text x="89.0983%" y="479.50"></text></g><g><title>parse_header_name (95 samples, 0.21%)</title><rect x="89.1118%" y="469" width="0.2051%" height="15" fill="rgb(211,20,18)" fg:x="41273" fg:w="95"/><text x="89.3618%" y="479.50"></text></g><g><title>swoole_strcaseeq (45 samples, 0.10%)</title><rect x="89.2197%" y="453" width="0.0972%" height="15" fill="rgb(231,203,46)" fg:x="41323" fg:w="45"/><text x="89.4697%" y="463.50"></text></g><g><title>sw_snprintf (54 samples, 0.12%)</title><rect x="89.3169%" y="469" width="0.1166%" height="15" fill="rgb(237,142,3)" fg:x="41368" fg:w="54"/><text x="89.5669%" y="479.50"></text></g><g><title>sw_zend_read_property_ex (70 samples, 0.15%)</title><rect x="89.4356%" y="469" width="0.1511%" height="15" fill="rgb(241,107,1)" fg:x="41423" fg:w="70"/><text x="89.6856%" y="479.50"></text></g><g><title>zend_read_property_ex (70 samples, 0.15%)</title><rect x="89.4356%" y="453" width="0.1511%" height="15" fill="rgb(229,83,13)" fg:x="41423" fg:w="70"/><text x="89.6856%" y="463.50"></text></g><g><title>zend_std_read_property (63 samples, 0.14%)</title><rect x="89.4507%" y="437" width="0.1360%" height="15" fill="rgb(241,91,40)" fg:x="41430" fg:w="63"/><text x="89.7007%" y="447.50"></text></g><g><title>zend_get_property_offset (55 samples, 0.12%)</title><rect x="89.4680%" y="421" width="0.1187%" height="15" fill="rgb(225,3,45)" fg:x="41438" fg:w="55"/><text x="89.7180%" y="431.50"></text></g><g><title>zend_hash_find (32 samples, 0.07%)</title><rect x="89.5177%" y="405" width="0.0691%" height="15" fill="rgb(244,223,14)" fg:x="41461" fg:w="32"/><text x="89.7677%" y="415.50"></text></g><g><title>zend_hash_find_bucket (31 samples, 0.07%)</title><rect x="89.5198%" y="389" width="0.0669%" height="15" fill="rgb(224,124,37)" fg:x="41462" fg:w="31"/><text x="89.7698%" y="399.50"></text></g><g><title>zend_string_hash_val (6 samples, 0.01%)</title><rect x="89.5738%" y="373" width="0.0130%" height="15" fill="rgb(251,171,30)" fg:x="41487" fg:w="6"/><text x="89.8238%" y="383.50"></text></g><g><title>swoole::String::append (37 samples, 0.08%)</title><rect x="89.5868%" y="469" width="0.0799%" height="15" fill="rgb(236,46,54)" fg:x="41493" fg:w="37"/><text x="89.8368%" y="479.50"></text></g><g><title>swoole::http::Context::compress (61 samples, 0.13%)</title><rect x="89.6666%" y="469" width="0.1317%" height="15" fill="rgb(245,213,5)" fg:x="41530" fg:w="61"/><text x="89.9166%" y="479.50"></text></g><g><title>swoole::http::Context::build_header (708 samples, 1.53%)</title><rect x="88.2783%" y="485" width="1.5286%" height="15" fill="rgb(230,144,27)" fg:x="40887" fg:w="708"/><text x="88.5283%" y="495.50"></text></g><g><title>_mi_page_malloc (218 samples, 0.47%)</title><rect x="90.1049%" y="293" width="0.4707%" height="15" fill="rgb(220,86,6)" fg:x="41733" fg:w="218"/><text x="90.3549%" y="303.50"></text></g><g><title>_mi_malloc_generic (254 samples, 0.55%)</title><rect x="90.0812%" y="309" width="0.5484%" height="15" fill="rgb(240,20,13)" fg:x="41722" fg:w="254"/><text x="90.3312%" y="319.50"></text></g><g><title>mi_find_page (25 samples, 0.05%)</title><rect x="90.5756%" y="293" width="0.0540%" height="15" fill="rgb(217,89,34)" fg:x="41951" fg:w="25"/><text x="90.8256%" y="303.50"></text></g><g><title>_Sp_counted_ptr_inplace&lt;int&gt; (380 samples, 0.82%)</title><rect x="89.8135%" y="389" width="0.8205%" height="15" fill="rgb(229,13,5)" fg:x="41598" fg:w="380"/><text x="90.0635%" y="399.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;swoole::String&gt; &gt;::construct&lt;swoole::String, int&gt; (379 samples, 0.82%)</title><rect x="89.8156%" y="373" width="0.8183%" height="15" fill="rgb(244,67,35)" fg:x="41599" fg:w="379"/><text x="90.0656%" y="383.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;swoole::String&gt;::construct&lt;swoole::String, int&gt; (379 samples, 0.82%)</title><rect x="89.8156%" y="357" width="0.8183%" height="15" fill="rgb(221,40,2)" fg:x="41599" fg:w="379"/><text x="90.0656%" y="367.50"></text></g><g><title>String (379 samples, 0.82%)</title><rect x="89.8156%" y="341" width="0.8183%" height="15" fill="rgb(237,157,21)" fg:x="41599" fg:w="379"/><text x="90.0656%" y="351.50"></text></g><g><title>swoole::String::alloc (379 samples, 0.82%)</title><rect x="89.8156%" y="325" width="0.8183%" height="15" fill="rgb(222,94,11)" fg:x="41599" fg:w="379"/><text x="90.0656%" y="335.50"></text></g><g><title>std::make_shared&lt;swoole::String, int&gt; (492 samples, 1.06%)</title><rect x="89.8113%" y="469" width="1.0623%" height="15" fill="rgb(249,113,6)" fg:x="41597" fg:w="492"/><text x="90.0613%" y="479.50"></text></g><g><title>std::allocate_shared&lt;swoole::String, std::allocator&lt;swoole::String&gt;, int&gt; (492 samples, 1.06%)</title><rect x="89.8113%" y="453" width="1.0623%" height="15" fill="rgb(238,137,36)" fg:x="41597" fg:w="492"/><text x="90.0613%" y="463.50"></text></g><g><title>shared_ptr&lt;std::allocator&lt;swoole::String&gt;, int&gt; (492 samples, 1.06%)</title><rect x="89.8113%" y="437" width="1.0623%" height="15" fill="rgb(210,102,26)" fg:x="41597" fg:w="492"/><text x="90.0613%" y="447.50"></text></g><g><title>__shared_ptr&lt;std::allocator&lt;swoole::String&gt;, int&gt; (492 samples, 1.06%)</title><rect x="89.8113%" y="421" width="1.0623%" height="15" fill="rgb(218,30,30)" fg:x="41597" fg:w="492"/><text x="90.0613%" y="431.50"></text></g><g><title>__shared_count&lt;swoole::String, std::allocator&lt;swoole::String&gt;, int&gt; (491 samples, 1.06%)</title><rect x="89.8135%" y="405" width="1.0601%" height="15" fill="rgb(214,67,26)" fg:x="41598" fg:w="491"/><text x="90.0635%" y="415.50"></text></g><g><title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (111 samples, 0.24%)</title><rect x="90.6339%" y="389" width="0.2397%" height="15" fill="rgb(251,9,53)" fg:x="41978" fg:w="111"/><text x="90.8839%" y="399.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (111 samples, 0.24%)</title><rect x="90.6339%" y="373" width="0.2397%" height="15" fill="rgb(228,204,25)" fg:x="41978" fg:w="111"/><text x="90.8839%" y="383.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (111 samples, 0.24%)</title><rect x="90.6339%" y="357" width="0.2397%" height="15" fill="rgb(207,153,8)" fg:x="41978" fg:w="111"/><text x="90.8839%" y="367.50"></text></g><g><title>operator new (110 samples, 0.24%)</title><rect x="90.6361%" y="341" width="0.2375%" height="15" fill="rgb(242,9,16)" fg:x="41979" fg:w="110"/><text x="90.8861%" y="351.50"></text></g><g><title>_mi_malloc_generic (11 samples, 0.02%)</title><rect x="90.8498%" y="325" width="0.0237%" height="15" fill="rgb(217,211,10)" fg:x="42078" fg:w="11"/><text x="91.0998%" y="335.50"></text></g><g><title>mi_find_page (11 samples, 0.02%)</title><rect x="90.8498%" y="309" width="0.0237%" height="15" fill="rgb(219,228,52)" fg:x="42078" fg:w="11"/><text x="91.0998%" y="319.50"></text></g><g><title>swoole::http::Context::get_write_buffer (496 samples, 1.07%)</title><rect x="89.8070%" y="485" width="1.0709%" height="15" fill="rgb(231,92,29)" fg:x="41595" fg:w="496"/><text x="90.0570%" y="495.50"></text></g><g><title>swoole::http::Context::end (1,853 samples, 4.00%)</title><rect x="86.8987%" y="501" width="4.0008%" height="15" fill="rgb(232,8,23)" fg:x="40248" fg:w="1853"/><text x="87.1487%" y="511.50">swoo..</text></g><g><title>swoole_pagesize (10 samples, 0.02%)</title><rect x="90.8779%" y="485" width="0.0216%" height="15" fill="rgb(216,211,34)" fg:x="42091" fg:w="10"/><text x="91.1279%" y="495.50"></text></g><g><title>gc_possible_root (40 samples, 0.09%)</title><rect x="90.9167%" y="485" width="0.0864%" height="15" fill="rgb(236,151,0)" fg:x="42109" fg:w="40"/><text x="91.1667%" y="495.50"></text></g><g><title>gc_fetch_unused (15 samples, 0.03%)</title><rect x="90.9707%" y="469" width="0.0324%" height="15" fill="rgb(209,168,3)" fg:x="42134" fg:w="15"/><text x="91.2207%" y="479.50"></text></g><g><title>zend_object_release (68 samples, 0.15%)</title><rect x="90.8995%" y="501" width="0.1468%" height="15" fill="rgb(208,129,28)" fg:x="42101" fg:w="68"/><text x="91.1495%" y="511.50"></text></g><g><title>zend_gc_delref (20 samples, 0.04%)</title><rect x="91.0031%" y="485" width="0.0432%" height="15" fill="rgb(229,78,22)" fg:x="42149" fg:w="20"/><text x="91.2531%" y="495.50"></text></g><g><title>zend_vm_stack_free_args (57 samples, 0.12%)</title><rect x="91.0463%" y="501" width="0.1231%" height="15" fill="rgb(228,187,13)" fg:x="42169" fg:w="57"/><text x="91.2963%" y="511.50"></text></g><g><title>zval_ptr_dtor_nogc (10 samples, 0.02%)</title><rect x="91.1478%" y="485" width="0.0216%" height="15" fill="rgb(240,119,24)" fg:x="42216" fg:w="10"/><text x="91.3978%" y="495.50"></text></g><g><title>zend_vm_stack_free_call_frame (7 samples, 0.02%)</title><rect x="91.1694%" y="501" width="0.0151%" height="15" fill="rgb(209,194,42)" fg:x="42226" fg:w="7"/><text x="91.4194%" y="511.50"></text></g><g><title>zend_vm_stack_free_call_frame_ex (7 samples, 0.02%)</title><rect x="91.1694%" y="485" width="0.0151%" height="15" fill="rgb(247,200,46)" fg:x="42226" fg:w="7"/><text x="91.4194%" y="495.50"></text></g><g><title>php_swoole_http_response_get_and_check_context (5 samples, 0.01%)</title><rect x="91.1974%" y="485" width="0.0108%" height="15" fill="rgb(218,76,16)" fg:x="42239" fg:w="5"/><text x="91.4474%" y="495.50"></text></g><g><title>swoole_http_server_onAfterResponse (111 samples, 0.24%)</title><rect x="91.2082%" y="485" width="0.2397%" height="15" fill="rgb(225,21,48)" fg:x="42244" fg:w="111"/><text x="91.4582%" y="495.50"></text></g><g><title>std::queue&lt;swoole::http::Context*, std::deque&lt;swoole::http::Context*, std::allocator&lt;swoole::http::Context*&gt; &gt; &gt;::empty (9 samples, 0.02%)</title><rect x="91.4284%" y="469" width="0.0194%" height="15" fill="rgb(239,223,50)" fg:x="42346" fg:w="9"/><text x="91.6784%" y="479.50"></text></g><g><title>std::deque&lt;swoole::http::Context*, std::allocator&lt;swoole::http::Context*&gt; &gt;::empty (9 samples, 0.02%)</title><rect x="91.4284%" y="453" width="0.0194%" height="15" fill="rgb(244,45,21)" fg:x="42346" fg:w="9"/><text x="91.6784%" y="463.50"></text></g><g><title>std::operator== (9 samples, 0.02%)</title><rect x="91.4284%" y="437" width="0.0194%" height="15" fill="rgb(232,33,43)" fg:x="42346" fg:w="9"/><text x="91.6784%" y="447.50"></text></g><g><title>zim_swoole_http_response_end (125 samples, 0.27%)</title><rect x="91.1845%" y="501" width="0.2699%" height="15" fill="rgb(209,8,3)" fg:x="42233" fg:w="125"/><text x="91.4345%" y="511.50"></text></g><g><title>php_swoole_http_response_get_and_check_context (48 samples, 0.10%)</title><rect x="91.5083%" y="485" width="0.1036%" height="15" fill="rgb(214,25,53)" fg:x="42383" fg:w="48"/><text x="91.7583%" y="495.50"></text></g><g><title>php_swoole_http_response_get_context (47 samples, 0.10%)</title><rect x="91.5105%" y="469" width="0.1015%" height="15" fill="rgb(254,186,54)" fg:x="42384" fg:w="47"/><text x="91.7605%" y="479.50"></text></g><g><title>php_swoole_http_response_fetch_object (12 samples, 0.03%)</title><rect x="91.5861%" y="453" width="0.0259%" height="15" fill="rgb(208,174,49)" fg:x="42419" fg:w="12"/><text x="91.8361%" y="463.50"></text></g><g><title>zend_hash_real_init_mixed (32 samples, 0.07%)</title><rect x="91.8214%" y="405" width="0.0691%" height="15" fill="rgb(233,191,51)" fg:x="42528" fg:w="32"/><text x="92.0714%" y="415.50"></text></g><g><title>zend_hash_real_init_mixed_ex (31 samples, 0.07%)</title><rect x="91.8236%" y="389" width="0.0669%" height="15" fill="rgb(222,134,10)" fg:x="42529" fg:w="31"/><text x="92.0736%" y="399.50"></text></g><g><title>_emalloc_320 (23 samples, 0.05%)</title><rect x="91.8408%" y="373" width="0.0497%" height="15" fill="rgb(230,226,20)" fg:x="42537" fg:w="23"/><text x="92.0908%" y="383.50"></text></g><g><title>zend_mm_alloc_small (20 samples, 0.04%)</title><rect x="91.8473%" y="357" width="0.0432%" height="15" fill="rgb(251,111,25)" fg:x="42540" fg:w="20"/><text x="92.0973%" y="367.50"></text></g><g><title>zend_mm_alloc_small (11 samples, 0.02%)</title><rect x="91.9013%" y="341" width="0.0237%" height="15" fill="rgb(224,40,46)" fg:x="42565" fg:w="11"/><text x="92.1513%" y="351.50"></text></g><g><title>_zend_hash_str_add_or_update_i (78 samples, 0.17%)</title><rect x="91.7631%" y="421" width="0.1684%" height="15" fill="rgb(236,108,47)" fg:x="42501" fg:w="78"/><text x="92.0131%" y="431.50"></text></g><g><title>zend_string_init (19 samples, 0.04%)</title><rect x="91.8905%" y="405" width="0.0410%" height="15" fill="rgb(234,93,0)" fg:x="42560" fg:w="19"/><text x="92.1405%" y="415.50"></text></g><g><title>zend_string_alloc (18 samples, 0.04%)</title><rect x="91.8927%" y="389" width="0.0389%" height="15" fill="rgb(224,213,32)" fg:x="42561" fg:w="18"/><text x="92.1427%" y="399.50"></text></g><g><title>_emalloc (15 samples, 0.03%)</title><rect x="91.8991%" y="373" width="0.0324%" height="15" fill="rgb(251,11,48)" fg:x="42564" fg:w="15"/><text x="92.1491%" y="383.50"></text></g><g><title>zend_mm_alloc_heap (14 samples, 0.03%)</title><rect x="91.9013%" y="357" width="0.0302%" height="15" fill="rgb(236,173,5)" fg:x="42565" fg:w="14"/><text x="92.1513%" y="367.50"></text></g><g><title>add_assoc_zval_ex (155 samples, 0.33%)</title><rect x="91.6832%" y="469" width="0.3347%" height="15" fill="rgb(230,95,12)" fg:x="42464" fg:w="155"/><text x="91.9332%" y="479.50"></text></g><g><title>zend_symtable_str_update (121 samples, 0.26%)</title><rect x="91.7566%" y="453" width="0.2612%" height="15" fill="rgb(232,209,1)" fg:x="42498" fg:w="121"/><text x="92.0066%" y="463.50"></text></g><g><title>zend_hash_str_update (121 samples, 0.26%)</title><rect x="91.7566%" y="437" width="0.2612%" height="15" fill="rgb(232,6,1)" fg:x="42498" fg:w="121"/><text x="92.0066%" y="447.50"></text></g><g><title>zend_hash_func (40 samples, 0.09%)</title><rect x="91.9315%" y="421" width="0.0864%" height="15" fill="rgb(210,224,50)" fg:x="42579" fg:w="40"/><text x="92.1815%" y="431.50"></text></g><g><title>zend_inline_hash_func (40 samples, 0.09%)</title><rect x="91.9315%" y="405" width="0.0864%" height="15" fill="rgb(228,127,35)" fg:x="42579" fg:w="40"/><text x="92.1815%" y="415.50"></text></g><g><title>http_header_key_format (210 samples, 0.45%)</title><rect x="92.0179%" y="469" width="0.4534%" height="15" fill="rgb(245,102,45)" fg:x="42619" fg:w="210"/><text x="92.2679%" y="479.50"></text></g><g><title>sw_tg_buffer (13 samples, 0.03%)</title><rect x="92.4713%" y="469" width="0.0281%" height="15" fill="rgb(214,1,49)" fg:x="42829" fg:w="13"/><text x="92.7213%" y="479.50"></text></g><g><title>swoole_http_has_crlf (47 samples, 0.10%)</title><rect x="92.4994%" y="469" width="0.1015%" height="15" fill="rgb(226,163,40)" fg:x="42842" fg:w="47"/><text x="92.7494%" y="479.50"></text></g><g><title>_emalloc_56 (40 samples, 0.09%)</title><rect x="92.6742%" y="437" width="0.0864%" height="15" fill="rgb(239,212,28)" fg:x="42923" fg:w="40"/><text x="92.9242%" y="447.50"></text></g><g><title>zend_mm_alloc_small (21 samples, 0.05%)</title><rect x="92.7153%" y="421" width="0.0453%" height="15" fill="rgb(220,20,13)" fg:x="42942" fg:w="21"/><text x="92.9653%" y="431.50"></text></g><g><title>_zend_new_array_0 (53 samples, 0.11%)</title><rect x="92.6742%" y="453" width="0.1144%" height="15" fill="rgb(210,164,35)" fg:x="42923" fg:w="53"/><text x="92.9242%" y="463.50"></text></g><g><title>_zend_hash_init_int (13 samples, 0.03%)</title><rect x="92.7606%" y="437" width="0.0281%" height="15" fill="rgb(248,109,41)" fg:x="42963" fg:w="13"/><text x="93.0106%" y="447.50"></text></g><g><title>zend_string_equal_content (8 samples, 0.02%)</title><rect x="92.9851%" y="357" width="0.0173%" height="15" fill="rgb(238,23,50)" fg:x="43067" fg:w="8"/><text x="93.2351%" y="367.50"></text></g><g><title>zend_get_property_offset (101 samples, 0.22%)</title><rect x="92.8750%" y="405" width="0.2181%" height="15" fill="rgb(211,48,49)" fg:x="43016" fg:w="101"/><text x="93.1250%" y="415.50"></text></g><g><title>zend_hash_find (73 samples, 0.16%)</title><rect x="92.9355%" y="389" width="0.1576%" height="15" fill="rgb(223,36,21)" fg:x="43044" fg:w="73"/><text x="93.1855%" y="399.50"></text></g><g><title>zend_hash_find_bucket (73 samples, 0.16%)</title><rect x="92.9355%" y="373" width="0.1576%" height="15" fill="rgb(207,123,46)" fg:x="43044" fg:w="73"/><text x="93.1855%" y="383.50"></text></g><g><title>zend_string_hash_val (42 samples, 0.09%)</title><rect x="93.0024%" y="357" width="0.0907%" height="15" fill="rgb(240,218,32)" fg:x="43075" fg:w="42"/><text x="93.2524%" y="367.50"></text></g><g><title>zend_string_hash_func (42 samples, 0.09%)</title><rect x="93.0024%" y="341" width="0.0907%" height="15" fill="rgb(252,5,43)" fg:x="43075" fg:w="42"/><text x="93.2524%" y="351.50"></text></g><g><title>zend_hash_func (33 samples, 0.07%)</title><rect x="93.0218%" y="325" width="0.0712%" height="15" fill="rgb(252,84,19)" fg:x="43084" fg:w="33"/><text x="93.2718%" y="335.50"></text></g><g><title>zend_inline_hash_func (33 samples, 0.07%)</title><rect x="93.0218%" y="309" width="0.0712%" height="15" fill="rgb(243,152,39)" fg:x="43084" fg:w="33"/><text x="93.2718%" y="319.50"></text></g><g><title>zend_read_property_ex (140 samples, 0.30%)</title><rect x="92.7951%" y="437" width="0.3023%" height="15" fill="rgb(234,160,15)" fg:x="42979" fg:w="140"/><text x="93.0451%" y="447.50"></text></g><g><title>zend_std_read_property (136 samples, 0.29%)</title><rect x="92.8038%" y="421" width="0.2936%" height="15" fill="rgb(237,34,20)" fg:x="42983" fg:w="136"/><text x="93.0538%" y="431.50"></text></g><g><title>zend_mm_alloc_small (15 samples, 0.03%)</title><rect x="93.1082%" y="373" width="0.0324%" height="15" fill="rgb(229,97,13)" fg:x="43124" fg:w="15"/><text x="93.3582%" y="383.50"></text></g><g><title>zend_string_init (26 samples, 0.06%)</title><rect x="93.0974%" y="437" width="0.0561%" height="15" fill="rgb(234,71,50)" fg:x="43119" fg:w="26"/><text x="93.3474%" y="447.50"></text></g><g><title>zend_string_alloc (25 samples, 0.05%)</title><rect x="93.0996%" y="421" width="0.0540%" height="15" fill="rgb(253,155,4)" fg:x="43120" fg:w="25"/><text x="93.3496%" y="431.50"></text></g><g><title>_emalloc (24 samples, 0.05%)</title><rect x="93.1017%" y="405" width="0.0518%" height="15" fill="rgb(222,185,37)" fg:x="43121" fg:w="24"/><text x="93.3517%" y="415.50"></text></g><g><title>zend_mm_alloc_heap (21 samples, 0.05%)</title><rect x="93.1082%" y="389" width="0.0453%" height="15" fill="rgb(251,177,13)" fg:x="43124" fg:w="21"/><text x="93.3582%" y="399.50"></text></g><g><title>zend_mm_small_size_to_bin (6 samples, 0.01%)</title><rect x="93.1406%" y="373" width="0.0130%" height="15" fill="rgb(250,179,40)" fg:x="43139" fg:w="6"/><text x="93.3906%" y="383.50"></text></g><g><title>swoole_http_init_and_read_property (277 samples, 0.60%)</title><rect x="92.6008%" y="469" width="0.5981%" height="15" fill="rgb(242,44,2)" fg:x="42889" fg:w="277"/><text x="92.8508%" y="479.50"></text></g><g><title>zend_read_property (190 samples, 0.41%)</title><rect x="92.7887%" y="453" width="0.4102%" height="15" fill="rgb(216,177,13)" fg:x="42976" fg:w="190"/><text x="93.0387%" y="463.50"></text></g><g><title>zend_string_release_ex (21 samples, 0.05%)</title><rect x="93.1536%" y="437" width="0.0453%" height="15" fill="rgb(216,106,43)" fg:x="43145" fg:w="21"/><text x="93.4036%" y="447.50"></text></g><g><title>_efree (20 samples, 0.04%)</title><rect x="93.1557%" y="421" width="0.0432%" height="15" fill="rgb(216,183,2)" fg:x="43146" fg:w="20"/><text x="93.4057%" y="431.50"></text></g><g><title>zend_mm_free_heap (20 samples, 0.04%)</title><rect x="93.1557%" y="405" width="0.0432%" height="15" fill="rgb(249,75,3)" fg:x="43146" fg:w="20"/><text x="93.4057%" y="415.50"></text></g><g><title>zend_mm_free_small (11 samples, 0.02%)</title><rect x="93.1751%" y="389" width="0.0237%" height="15" fill="rgb(219,67,39)" fg:x="43155" fg:w="11"/><text x="93.4251%" y="399.50"></text></g><g><title>swoole::http::Context::set_header (739 samples, 1.60%)</title><rect x="91.6120%" y="485" width="1.5956%" height="15" fill="rgb(253,228,2)" fg:x="42431" fg:w="739"/><text x="91.8620%" y="495.50"></text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (3,049 samples, 6.58%)</title><rect x="86.6504%" y="517" width="6.5830%" height="15" fill="rgb(235,138,27)" fg:x="40133" fg:w="3049"/><text x="86.9004%" y="527.50">ZEND_DO_F..</text></g><g><title>zim_swoole_http_response_header (824 samples, 1.78%)</title><rect x="91.4544%" y="501" width="1.7791%" height="15" fill="rgb(236,97,51)" fg:x="42358" fg:w="824"/><text x="91.7044%" y="511.50">z..</text></g><g><title>zend_parse_arg_string (12 samples, 0.03%)</title><rect x="93.2075%" y="485" width="0.0259%" height="15" fill="rgb(240,80,30)" fg:x="43170" fg:w="12"/><text x="93.4575%" y="495.50"></text></g><g><title>zend_vm_stack_push_call_frame (8 samples, 0.02%)</title><rect x="93.6134%" y="501" width="0.0173%" height="15" fill="rgb(230,178,19)" fg:x="43358" fg:w="8"/><text x="93.8634%" y="511.50"></text></g><g><title>zend_vm_stack_push_call_frame_ex (6 samples, 0.01%)</title><rect x="93.6178%" y="485" width="0.0130%" height="15" fill="rgb(210,190,27)" fg:x="43360" fg:w="6"/><text x="93.8678%" y="495.50"></text></g><g><title>ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER (185 samples, 0.40%)</title><rect x="93.2334%" y="517" width="0.3994%" height="15" fill="rgb(222,107,31)" fg:x="43182" fg:w="185"/><text x="93.4834%" y="527.50"></text></g><g><title>ZEND_RETURN_SPEC_CONST_HANDLER (277 samples, 0.60%)</title><rect x="93.6329%" y="517" width="0.5981%" height="15" fill="rgb(216,127,34)" fg:x="43367" fg:w="277"/><text x="93.8829%" y="527.50"></text></g><g><title>ZEND_SEND_VAL_EX_SPEC_CONST_UNUSED_QUICK_HANDLER (198 samples, 0.43%)</title><rect x="94.2309%" y="517" width="0.4275%" height="15" fill="rgb(234,116,52)" fg:x="43644" fg:w="198"/><text x="94.4809%" y="527.50"></text></g><g><title>gc_check_possible_root (61 samples, 0.13%)</title><rect x="95.4443%" y="469" width="0.1317%" height="15" fill="rgb(222,124,15)" fg:x="44206" fg:w="61"/><text x="95.6943%" y="479.50"></text></g><g><title>gc_possible_root (54 samples, 0.12%)</title><rect x="95.4595%" y="453" width="0.1166%" height="15" fill="rgb(231,179,28)" fg:x="44213" fg:w="54"/><text x="95.7095%" y="463.50"></text></g><g><title>gc_fetch_unused (32 samples, 0.07%)</title><rect x="95.5070%" y="437" width="0.0691%" height="15" fill="rgb(226,93,45)" fg:x="44235" fg:w="32"/><text x="95.7570%" y="447.50"></text></g><g><title>i_free_compiled_variables (110 samples, 0.24%)</title><rect x="95.3752%" y="501" width="0.2375%" height="15" fill="rgb(215,8,51)" fg:x="44174" fg:w="110"/><text x="95.6252%" y="511.50"></text></g><g><title>i_zval_ptr_dtor (87 samples, 0.19%)</title><rect x="95.4249%" y="485" width="0.1878%" height="15" fill="rgb(223,106,5)" fg:x="44197" fg:w="87"/><text x="95.6749%" y="495.50"></text></g><g><title>zend_gc_delref (17 samples, 0.04%)</title><rect x="95.5760%" y="469" width="0.0367%" height="15" fill="rgb(250,191,5)" fg:x="44267" fg:w="17"/><text x="95.8260%" y="479.50"></text></g><g><title>execute_ex (4,229 samples, 9.13%)</title><rect x="86.5403%" y="533" width="9.1308%" height="15" fill="rgb(242,132,44)" fg:x="40082" fg:w="4229"/><text x="86.7903%" y="543.50">execute_ex</text></g><g><title>zend_leave_helper_SPEC (469 samples, 1.01%)</title><rect x="94.6584%" y="517" width="1.0126%" height="15" fill="rgb(251,152,29)" fg:x="43842" fg:w="469"/><text x="94.9084%" y="527.50"></text></g><g><title>zend_object_release (27 samples, 0.06%)</title><rect x="95.6127%" y="501" width="0.0583%" height="15" fill="rgb(218,179,5)" fg:x="44284" fg:w="27"/><text x="95.8627%" y="511.50"></text></g><g><title>zend_gc_delref (25 samples, 0.05%)</title><rect x="95.6171%" y="485" width="0.0540%" height="15" fill="rgb(227,67,19)" fg:x="44286" fg:w="25"/><text x="95.8671%" y="495.50"></text></g><g><title>swoole::PHPCoroutine::catch_exception (33 samples, 0.07%)</title><rect x="95.6775%" y="533" width="0.0712%" height="15" fill="rgb(233,119,31)" fg:x="44314" fg:w="33"/><text x="95.9275%" y="543.50"></text></g><g><title>swoole::PHPCoroutine::record_last_msec (13 samples, 0.03%)</title><rect x="95.7488%" y="533" width="0.0281%" height="15" fill="rgb(241,120,22)" fg:x="44347" fg:w="13"/><text x="95.9988%" y="543.50"></text></g><g><title>swoole::PHPCoroutine::save_vm_stack (7 samples, 0.02%)</title><rect x="95.7768%" y="533" width="0.0151%" height="15" fill="rgb(224,102,30)" fg:x="44360" fg:w="7"/><text x="96.0268%" y="543.50"></text></g><g><title>zend_mm_bitset_nts (5 samples, 0.01%)</title><rect x="97.0982%" y="469" width="0.0108%" height="15" fill="rgb(210,164,37)" fg:x="44972" fg:w="5"/><text x="97.3482%" y="479.50"></text></g><g><title>zend_mm_bitset_set_range (213 samples, 0.46%)</title><rect x="97.1090%" y="469" width="0.4599%" height="15" fill="rgb(226,191,16)" fg:x="44977" fg:w="213"/><text x="97.3590%" y="479.50"></text></g><g><title>swoole::PHPCoroutine::vm_stack_init (824 samples, 1.78%)</title><rect x="95.7920%" y="533" width="1.7791%" height="15" fill="rgb(214,40,45)" fg:x="44367" fg:w="824"/><text x="96.0420%" y="543.50">s..</text></g><g><title>_emalloc_large (805 samples, 1.74%)</title><rect x="95.8330%" y="517" width="1.7381%" height="15" fill="rgb(244,29,26)" fg:x="44386" fg:w="805"/><text x="96.0830%" y="527.50"></text></g><g><title>zend_mm_alloc_large_ex (798 samples, 1.72%)</title><rect x="95.8481%" y="501" width="1.7229%" height="15" fill="rgb(216,16,5)" fg:x="44393" fg:w="798"/><text x="96.0981%" y="511.50"></text></g><g><title>zend_mm_alloc_pages (790 samples, 1.71%)</title><rect x="95.8654%" y="485" width="1.7057%" height="15" fill="rgb(249,76,35)" fg:x="44401" fg:w="790"/><text x="96.1154%" y="495.50"></text></g><g><title>swoole_isset_hook (13 samples, 0.03%)</title><rect x="97.5710%" y="533" width="0.0281%" height="15" fill="rgb(207,11,44)" fg:x="45191" fg:w="13"/><text x="97.8210%" y="543.50"></text></g><g><title>zend_gc_addref (16 samples, 0.03%)</title><rect x="97.5991%" y="533" width="0.0345%" height="15" fill="rgb(228,190,49)" fg:x="45204" fg:w="16"/><text x="97.8491%" y="543.50"></text></g><g><title>zend_init_func_execute_data (114 samples, 0.25%)</title><rect x="97.6336%" y="533" width="0.2461%" height="15" fill="rgb(214,173,12)" fg:x="45220" fg:w="114"/><text x="97.8836%" y="543.50"></text></g><g><title>i_init_func_execute_data (6 samples, 0.01%)</title><rect x="97.8668%" y="517" width="0.0130%" height="15" fill="rgb(218,26,35)" fg:x="45328" fg:w="6"/><text x="98.1168%" y="527.50"></text></g><g><title>zend_vm_calc_used_stack (49 samples, 0.11%)</title><rect x="97.8798%" y="517" width="0.1058%" height="15" fill="rgb(220,200,19)" fg:x="45334" fg:w="49"/><text x="98.1298%" y="527.50"></text></g><g><title>zend_vm_stack_push_call_frame (56 samples, 0.12%)</title><rect x="97.8798%" y="533" width="0.1209%" height="15" fill="rgb(239,95,49)" fg:x="45334" fg:w="56"/><text x="98.1298%" y="543.50"></text></g><g><title>zend_vm_stack_push_call_frame_ex (7 samples, 0.02%)</title><rect x="97.9856%" y="517" width="0.0151%" height="15" fill="rgb(235,85,53)" fg:x="45383" fg:w="7"/><text x="98.2356%" y="527.50"></text></g><g><title>zval_get_type (5 samples, 0.01%)</title><rect x="98.0007%" y="533" width="0.0108%" height="15" fill="rgb(233,133,31)" fg:x="45390" fg:w="5"/><text x="98.2507%" y="543.50"></text></g><g><title>std::function&lt;void (void*)&gt;::operator (5,612 samples, 12.12%)</title><rect x="85.9163%" y="565" width="12.1168%" height="15" fill="rgb(218,25,20)" fg:x="39793" fg:w="5612"/><text x="86.1663%" y="575.50">std::function&lt;void..</text></g><g><title>swoole::PHPCoroutine::main_func (5,595 samples, 12.08%)</title><rect x="85.9530%" y="549" width="12.0801%" height="15" fill="rgb(252,210,38)" fg:x="39810" fg:w="5595"/><text x="86.2030%" y="559.50">swoole::PHPCorouti..</text></g><g><title>zval_ptr_dtor (10 samples, 0.02%)</title><rect x="98.0115%" y="533" width="0.0216%" height="15" fill="rgb(242,134,21)" fg:x="45395" fg:w="10"/><text x="98.2615%" y="543.50"></text></g><g><title>i_zval_ptr_dtor (10 samples, 0.02%)</title><rect x="98.0115%" y="517" width="0.0216%" height="15" fill="rgb(213,28,48)" fg:x="45395" fg:w="10"/><text x="98.2615%" y="527.50"></text></g><g><title>swoole_make_fcontext (5,699 samples, 12.30%)</title><rect x="85.7630%" y="597" width="12.3046%" height="15" fill="rgb(250,196,2)" fg:x="39722" fg:w="5699"/><text x="86.0130%" y="607.50">swoole_make_fconte..</text></g><g><title>swoole::coroutine::Context::context_func (5,653 samples, 12.21%)</title><rect x="85.8623%" y="581" width="12.2053%" height="15" fill="rgb(227,5,17)" fg:x="39768" fg:w="5653"/><text x="86.1123%" y="591.50">swoole::coroutine:..</text></g><g><title>swoole::coroutine::Context::swap_out (16 samples, 0.03%)</title><rect x="98.0331%" y="565" width="0.0345%" height="15" fill="rgb(221,226,24)" fg:x="45405" fg:w="16"/><text x="98.2831%" y="575.50"></text></g><g><title>time (132 samples, 0.28%)</title><rect x="98.0676%" y="597" width="0.2850%" height="15" fill="rgb(211,5,48)" fg:x="45421" fg:w="132"/><text x="98.3176%" y="607.50"></text></g><g><title>__clock_gettime (20 samples, 0.04%)</title><rect x="98.3526%" y="581" width="0.0432%" height="15" fill="rgb(219,150,6)" fg:x="45553" fg:w="20"/><text x="98.6026%" y="591.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.04%)</title><rect x="98.3591%" y="565" width="0.0367%" height="15" fill="rgb(251,46,16)" fg:x="45556" fg:w="17"/><text x="98.6091%" y="575.50"></text></g><g><title>_mi_clock_now (62 samples, 0.13%)</title><rect x="98.4001%" y="581" width="0.1339%" height="15" fill="rgb(220,204,40)" fg:x="45575" fg:w="62"/><text x="98.6501%" y="591.50"></text></g><g><title>_mi_page_malloc (21 samples, 0.05%)</title><rect x="98.5340%" y="581" width="0.0453%" height="15" fill="rgb(211,85,2)" fg:x="45637" fg:w="21"/><text x="98.7840%" y="591.50"></text></g><g><title>mi_segment_span_allocate (16 samples, 0.03%)</title><rect x="98.5880%" y="581" width="0.0345%" height="15" fill="rgb(229,17,7)" fg:x="45662" fg:w="16"/><text x="98.8380%" y="591.50"></text></g><g><title>mi_segment_span_free_coalesce (5 samples, 0.01%)</title><rect x="98.6225%" y="581" width="0.0108%" height="15" fill="rgb(239,72,28)" fg:x="45678" fg:w="5"/><text x="98.8725%" y="591.50"></text></g><g><title>tld_main (134 samples, 0.29%)</title><rect x="98.3526%" y="597" width="0.2893%" height="15" fill="rgb(230,47,54)" fg:x="45553" fg:w="134"/><text x="98.6026%" y="607.50"></text></g><g><title>tolower (49 samples, 0.11%)</title><rect x="98.6419%" y="597" width="0.1058%" height="15" fill="rgb(214,50,8)" fg:x="45687" fg:w="49"/><text x="98.8919%" y="607.50"></text></g><g><title>vfprintf (44 samples, 0.09%)</title><rect x="98.7521%" y="597" width="0.0950%" height="15" fill="rgb(216,198,43)" fg:x="45738" fg:w="44"/><text x="99.0021%" y="607.50"></text></g><g><title>vsnprintf (485 samples, 1.05%)</title><rect x="98.8471%" y="597" width="1.0472%" height="15" fill="rgb(234,20,35)" fg:x="45782" fg:w="485"/><text x="99.0971%" y="607.50"></text></g><g><title>vtable for std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; (7 samples, 0.02%)</title><rect x="99.8942%" y="597" width="0.0151%" height="15" fill="rgb(254,45,19)" fg:x="46267" fg:w="7"/><text x="100.1442%" y="607.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (7 samples, 0.02%)</title><rect x="99.8942%" y="581" width="0.0151%" height="15" fill="rgb(219,14,44)" fg:x="46267" fg:w="7"/><text x="100.1442%" y="591.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;swoole::String&gt; &gt;::destroy&lt;swoole::String&gt; (6 samples, 0.01%)</title><rect x="99.8964%" y="565" width="0.0130%" height="15" fill="rgb(217,220,26)" fg:x="46268" fg:w="6"/><text x="100.1464%" y="575.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;swoole::String&gt;::destroy&lt;swoole::String&gt; (6 samples, 0.01%)</title><rect x="99.8964%" y="549" width="0.0130%" height="15" fill="rgb(213,158,28)" fg:x="46268" fg:w="6"/><text x="100.1464%" y="559.50"></text></g><g><title>~String (6 samples, 0.01%)</title><rect x="99.8964%" y="533" width="0.0130%" height="15" fill="rgb(252,51,52)" fg:x="46268" fg:w="6"/><text x="100.1464%" y="543.50"></text></g><g><title>zend_read_property_ex (6 samples, 0.01%)</title><rect x="99.9655%" y="581" width="0.0130%" height="15" fill="rgb(246,89,16)" fg:x="46300" fg:w="6"/><text x="100.2155%" y="591.50"></text></g><g><title>zend_string_init (9 samples, 0.02%)</title><rect x="99.9784%" y="581" width="0.0194%" height="15" fill="rgb(216,158,49)" fg:x="46306" fg:w="9"/><text x="100.2284%" y="591.50"></text></g><g><title>zend_string_alloc (6 samples, 0.01%)</title><rect x="99.9849%" y="565" width="0.0130%" height="15" fill="rgb(236,107,19)" fg:x="46309" fg:w="6"/><text x="100.2349%" y="575.50"></text></g><g><title>all (46,316 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(228,185,30)" fg:x="0" fg:w="46316"/><text x="0.2500%" y="639.50"></text></g><g><title>swoole-cli-mima (46,316 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(246,134,8)" fg:x="0" fg:w="46316"/><text x="0.2500%" y="623.50">swoole-cli-mima</text></g><g><title>zend_read_property (42 samples, 0.09%)</title><rect x="99.9093%" y="597" width="0.0907%" height="15" fill="rgb(214,143,50)" fg:x="46274" fg:w="42"/><text x="100.1593%" y="607.50"></text></g></svg></svg>