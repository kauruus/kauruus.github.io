<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="27575"><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (110 samples, 0.40%)</title><rect x="0.0000%" y="581" width="0.3989%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="110"/><text x="0.2500%" y="591.50"></text></g><g><title>ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER (54 samples, 0.20%)</title><rect x="0.3989%" y="581" width="0.1958%" height="15" fill="rgb(217,0,24)" fg:x="110" fg:w="54"/><text x="0.6489%" y="591.50"></text></g><g><title>__clock_gettime (7 samples, 0.03%)</title><rect x="0.5947%" y="581" width="0.0254%" height="15" fill="rgb(221,193,54)" fg:x="164" fg:w="7"/><text x="0.8447%" y="591.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="0.6020%" y="565" width="0.0181%" height="15" fill="rgb(248,212,6)" fg:x="166" fg:w="5"/><text x="0.8520%" y="575.50"></text></g><g><title>swoole::BaseFactory::dispatch (21 samples, 0.08%)</title><rect x="0.6310%" y="581" width="0.0762%" height="15" fill="rgb(208,68,35)" fg:x="174" fg:w="21"/><text x="0.8810%" y="591.50"></text></g><g><title>swoole::Port_onRead_http (9 samples, 0.03%)</title><rect x="0.7108%" y="581" width="0.0326%" height="15" fill="rgb(232,128,0)" fg:x="196" fg:w="9"/><text x="0.9608%" y="591.50"></text></g><g><title>swoole::coroutine::Context::swap_in (10 samples, 0.04%)</title><rect x="0.7471%" y="581" width="0.0363%" height="15" fill="rgb(207,160,47)" fg:x="206" fg:w="10"/><text x="0.9971%" y="591.50"></text></g><g><title>swoole::http::Context::end (5 samples, 0.02%)</title><rect x="0.7833%" y="581" width="0.0181%" height="15" fill="rgb(228,23,34)" fg:x="216" fg:w="5"/><text x="1.0333%" y="591.50"></text></g><g><title>zend_init_func_execute_data (68 samples, 0.25%)</title><rect x="0.8051%" y="581" width="0.2466%" height="15" fill="rgb(218,30,26)" fg:x="222" fg:w="68"/><text x="1.0551%" y="591.50"></text></g><g><title>zend_leave_helper_SPEC (73 samples, 0.26%)</title><rect x="1.0517%" y="581" width="0.2647%" height="15" fill="rgb(220,122,19)" fg:x="290" fg:w="73"/><text x="1.3017%" y="591.50"></text></g><g><title>zend_mm_alloc_pages (32 samples, 0.12%)</title><rect x="1.3164%" y="581" width="0.1160%" height="15" fill="rgb(250,228,42)" fg:x="363" fg:w="32"/><text x="1.5664%" y="591.50"></text></g><g><title>zim_swoole_http_request___destruct (65 samples, 0.24%)</title><rect x="1.4433%" y="581" width="0.2357%" height="15" fill="rgb(240,193,28)" fg:x="398" fg:w="65"/><text x="1.6933%" y="591.50"></text></g><g><title>zim_swoole_http_response___destruct (67 samples, 0.24%)</title><rect x="1.6791%" y="581" width="0.2430%" height="15" fill="rgb(216,20,37)" fg:x="463" fg:w="67"/><text x="1.9291%" y="591.50"></text></g><g><title>[[stack]] (579 samples, 2.10%)</title><rect x="0.0000%" y="597" width="2.0997%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="579"/><text x="0.2500%" y="607.50">[..</text></g><g><title>zim_swoole_http_response_header (49 samples, 0.18%)</title><rect x="1.9220%" y="581" width="0.1777%" height="15" fill="rgb(217,207,13)" fg:x="530" fg:w="49"/><text x="2.1720%" y="591.50"></text></g><g><title>Context (59 samples, 0.21%)</title><rect x="2.0997%" y="581" width="0.2140%" height="15" fill="rgb(231,73,38)" fg:x="579" fg:w="59"/><text x="2.3497%" y="591.50"></text></g><g><title>Coroutine (22 samples, 0.08%)</title><rect x="2.3137%" y="581" width="0.0798%" height="15" fill="rgb(225,20,46)" fg:x="638" fg:w="22"/><text x="2.5637%" y="591.50"></text></g><g><title>ZEND_SEND_VAL_EX_SPEC_CONST_UNUSED_QUICK_HANDLER (61 samples, 0.22%)</title><rect x="2.4044%" y="581" width="0.2212%" height="15" fill="rgb(210,31,41)" fg:x="663" fg:w="61"/><text x="2.6544%" y="591.50"></text></g><g><title>__clock_gettime (268 samples, 0.97%)</title><rect x="2.6256%" y="581" width="0.9719%" height="15" fill="rgb(221,200,47)" fg:x="724" fg:w="268"/><text x="2.8756%" y="591.50"></text></g><g><title>__vdso_clock_gettime (207 samples, 0.75%)</title><rect x="2.8468%" y="565" width="0.7507%" height="15" fill="rgb(226,26,5)" fg:x="785" fg:w="207"/><text x="3.0968%" y="575.50"></text></g><g><title>[[vdso]] (29 samples, 0.11%)</title><rect x="3.4923%" y="549" width="0.1052%" height="15" fill="rgb(249,33,26)" fg:x="963" fg:w="29"/><text x="3.7423%" y="559.50"></text></g><g><title>_efree (6 samples, 0.02%)</title><rect x="3.6047%" y="581" width="0.0218%" height="15" fill="rgb(235,183,28)" fg:x="994" fg:w="6"/><text x="3.8547%" y="591.50"></text></g><g><title>_zend_new_array_0 (24 samples, 0.09%)</title><rect x="3.6301%" y="581" width="0.0870%" height="15" fill="rgb(221,5,38)" fg:x="1001" fg:w="24"/><text x="3.8801%" y="591.50"></text></g><g><title>add_assoc_double_ex (17 samples, 0.06%)</title><rect x="3.7171%" y="581" width="0.0617%" height="15" fill="rgb(247,18,42)" fg:x="1025" fg:w="17"/><text x="3.9671%" y="591.50"></text></g><g><title>add_assoc_long_ex (15 samples, 0.05%)</title><rect x="3.7788%" y="581" width="0.0544%" height="15" fill="rgb(241,131,45)" fg:x="1042" fg:w="15"/><text x="4.0288%" y="591.50"></text></g><g><title>zend_symtable_str_update (7 samples, 0.03%)</title><rect x="3.8078%" y="565" width="0.0254%" height="15" fill="rgb(249,31,29)" fg:x="1050" fg:w="7"/><text x="4.0578%" y="575.50"></text></g><g><title>add_assoc_str_ex (35 samples, 0.13%)</title><rect x="3.8332%" y="581" width="0.1269%" height="15" fill="rgb(225,111,53)" fg:x="1057" fg:w="35"/><text x="4.0832%" y="591.50"></text></g><g><title>zend_string_init (4 samples, 0.01%)</title><rect x="4.0943%" y="565" width="0.0145%" height="15" fill="rgb(238,160,17)" fg:x="1129" fg:w="4"/><text x="4.3443%" y="575.50"></text></g><g><title>add_assoc_string_ex (42 samples, 0.15%)</title><rect x="3.9601%" y="581" width="0.1523%" height="15" fill="rgb(214,148,48)" fg:x="1092" fg:w="42"/><text x="4.2101%" y="591.50"></text></g><g><title>add_assoc_zval_ex (38 samples, 0.14%)</title><rect x="4.1160%" y="581" width="0.1378%" height="15" fill="rgb(232,36,49)" fg:x="1135" fg:w="38"/><text x="4.3660%" y="591.50"></text></g><g><title>execute_ex (104 samples, 0.38%)</title><rect x="4.2539%" y="581" width="0.3772%" height="15" fill="rgb(209,103,24)" fg:x="1173" fg:w="104"/><text x="4.5039%" y="591.50"></text></g><g><title>http_context_send_data (34 samples, 0.12%)</title><rect x="4.6310%" y="581" width="0.1233%" height="15" fill="rgb(229,88,8)" fg:x="1277" fg:w="34"/><text x="4.8810%" y="591.50"></text></g><g><title>object_properties_init (16 samples, 0.06%)</title><rect x="4.7543%" y="581" width="0.0580%" height="15" fill="rgb(213,181,19)" fg:x="1311" fg:w="16"/><text x="5.0043%" y="591.50"></text></g><g><title>operator (5 samples, 0.02%)</title><rect x="4.8123%" y="581" width="0.0181%" height="15" fill="rgb(254,191,54)" fg:x="1327" fg:w="5"/><text x="5.0623%" y="591.50"></text></g><g><title>operator new (5 samples, 0.02%)</title><rect x="4.8305%" y="581" width="0.0181%" height="15" fill="rgb(241,83,37)" fg:x="1332" fg:w="5"/><text x="5.0805%" y="591.50"></text></g><g><title>operator (84 samples, 0.30%)</title><rect x="4.8486%" y="581" width="0.3046%" height="15" fill="rgb(233,36,39)" fg:x="1337" fg:w="84"/><text x="5.0986%" y="591.50"></text></g><g><title>zval_get_type (84 samples, 0.30%)</title><rect x="4.8486%" y="565" width="0.3046%" height="15" fill="rgb(226,3,54)" fg:x="1337" fg:w="84"/><text x="5.0986%" y="575.50"></text></g><g><title>php_swoole_get_recv_data (10 samples, 0.04%)</title><rect x="5.1568%" y="581" width="0.0363%" height="15" fill="rgb(245,192,40)" fg:x="1422" fg:w="10"/><text x="5.4068%" y="591.50"></text></g><g><title>php_swoole_http_request_create_object (33 samples, 0.12%)</title><rect x="5.1931%" y="581" width="0.1197%" height="15" fill="rgb(238,167,29)" fg:x="1432" fg:w="33"/><text x="5.4431%" y="591.50"></text></g><g><title>php_swoole_http_request_free_object (64 samples, 0.23%)</title><rect x="5.3128%" y="581" width="0.2321%" height="15" fill="rgb(232,182,51)" fg:x="1465" fg:w="64"/><text x="5.5628%" y="591.50"></text></g><g><title>php_swoole_http_response_create_object (8 samples, 0.03%)</title><rect x="5.5449%" y="581" width="0.0290%" height="15" fill="rgb(231,60,39)" fg:x="1529" fg:w="8"/><text x="5.7949%" y="591.50"></text></g><g><title>php_swoole_http_response_free_object (116 samples, 0.42%)</title><rect x="5.5739%" y="581" width="0.4207%" height="15" fill="rgb(208,69,12)" fg:x="1537" fg:w="116"/><text x="5.8239%" y="591.50"></text></g><g><title>php_swoole_http_response_get_and_check_context (24 samples, 0.09%)</title><rect x="5.9946%" y="581" width="0.0870%" height="15" fill="rgb(235,93,37)" fg:x="1653" fg:w="24"/><text x="6.2446%" y="591.50"></text></g><g><title>php_swoole_http_server_onReceive (13 samples, 0.05%)</title><rect x="6.0816%" y="581" width="0.0471%" height="15" fill="rgb(213,116,39)" fg:x="1677" fg:w="13"/><text x="6.3316%" y="591.50"></text></g><g><title>php_url_decode (23 samples, 0.08%)</title><rect x="6.1287%" y="581" width="0.0834%" height="15" fill="rgb(222,207,29)" fg:x="1690" fg:w="23"/><text x="6.3787%" y="591.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (6 samples, 0.02%)</title><rect x="6.2121%" y="581" width="0.0218%" height="15" fill="rgb(206,96,30)" fg:x="1713" fg:w="6"/><text x="6.4621%" y="591.50"></text></g><g><title>sw_snprintf (37 samples, 0.13%)</title><rect x="6.2339%" y="581" width="0.1342%" height="15" fill="rgb(218,138,4)" fg:x="1719" fg:w="37"/><text x="6.4839%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::create (9 samples, 0.03%)</title><rect x="6.3681%" y="581" width="0.0326%" height="15" fill="rgb(250,191,14)" fg:x="1756" fg:w="9"/><text x="6.6181%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::on_close (78 samples, 0.28%)</title><rect x="6.4007%" y="581" width="0.2829%" height="15" fill="rgb(239,60,40)" fg:x="1765" fg:w="78"/><text x="6.6507%" y="591.50"></text></g><g><title>swoole::Reactor::execute_end_callbacks (4 samples, 0.01%)</title><rect x="6.6836%" y="581" width="0.0145%" height="15" fill="rgb(206,27,48)" fg:x="1843" fg:w="4"/><text x="6.9336%" y="591.50"></text></g><g><title>swoole::ReactorEpoll::wait (68 samples, 0.25%)</title><rect x="6.6981%" y="581" width="0.2466%" height="15" fill="rgb(225,35,8)" fg:x="1847" fg:w="68"/><text x="6.9481%" y="591.50"></text></g><g><title>swoole::ReactorThread_onRead (70 samples, 0.25%)</title><rect x="6.9447%" y="581" width="0.2539%" height="15" fill="rgb(250,213,24)" fg:x="1915" fg:w="70"/><text x="7.1947%" y="591.50"></text></g><g><title>swoole::Server::destroy_http_request (27 samples, 0.10%)</title><rect x="7.1985%" y="581" width="0.0979%" height="15" fill="rgb(247,123,22)" fg:x="1985" fg:w="27"/><text x="7.4485%" y="591.50"></text></g><g><title>swoole::Server::dispatch_task (3 samples, 0.01%)</title><rect x="7.2965%" y="581" width="0.0109%" height="15" fill="rgb(231,138,38)" fg:x="2012" fg:w="3"/><text x="7.5465%" y="591.50"></text></g><g><title>swoole::Server::send (164 samples, 0.59%)</title><rect x="7.3073%" y="581" width="0.5947%" height="15" fill="rgb(231,145,46)" fg:x="2015" fg:w="164"/><text x="7.5573%" y="591.50"></text></g><g><title>swoole::Server::worker_accept_event (13 samples, 0.05%)</title><rect x="7.9021%" y="581" width="0.0471%" height="15" fill="rgb(251,118,11)" fg:x="2179" fg:w="13"/><text x="8.1521%" y="591.50"></text></g><g><title>swoole::String::append (58 samples, 0.21%)</title><rect x="7.9492%" y="581" width="0.2103%" height="15" fill="rgb(217,147,25)" fg:x="2192" fg:w="58"/><text x="8.1992%" y="591.50"></text></g><g><title>swoole::Timer::now (40 samples, 0.15%)</title><rect x="8.1596%" y="581" width="0.1451%" height="15" fill="rgb(247,81,37)" fg:x="2250" fg:w="40"/><text x="8.4096%" y="591.50"></text></g><g><title>swoole::http::Context::build_header (62 samples, 0.22%)</title><rect x="8.3119%" y="581" width="0.2248%" height="15" fill="rgb(209,12,38)" fg:x="2292" fg:w="62"/><text x="8.5619%" y="591.50"></text></g><g><title>swoole::http::Context::compress (9 samples, 0.03%)</title><rect x="8.5367%" y="581" width="0.0326%" height="15" fill="rgb(227,1,9)" fg:x="2354" fg:w="9"/><text x="8.7867%" y="591.50"></text></g><g><title>swoole::http::Context::free (224 samples, 0.81%)</title><rect x="8.5694%" y="581" width="0.8123%" height="15" fill="rgb(248,47,43)" fg:x="2363" fg:w="224"/><text x="8.8194%" y="591.50"></text></g><g><title>~Context (144 samples, 0.52%)</title><rect x="8.8595%" y="565" width="0.5222%" height="15" fill="rgb(221,10,30)" fg:x="2443" fg:w="144"/><text x="9.1095%" y="575.50"></text></g><g><title>~__shared_ptr (144 samples, 0.52%)</title><rect x="8.8595%" y="549" width="0.5222%" height="15" fill="rgb(210,229,1)" fg:x="2443" fg:w="144"/><text x="9.1095%" y="559.50"></text></g><g><title>~__shared_count (144 samples, 0.52%)</title><rect x="8.8595%" y="533" width="0.5222%" height="15" fill="rgb(222,148,37)" fg:x="2443" fg:w="144"/><text x="9.1095%" y="543.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (144 samples, 0.52%)</title><rect x="8.8595%" y="517" width="0.5222%" height="15" fill="rgb(234,67,33)" fg:x="2443" fg:w="144"/><text x="9.1095%" y="527.50"></text></g><g><title>swoole::http::Context::init (3 samples, 0.01%)</title><rect x="9.3889%" y="581" width="0.0109%" height="15" fill="rgb(247,98,35)" fg:x="2589" fg:w="3"/><text x="9.6389%" y="591.50"></text></g><g><title>swoole::http_server::Request::parse_header_info (7 samples, 0.03%)</title><rect x="9.4071%" y="581" width="0.0254%" height="15" fill="rgb(247,138,52)" fg:x="2594" fg:w="7"/><text x="9.6571%" y="591.50"></text></g><g><title>swoole::http_server::dispatch_request (31 samples, 0.11%)</title><rect x="9.4325%" y="581" width="0.1124%" height="15" fill="rgb(213,79,30)" fg:x="2601" fg:w="31"/><text x="9.6825%" y="591.50"></text></g><g><title>swoole::microtime (78 samples, 0.28%)</title><rect x="9.5449%" y="581" width="0.2829%" height="15" fill="rgb(246,177,23)" fg:x="2632" fg:w="78"/><text x="9.7949%" y="591.50"></text></g><g><title>swoole::network::Address::get_addr (35 samples, 0.13%)</title><rect x="9.8277%" y="581" width="0.1269%" height="15" fill="rgb(230,62,27)" fg:x="2710" fg:w="35"/><text x="10.0777%" y="591.50"></text></g><g><title>swoole::network::Socket::send (43 samples, 0.16%)</title><rect x="9.9619%" y="581" width="0.1559%" height="15" fill="rgb(216,154,8)" fg:x="2747" fg:w="43"/><text x="10.2119%" y="591.50"></text></g><g><title>swoole_http_context_new (3 samples, 0.01%)</title><rect x="10.1179%" y="581" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="2790" fg:w="3"/><text x="10.3679%" y="591.50"></text></g><g><title>swoole_http_parser_execute (24 samples, 0.09%)</title><rect x="10.1287%" y="581" width="0.0870%" height="15" fill="rgb(251,115,12)" fg:x="2793" fg:w="24"/><text x="10.3787%" y="591.50"></text></g><g><title>swoole_http_server_onAfterResponse (46 samples, 0.17%)</title><rect x="10.2158%" y="581" width="0.1668%" height="15" fill="rgb(240,54,50)" fg:x="2817" fg:w="46"/><text x="10.4658%" y="591.50"></text></g><g><title>swoole_http_server_onBeforeRequest (4 samples, 0.01%)</title><rect x="10.3826%" y="581" width="0.0145%" height="15" fill="rgb(233,84,52)" fg:x="2863" fg:w="4"/><text x="10.6326%" y="591.50"></text></g><g><title>zend::function::call (10 samples, 0.04%)</title><rect x="10.3971%" y="581" width="0.0363%" height="15" fill="rgb(207,117,47)" fg:x="2867" fg:w="10"/><text x="10.6471%" y="591.50"></text></g><g><title>zend_call_function (97 samples, 0.35%)</title><rect x="10.4334%" y="581" width="0.3518%" height="15" fill="rgb(249,43,39)" fg:x="2877" fg:w="97"/><text x="10.6834%" y="591.50"></text></g><g><title>zend_call_known_function (33 samples, 0.12%)</title><rect x="10.7851%" y="581" width="0.1197%" height="15" fill="rgb(209,38,44)" fg:x="2974" fg:w="33"/><text x="11.0351%" y="591.50"></text></g><g><title>zend_hash_do_resize (47 samples, 0.17%)</title><rect x="10.9048%" y="581" width="0.1704%" height="15" fill="rgb(236,212,23)" fg:x="3007" fg:w="47"/><text x="11.1548%" y="591.50"></text></g><g><title>zend_hash_find (4 samples, 0.01%)</title><rect x="11.0752%" y="581" width="0.0145%" height="15" fill="rgb(242,79,21)" fg:x="3054" fg:w="4"/><text x="11.3252%" y="591.50"></text></g><g><title>zend_hash_func (6 samples, 0.02%)</title><rect x="11.0898%" y="581" width="0.0218%" height="15" fill="rgb(211,96,35)" fg:x="3058" fg:w="6"/><text x="11.3398%" y="591.50"></text></g><g><title>zend_hash_real_init_mixed (63 samples, 0.23%)</title><rect x="11.1115%" y="581" width="0.2285%" height="15" fill="rgb(253,215,40)" fg:x="3064" fg:w="63"/><text x="11.3615%" y="591.50"></text></g><g><title>zend_hash_rehash (68 samples, 0.25%)</title><rect x="11.3400%" y="581" width="0.2466%" height="15" fill="rgb(211,81,21)" fg:x="3127" fg:w="68"/><text x="11.5900%" y="591.50"></text></g><g><title>zend_hash_str_update (50 samples, 0.18%)</title><rect x="11.5866%" y="581" width="0.1813%" height="15" fill="rgb(208,190,38)" fg:x="3195" fg:w="50"/><text x="11.8366%" y="591.50"></text></g><g><title>_zend_hash_str_add_or_update_i (3 samples, 0.01%)</title><rect x="11.7570%" y="565" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="3242" fg:w="3"/><text x="12.0070%" y="575.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="11.7570%" y="549" width="0.0109%" height="15" fill="rgb(237,122,38)" fg:x="3242" fg:w="3"/><text x="12.0070%" y="559.50"></text></g><g><title>zend_mm_free_pages (45 samples, 0.16%)</title><rect x="11.7752%" y="581" width="0.1632%" height="15" fill="rgb(244,218,35)" fg:x="3247" fg:w="45"/><text x="12.0252%" y="591.50"></text></g><g><title>zend_object_std_dtor (77 samples, 0.28%)</title><rect x="11.9383%" y="581" width="0.2792%" height="15" fill="rgb(240,68,47)" fg:x="3292" fg:w="77"/><text x="12.1883%" y="591.50"></text></g><g><title>zend_object_std_init (24 samples, 0.09%)</title><rect x="12.2176%" y="581" width="0.0870%" height="15" fill="rgb(210,16,53)" fg:x="3369" fg:w="24"/><text x="12.4676%" y="591.50"></text></g><g><title>zend_objects_destroy_object (42 samples, 0.15%)</title><rect x="12.3046%" y="581" width="0.1523%" height="15" fill="rgb(235,124,12)" fg:x="3393" fg:w="42"/><text x="12.5546%" y="591.50"></text></g><g><title>zend_objects_store_del (74 samples, 0.27%)</title><rect x="12.4569%" y="581" width="0.2684%" height="15" fill="rgb(224,169,11)" fg:x="3435" fg:w="74"/><text x="12.7069%" y="591.50"></text></g><g><title>zend_read_property_ex (17 samples, 0.06%)</title><rect x="12.7253%" y="581" width="0.0617%" height="15" fill="rgb(250,166,2)" fg:x="3509" fg:w="17"/><text x="12.9753%" y="591.50"></text></g><g><title>zend_std_read_property (22 samples, 0.08%)</title><rect x="12.7869%" y="581" width="0.0798%" height="15" fill="rgb(242,216,29)" fg:x="3526" fg:w="22"/><text x="13.0369%" y="591.50"></text></g><g><title>zend_get_property_offset (4 samples, 0.01%)</title><rect x="12.8522%" y="565" width="0.0145%" height="15" fill="rgb(230,116,27)" fg:x="3544" fg:w="4"/><text x="13.1022%" y="575.50"></text></g><g><title>zend_string_hash_func (51 samples, 0.18%)</title><rect x="12.8667%" y="581" width="0.1850%" height="15" fill="rgb(228,99,48)" fg:x="3548" fg:w="51"/><text x="13.1167%" y="591.50"></text></g><g><title>zim_swoole_http_response_end (12 samples, 0.04%)</title><rect x="13.0517%" y="581" width="0.0435%" height="15" fill="rgb(253,11,6)" fg:x="3599" fg:w="12"/><text x="13.3017%" y="591.50"></text></g><g><title>[anon] (3,035 samples, 11.01%)</title><rect x="2.0997%" y="597" width="11.0063%" height="15" fill="rgb(247,143,39)" fg:x="579" fg:w="3035"/><text x="2.3497%" y="607.50">[anon]</text></g><g><title>Context (50 samples, 0.18%)</title><rect x="13.1061%" y="581" width="0.1813%" height="15" fill="rgb(236,97,10)" fg:x="3614" fg:w="50"/><text x="13.3561%" y="591.50"></text></g><g><title>[swoole-cli] (56 samples, 0.20%)</title><rect x="13.1061%" y="597" width="0.2031%" height="15" fill="rgb(233,208,19)" fg:x="3614" fg:w="56"/><text x="13.3561%" y="607.50"></text></g><g><title>[swoole-cli] (8 samples, 0.03%)</title><rect x="13.3164%" y="581" width="0.0290%" height="15" fill="rgb(216,164,2)" fg:x="3672" fg:w="8"/><text x="13.5664%" y="591.50"></text></g><g><title>Context (8 samples, 0.03%)</title><rect x="13.3164%" y="565" width="0.0290%" height="15" fill="rgb(220,129,5)" fg:x="3672" fg:w="8"/><text x="13.5664%" y="575.50"></text></g><g><title>__clock_gettime (125 samples, 0.45%)</title><rect x="13.3454%" y="581" width="0.4533%" height="15" fill="rgb(242,17,10)" fg:x="3680" fg:w="125"/><text x="13.5954%" y="591.50"></text></g><g><title>__vdso_clock_gettime (71 samples, 0.26%)</title><rect x="13.5413%" y="565" width="0.2575%" height="15" fill="rgb(242,107,0)" fg:x="3734" fg:w="71"/><text x="13.7913%" y="575.50"></text></g><g><title>__fwritex (212 samples, 0.77%)</title><rect x="13.7987%" y="581" width="0.7688%" height="15" fill="rgb(251,28,31)" fg:x="3805" fg:w="212"/><text x="14.0487%" y="591.50"></text></g><g><title>__memcpy_fwd (156 samples, 0.57%)</title><rect x="14.5675%" y="581" width="0.5657%" height="15" fill="rgb(233,223,10)" fg:x="4017" fg:w="156"/><text x="14.8175%" y="591.50"></text></g><g><title>__towrite (115 samples, 0.42%)</title><rect x="15.1333%" y="581" width="0.4170%" height="15" fill="rgb(215,21,27)" fg:x="4173" fg:w="115"/><text x="15.3833%" y="591.50"></text></g><g><title>_efree (18 samples, 0.07%)</title><rect x="15.5539%" y="581" width="0.0653%" height="15" fill="rgb(232,23,21)" fg:x="4289" fg:w="18"/><text x="15.8039%" y="591.50"></text></g><g><title>_efree_56 (64 samples, 0.23%)</title><rect x="15.6192%" y="581" width="0.2321%" height="15" fill="rgb(244,5,23)" fg:x="4307" fg:w="64"/><text x="15.8692%" y="591.50"></text></g><g><title>_emalloc_large (18 samples, 0.07%)</title><rect x="15.8513%" y="581" width="0.0653%" height="15" fill="rgb(226,81,46)" fg:x="4371" fg:w="18"/><text x="16.1013%" y="591.50"></text></g><g><title>_estrndup (27 samples, 0.10%)</title><rect x="15.9166%" y="581" width="0.0979%" height="15" fill="rgb(247,70,30)" fg:x="4389" fg:w="27"/><text x="16.1666%" y="591.50"></text></g><g><title>add_assoc_stringl_ex (40 samples, 0.15%)</title><rect x="16.0218%" y="581" width="0.1451%" height="15" fill="rgb(212,68,19)" fg:x="4418" fg:w="40"/><text x="16.2718%" y="591.50"></text></g><g><title>zend_compile_expr (3 samples, 0.01%)</title><rect x="16.1668%" y="261" width="0.0109%" height="15" fill="rgb(240,187,13)" fg:x="4458" fg:w="3"/><text x="16.4168%" y="271.50"></text></g><g><title>zend_compile_expr_inner (3 samples, 0.01%)</title><rect x="16.1668%" y="245" width="0.0109%" height="15" fill="rgb(223,113,26)" fg:x="4458" fg:w="3"/><text x="16.4168%" y="255.50"></text></g><g><title>zend_compile_return (3 samples, 0.01%)</title><rect x="16.1850%" y="261" width="0.0109%" height="15" fill="rgb(206,192,2)" fg:x="4463" fg:w="3"/><text x="16.4350%" y="271.50"></text></g><g><title>zend_compile_expr (3 samples, 0.01%)</title><rect x="16.1850%" y="245" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="4463" fg:w="3"/><text x="16.4350%" y="255.50"></text></g><g><title>zend_compile_expr_inner (3 samples, 0.01%)</title><rect x="16.1850%" y="229" width="0.0109%" height="15" fill="rgb(247,173,49)" fg:x="4463" fg:w="3"/><text x="16.4350%" y="239.50"></text></g><g><title>zend_compile_class_decl (10 samples, 0.04%)</title><rect x="16.1668%" y="389" width="0.0363%" height="15" fill="rgb(224,114,35)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="399.50"></text></g><g><title>zend_compile_stmt (10 samples, 0.04%)</title><rect x="16.1668%" y="373" width="0.0363%" height="15" fill="rgb(245,159,27)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="383.50"></text></g><g><title>zend_compile_stmt_list (10 samples, 0.04%)</title><rect x="16.1668%" y="357" width="0.0363%" height="15" fill="rgb(245,172,44)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="367.50"></text></g><g><title>zend_compile_stmt (10 samples, 0.04%)</title><rect x="16.1668%" y="341" width="0.0363%" height="15" fill="rgb(236,23,11)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="351.50"></text></g><g><title>zend_compile_func_decl (10 samples, 0.04%)</title><rect x="16.1668%" y="325" width="0.0363%" height="15" fill="rgb(205,117,38)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="335.50"></text></g><g><title>zend_compile_stmt (10 samples, 0.04%)</title><rect x="16.1668%" y="309" width="0.0363%" height="15" fill="rgb(237,72,25)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="319.50"></text></g><g><title>zend_compile_stmt_list (10 samples, 0.04%)</title><rect x="16.1668%" y="293" width="0.0363%" height="15" fill="rgb(244,70,9)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="303.50"></text></g><g><title>zend_compile_stmt (10 samples, 0.04%)</title><rect x="16.1668%" y="277" width="0.0363%" height="15" fill="rgb(217,125,39)" fg:x="4458" fg:w="10"/><text x="16.4168%" y="287.50"></text></g><g><title>zend_compile_top_stmt (11 samples, 0.04%)</title><rect x="16.1668%" y="421" width="0.0399%" height="15" fill="rgb(235,36,10)" fg:x="4458" fg:w="11"/><text x="16.4168%" y="431.50"></text></g><g><title>zend_compile_top_stmt (11 samples, 0.04%)</title><rect x="16.1668%" y="405" width="0.0399%" height="15" fill="rgb(251,123,47)" fg:x="4458" fg:w="11"/><text x="16.4168%" y="415.50"></text></g><g><title>do_cli (42 samples, 0.15%)</title><rect x="16.1668%" y="581" width="0.1523%" height="15" fill="rgb(221,13,13)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="591.50"></text></g><g><title>php_request_startup (42 samples, 0.15%)</title><rect x="16.1668%" y="565" width="0.1523%" height="15" fill="rgb(238,131,9)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="575.50"></text></g><g><title>zend_activate_modules (42 samples, 0.15%)</title><rect x="16.1668%" y="549" width="0.1523%" height="15" fill="rgb(211,50,8)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="559.50"></text></g><g><title>zm_activate_swoole (42 samples, 0.15%)</title><rect x="16.1668%" y="533" width="0.1523%" height="15" fill="rgb(245,182,24)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="543.50"></text></g><g><title>php_swoole_load_library (42 samples, 0.15%)</title><rect x="16.1668%" y="517" width="0.1523%" height="15" fill="rgb(242,14,37)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="527.50"></text></g><g><title>zend::eval (42 samples, 0.15%)</title><rect x="16.1668%" y="501" width="0.1523%" height="15" fill="rgb(246,228,12)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="511.50"></text></g><g><title>zend_eval_stringl (42 samples, 0.15%)</title><rect x="16.1668%" y="485" width="0.1523%" height="15" fill="rgb(213,55,15)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="495.50"></text></g><g><title>swoole_compile_string (42 samples, 0.15%)</title><rect x="16.1668%" y="469" width="0.1523%" height="15" fill="rgb(209,9,3)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="479.50"></text></g><g><title>compile_string (42 samples, 0.15%)</title><rect x="16.1668%" y="453" width="0.1523%" height="15" fill="rgb(230,59,30)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="463.50"></text></g><g><title>zend_compile (42 samples, 0.15%)</title><rect x="16.1668%" y="437" width="0.1523%" height="15" fill="rgb(209,121,21)" fg:x="4458" fg:w="42"/><text x="16.4168%" y="447.50"></text></g><g><title>zendparse (31 samples, 0.11%)</title><rect x="16.2067%" y="421" width="0.1124%" height="15" fill="rgb(220,109,13)" fg:x="4469" fg:w="31"/><text x="16.4567%" y="431.50"></text></g><g><title>zendlex (12 samples, 0.04%)</title><rect x="16.2756%" y="405" width="0.0435%" height="15" fill="rgb(232,18,1)" fg:x="4488" fg:w="12"/><text x="16.5256%" y="415.50"></text></g><g><title>lex_scan (12 samples, 0.04%)</title><rect x="16.2756%" y="389" width="0.0435%" height="15" fill="rgb(215,41,42)" fg:x="4488" fg:w="12"/><text x="16.5256%" y="399.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="16.3083%" y="373" width="0.0109%" height="15" fill="rgb(224,123,36)" fg:x="4497" fg:w="3"/><text x="16.5583%" y="383.50"></text></g><g><title>execute_ex (3 samples, 0.01%)</title><rect x="16.3191%" y="581" width="0.0109%" height="15" fill="rgb(240,125,3)" fg:x="4500" fg:w="3"/><text x="16.5691%" y="591.50"></text></g><g><title>fmt_u (70 samples, 0.25%)</title><rect x="16.3300%" y="581" width="0.2539%" height="15" fill="rgb(205,98,50)" fg:x="4503" fg:w="70"/><text x="16.5800%" y="591.50"></text></g><g><title>gettimeofday (6 samples, 0.02%)</title><rect x="16.5984%" y="581" width="0.0218%" height="15" fill="rgb(205,185,37)" fg:x="4577" fg:w="6"/><text x="16.8484%" y="591.50"></text></g><g><title>http_request_message_complete (23 samples, 0.08%)</title><rect x="16.6201%" y="581" width="0.0834%" height="15" fill="rgb(238,207,15)" fg:x="4583" fg:w="23"/><text x="16.8701%" y="591.50"></text></g><g><title>http_request_on_headers_complete (21 samples, 0.08%)</title><rect x="16.7072%" y="581" width="0.0762%" height="15" fill="rgb(213,199,42)" fg:x="4607" fg:w="21"/><text x="16.9572%" y="591.50"></text></g><g><title>http_request_on_path (40 samples, 0.15%)</title><rect x="16.7833%" y="581" width="0.1451%" height="15" fill="rgb(235,201,11)" fg:x="4628" fg:w="40"/><text x="17.0333%" y="591.50"></text></g><g><title>memchr (129 samples, 0.47%)</title><rect x="16.9320%" y="581" width="0.4678%" height="15" fill="rgb(207,46,11)" fg:x="4669" fg:w="129"/><text x="17.1820%" y="591.50"></text></g><g><title>memset (22 samples, 0.08%)</title><rect x="17.3998%" y="581" width="0.0798%" height="15" fill="rgb(241,35,35)" fg:x="4798" fg:w="22"/><text x="17.6498%" y="591.50"></text></g><g><title>object_init_ex (42 samples, 0.15%)</title><rect x="17.4796%" y="581" width="0.1523%" height="15" fill="rgb(243,32,47)" fg:x="4820" fg:w="42"/><text x="17.7296%" y="591.50"></text></g><g><title>operator (4 samples, 0.01%)</title><rect x="17.6319%" y="581" width="0.0145%" height="15" fill="rgb(247,202,23)" fg:x="4862" fg:w="4"/><text x="17.8819%" y="591.50"></text></g><g><title>out (13 samples, 0.05%)</title><rect x="17.6537%" y="581" width="0.0471%" height="15" fill="rgb(219,102,11)" fg:x="4868" fg:w="13"/><text x="17.9037%" y="591.50"></text></g><g><title>pad (56 samples, 0.20%)</title><rect x="17.7008%" y="581" width="0.2031%" height="15" fill="rgb(243,110,44)" fg:x="4881" fg:w="56"/><text x="17.9508%" y="591.50"></text></g><g><title>pad (12 samples, 0.04%)</title><rect x="17.8604%" y="565" width="0.0435%" height="15" fill="rgb(222,74,54)" fg:x="4925" fg:w="12"/><text x="18.1104%" y="575.50"></text></g><g><title>std::function&lt;void (swoole::Reactor*)&gt;::operator (6 samples, 0.02%)</title><rect x="19.1224%" y="389" width="0.0218%" height="15" fill="rgb(216,99,12)" fg:x="5273" fg:w="6"/><text x="19.3724%" y="399.50"></text></g><g><title>swoole::Timer::select (5 samples, 0.02%)</title><rect x="19.1260%" y="373" width="0.0181%" height="15" fill="rgb(226,22,26)" fg:x="5274" fg:w="5"/><text x="19.3760%" y="383.50"></text></g><g><title>swoole::Heap::top (4 samples, 0.01%)</title><rect x="19.1296%" y="357" width="0.0145%" height="15" fill="rgb(217,163,10)" fg:x="5275" fg:w="4"/><text x="19.3796%" y="367.50"></text></g><g><title>swoole::Reactor::execute_end_callbacks (11 samples, 0.04%)</title><rect x="19.1151%" y="405" width="0.0399%" height="15" fill="rgb(213,25,53)" fg:x="5271" fg:w="11"/><text x="19.3651%" y="415.50"></text></g><g><title>std::map&lt;int, std::function&lt;void (swoole::Reactor*)&gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt; &gt;::begin (3 samples, 0.01%)</title><rect x="19.1442%" y="389" width="0.0109%" height="15" fill="rgb(252,105,26)" fg:x="5279" fg:w="3"/><text x="19.3942%" y="399.50"></text></g><g><title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::function&lt;void (swoole::Reactor*)&gt; &gt; &gt; &gt;::begin (3 samples, 0.01%)</title><rect x="19.1442%" y="373" width="0.0109%" height="15" fill="rgb(220,39,43)" fg:x="5279" fg:w="3"/><text x="19.3942%" y="383.50"></text></g><g><title>Request (4 samples, 0.01%)</title><rect x="21.4397%" y="373" width="0.0145%" height="15" fill="rgb(229,68,48)" fg:x="5912" fg:w="4"/><text x="21.6897%" y="383.50"></text></g><g><title>operator new (14 samples, 0.05%)</title><rect x="21.4542%" y="373" width="0.0508%" height="15" fill="rgb(252,8,32)" fg:x="5916" fg:w="14"/><text x="21.7042%" y="383.50"></text></g><g><title>swoole::Server::destroy_http_request (15 samples, 0.05%)</title><rect x="21.5050%" y="373" width="0.0544%" height="15" fill="rgb(223,20,43)" fg:x="5930" fg:w="15"/><text x="21.7550%" y="383.50"></text></g><g><title>swoole::MessageBus::pass (33 samples, 0.12%)</title><rect x="22.5675%" y="341" width="0.1197%" height="15" fill="rgb(229,81,49)" fg:x="6223" fg:w="33"/><text x="22.8175%" y="351.50"></text></g><g><title>swoole::MessageBus::get_packet (34 samples, 0.12%)</title><rect x="23.6265%" y="325" width="0.1233%" height="15" fill="rgb(236,28,36)" fg:x="6515" fg:w="34"/><text x="23.8765%" y="335.50"></text></g><g><title>swoole::Server::get_connection_verify (3 samples, 0.01%)</title><rect x="23.7498%" y="325" width="0.0109%" height="15" fill="rgb(249,185,26)" fg:x="6549" fg:w="3"/><text x="23.9998%" y="335.50"></text></g><g><title>swoole::Server::get_connection_verify_no_ssl (3 samples, 0.01%)</title><rect x="23.7498%" y="309" width="0.0109%" height="15" fill="rgb(249,174,33)" fg:x="6549" fg:w="3"/><text x="23.9998%" y="319.50"></text></g><g><title>_zend_handle_numeric_str (28 samples, 0.10%)</title><rect x="24.0073%" y="245" width="0.1015%" height="15" fill="rgb(233,201,37)" fg:x="6620" fg:w="28"/><text x="24.2573%" y="255.50"></text></g><g><title>_zend_hash_str_add_or_update_i (14 samples, 0.05%)</title><rect x="24.1088%" y="229" width="0.0508%" height="15" fill="rgb(221,78,26)" fg:x="6648" fg:w="14"/><text x="24.3588%" y="239.50"></text></g><g><title>zend_string_init (8 samples, 0.03%)</title><rect x="24.1306%" y="213" width="0.0290%" height="15" fill="rgb(250,127,30)" fg:x="6654" fg:w="8"/><text x="24.3806%" y="223.50"></text></g><g><title>zend_string_alloc (5 samples, 0.02%)</title><rect x="24.1414%" y="197" width="0.0181%" height="15" fill="rgb(230,49,44)" fg:x="6657" fg:w="5"/><text x="24.3914%" y="207.50"></text></g><g><title>_emalloc (4 samples, 0.01%)</title><rect x="24.1451%" y="181" width="0.0145%" height="15" fill="rgb(229,67,23)" fg:x="6658" fg:w="4"/><text x="24.3951%" y="191.50"></text></g><g><title>zend_mm_alloc_heap (3 samples, 0.01%)</title><rect x="24.1487%" y="165" width="0.0109%" height="15" fill="rgb(249,83,47)" fg:x="6659" fg:w="3"/><text x="24.3987%" y="175.50"></text></g><g><title>add_assoc_long_ex (61 samples, 0.22%)</title><rect x="23.9964%" y="277" width="0.2212%" height="15" fill="rgb(215,43,3)" fg:x="6617" fg:w="61"/><text x="24.2464%" y="287.50"></text></g><g><title>zend_symtable_str_update (58 samples, 0.21%)</title><rect x="24.0073%" y="261" width="0.2103%" height="15" fill="rgb(238,154,13)" fg:x="6620" fg:w="58"/><text x="24.2573%" y="271.50"></text></g><g><title>zend_hash_str_update (30 samples, 0.11%)</title><rect x="24.1088%" y="245" width="0.1088%" height="15" fill="rgb(219,56,2)" fg:x="6648" fg:w="30"/><text x="24.3588%" y="255.50"></text></g><g><title>zend_hash_func (16 samples, 0.06%)</title><rect x="24.1596%" y="229" width="0.0580%" height="15" fill="rgb(233,0,4)" fg:x="6662" fg:w="16"/><text x="24.4096%" y="239.50"></text></g><g><title>zend_inline_hash_func (16 samples, 0.06%)</title><rect x="24.1596%" y="213" width="0.0580%" height="15" fill="rgb(235,30,7)" fg:x="6662" fg:w="16"/><text x="24.4096%" y="223.50"></text></g><g><title>_efree (4 samples, 0.01%)</title><rect x="24.2647%" y="197" width="0.0145%" height="15" fill="rgb(250,79,13)" fg:x="6691" fg:w="4"/><text x="24.5147%" y="207.50"></text></g><g><title>zend_mm_free_heap (4 samples, 0.01%)</title><rect x="24.2647%" y="181" width="0.0145%" height="15" fill="rgb(211,146,34)" fg:x="6691" fg:w="4"/><text x="24.5147%" y="191.50"></text></g><g><title>zend_mm_alloc_small (11 samples, 0.04%)</title><rect x="24.2865%" y="165" width="0.0399%" height="15" fill="rgb(228,22,38)" fg:x="6697" fg:w="11"/><text x="24.5365%" y="175.50"></text></g><g><title>zend_hash_do_resize (22 samples, 0.08%)</title><rect x="24.2539%" y="213" width="0.0798%" height="15" fill="rgb(235,168,5)" fg:x="6688" fg:w="22"/><text x="24.5039%" y="223.50"></text></g><g><title>_emalloc (15 samples, 0.05%)</title><rect x="24.2792%" y="197" width="0.0544%" height="15" fill="rgb(221,155,16)" fg:x="6695" fg:w="15"/><text x="24.5292%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (13 samples, 0.05%)</title><rect x="24.2865%" y="181" width="0.0471%" height="15" fill="rgb(215,215,53)" fg:x="6697" fg:w="13"/><text x="24.5365%" y="191.50"></text></g><g><title>zend_hash_rehash (97 samples, 0.35%)</title><rect x="24.3336%" y="213" width="0.3518%" height="15" fill="rgb(223,4,10)" fg:x="6710" fg:w="97"/><text x="24.5836%" y="223.50"></text></g><g><title>_zend_hash_str_add_or_update_i (129 samples, 0.47%)</title><rect x="24.2285%" y="229" width="0.4678%" height="15" fill="rgb(234,103,6)" fg:x="6681" fg:w="129"/><text x="24.4785%" y="239.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="24.6854%" y="213" width="0.0109%" height="15" fill="rgb(227,97,0)" fg:x="6807" fg:w="3"/><text x="24.9354%" y="223.50"></text></g><g><title>zend_string_alloc (3 samples, 0.01%)</title><rect x="24.6854%" y="197" width="0.0109%" height="15" fill="rgb(234,150,53)" fg:x="6807" fg:w="3"/><text x="24.9354%" y="207.50"></text></g><g><title>add_assoc_string_ex (135 samples, 0.49%)</title><rect x="24.2176%" y="277" width="0.4896%" height="15" fill="rgb(228,201,54)" fg:x="6678" fg:w="135"/><text x="24.4676%" y="287.50"></text></g><g><title>zend_symtable_str_update (132 samples, 0.48%)</title><rect x="24.2285%" y="261" width="0.4787%" height="15" fill="rgb(222,22,37)" fg:x="6681" fg:w="132"/><text x="24.4785%" y="271.50"></text></g><g><title>zend_hash_str_update (132 samples, 0.48%)</title><rect x="24.2285%" y="245" width="0.4787%" height="15" fill="rgb(237,53,32)" fg:x="6681" fg:w="132"/><text x="24.4785%" y="255.50"></text></g><g><title>zend_hash_func (3 samples, 0.01%)</title><rect x="24.6963%" y="229" width="0.0109%" height="15" fill="rgb(233,25,53)" fg:x="6810" fg:w="3"/><text x="24.9463%" y="239.50"></text></g><g><title>zend_inline_hash_func (3 samples, 0.01%)</title><rect x="24.6963%" y="213" width="0.0109%" height="15" fill="rgb(210,40,34)" fg:x="6810" fg:w="3"/><text x="24.9463%" y="223.50"></text></g><g><title>function&lt;void (&amp;)(void *), void&gt; (4 samples, 0.01%)</title><rect x="25.3672%" y="229" width="0.0145%" height="15" fill="rgb(241,220,44)" fg:x="6995" fg:w="4"/><text x="25.6172%" y="239.50"></text></g><g><title>std::_Function_base::_Base_manager&lt;void (*)(void*)&gt;::_M_init_functor&lt;void (&amp;)(void*)&gt; (4 samples, 0.01%)</title><rect x="25.3672%" y="213" width="0.0145%" height="15" fill="rgb(235,28,35)" fg:x="6995" fg:w="4"/><text x="25.6172%" y="223.50"></text></g><g><title>std::_Function_base::_Base_manager&lt;void (*)(void*)&gt;::_M_create&lt;void (&amp;)(void*)&gt; (4 samples, 0.01%)</title><rect x="25.3672%" y="197" width="0.0145%" height="15" fill="rgb(210,56,17)" fg:x="6995" fg:w="4"/><text x="25.6172%" y="207.50"></text></g><g><title>swoole::Coroutine::count (8 samples, 0.03%)</title><rect x="25.3817%" y="229" width="0.0290%" height="15" fill="rgb(224,130,29)" fg:x="6999" fg:w="8"/><text x="25.6317%" y="239.50"></text></g><g><title>std::unordered_map&lt;long, swoole::Coroutine*, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt; &gt;::size (8 samples, 0.03%)</title><rect x="25.3817%" y="213" width="0.0290%" height="15" fill="rgb(235,212,8)" fg:x="6999" fg:w="8"/><text x="25.6317%" y="223.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (8 samples, 0.03%)</title><rect x="25.3817%" y="197" width="0.0290%" height="15" fill="rgb(223,33,50)" fg:x="6999" fg:w="8"/><text x="25.6317%" y="207.50"></text></g><g><title>function (8 samples, 0.03%)</title><rect x="26.3935%" y="181" width="0.0290%" height="15" fill="rgb(219,149,13)" fg:x="7278" fg:w="8"/><text x="26.6435%" y="191.50"></text></g><g><title>_Function_base (4 samples, 0.01%)</title><rect x="26.4080%" y="165" width="0.0145%" height="15" fill="rgb(250,156,29)" fg:x="7282" fg:w="4"/><text x="26.6580%" y="175.50"></text></g><g><title>Context (111 samples, 0.40%)</title><rect x="26.0598%" y="197" width="0.4025%" height="15" fill="rgb(216,193,19)" fg:x="7186" fg:w="111"/><text x="26.3098%" y="207.50"></text></g><g><title>sw_malloc (11 samples, 0.04%)</title><rect x="26.4225%" y="181" width="0.0399%" height="15" fill="rgb(216,135,14)" fg:x="7286" fg:w="11"/><text x="26.6725%" y="191.50"></text></g><g><title>function (16 samples, 0.06%)</title><rect x="26.4624%" y="197" width="0.0580%" height="15" fill="rgb(241,47,5)" fg:x="7297" fg:w="16"/><text x="26.7124%" y="207.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_manager (13 samples, 0.05%)</title><rect x="26.4733%" y="181" width="0.0471%" height="15" fill="rgb(233,42,35)" fg:x="7300" fg:w="13"/><text x="26.7233%" y="191.50"></text></g><g><title>_Scoped_node&lt;const std::piecewise_construct_t &amp;, std::tuple&lt;const long &amp;&gt;, std::tuple&lt;&gt; &gt; (17 samples, 0.06%)</title><rect x="26.5204%" y="165" width="0.0617%" height="15" fill="rgb(231,13,6)" fg:x="7313" fg:w="17"/><text x="26.7704%" y="175.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;long const&amp;&gt;, std::tuple&lt;&gt; &gt; (17 samples, 0.06%)</title><rect x="26.5204%" y="149" width="0.0617%" height="15" fill="rgb(207,181,40)" fg:x="7313" fg:w="17"/><text x="26.7704%" y="159.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::allocate (17 samples, 0.06%)</title><rect x="26.5204%" y="133" width="0.0617%" height="15" fill="rgb(254,173,49)" fg:x="7313" fg:w="17"/><text x="26.7704%" y="143.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt;::allocate (17 samples, 0.06%)</title><rect x="26.5204%" y="117" width="0.0617%" height="15" fill="rgb(221,1,38)" fg:x="7313" fg:w="17"/><text x="26.7704%" y="127.50"></text></g><g><title>operator new (16 samples, 0.06%)</title><rect x="26.5240%" y="101" width="0.0580%" height="15" fill="rgb(206,124,46)" fg:x="7314" fg:w="16"/><text x="26.7740%" y="111.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (3 samples, 0.01%)</title><rect x="26.5820%" y="165" width="0.0109%" height="15" fill="rgb(249,21,11)" fg:x="7330" fg:w="3"/><text x="26.8320%" y="175.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (3 samples, 0.01%)</title><rect x="26.5820%" y="149" width="0.0109%" height="15" fill="rgb(222,201,40)" fg:x="7330" fg:w="3"/><text x="26.8320%" y="159.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator (3 samples, 0.01%)</title><rect x="26.5820%" y="133" width="0.0109%" height="15" fill="rgb(235,61,29)" fg:x="7330" fg:w="3"/><text x="26.8320%" y="143.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (203 samples, 0.74%)</title><rect x="26.5929%" y="165" width="0.7362%" height="15" fill="rgb(219,207,3)" fg:x="7333" fg:w="203"/><text x="26.8429%" y="175.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (203 samples, 0.74%)</title><rect x="26.5929%" y="149" width="0.7362%" height="15" fill="rgb(222,56,46)" fg:x="7333" fg:w="203"/><text x="26.8429%" y="159.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (6 samples, 0.02%)</title><rect x="27.3617%" y="149" width="0.0218%" height="15" fill="rgb(239,76,54)" fg:x="7545" fg:w="6"/><text x="27.6117%" y="159.50"></text></g><g><title>std::unordered_map&lt;long, swoole::Coroutine*, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt; &gt;::operator[] (367 samples, 1.33%)</title><rect x="26.5204%" y="197" width="1.3309%" height="15" fill="rgb(231,124,27)" fg:x="7313" fg:w="367"/><text x="26.7704%" y="207.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (367 samples, 1.33%)</title><rect x="26.5204%" y="181" width="1.3309%" height="15" fill="rgb(249,195,6)" fg:x="7313" fg:w="367"/><text x="26.7704%" y="191.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (144 samples, 0.52%)</title><rect x="27.3291%" y="165" width="0.5222%" height="15" fill="rgb(237,174,47)" fg:x="7536" fg:w="144"/><text x="27.5791%" y="175.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (129 samples, 0.47%)</title><rect x="27.3835%" y="149" width="0.4678%" height="15" fill="rgb(206,201,31)" fg:x="7551" fg:w="129"/><text x="27.6335%" y="159.50"></text></g><g><title>swoole::Timer::get_absolute_msec (25 samples, 0.09%)</title><rect x="27.8513%" y="197" width="0.0907%" height="15" fill="rgb(231,57,52)" fg:x="7680" fg:w="25"/><text x="28.1013%" y="207.50"></text></g><g><title>swoole::Timer::now (20 samples, 0.07%)</title><rect x="27.8694%" y="181" width="0.0725%" height="15" fill="rgb(248,177,22)" fg:x="7685" fg:w="20"/><text x="28.1194%" y="191.50"></text></g><g><title>std::chrono::_V2::steady_clock::now (28 samples, 0.10%)</title><rect x="27.9420%" y="181" width="0.1015%" height="15" fill="rgb(215,211,37)" fg:x="7705" fg:w="28"/><text x="28.1920%" y="191.50"></text></g><g><title>swoole::time&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt; (30 samples, 0.11%)</title><rect x="27.9420%" y="197" width="0.1088%" height="15" fill="rgb(241,128,51)" fg:x="7705" fg:w="30"/><text x="28.1920%" y="207.50"></text></g><g><title>Coroutine (793 samples, 2.88%)</title><rect x="25.4107%" y="213" width="2.8758%" height="15" fill="rgb(227,165,31)" fg:x="7007" fg:w="793"/><text x="25.6607%" y="223.50">Co..</text></g><g><title>~_Function_base (65 samples, 0.24%)</title><rect x="28.0508%" y="197" width="0.2357%" height="15" fill="rgb(228,167,24)" fg:x="7735" fg:w="65"/><text x="28.3008%" y="207.50"></text></g><g><title>operator delete (24 samples, 0.09%)</title><rect x="28.3772%" y="181" width="0.0870%" height="15" fill="rgb(228,143,12)" fg:x="7825" fg:w="24"/><text x="28.6272%" y="191.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_remove_bucket_begin (11 samples, 0.04%)</title><rect x="28.5549%" y="101" width="0.0399%" height="15" fill="rgb(249,149,8)" fg:x="7874" fg:w="11"/><text x="28.8049%" y="111.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (57 samples, 0.21%)</title><rect x="28.5549%" y="117" width="0.2067%" height="15" fill="rgb(243,35,44)" fg:x="7874" fg:w="57"/><text x="28.8049%" y="127.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_deallocate_node (46 samples, 0.17%)</title><rect x="28.5947%" y="101" width="0.1668%" height="15" fill="rgb(246,89,9)" fg:x="7885" fg:w="46"/><text x="28.8447%" y="111.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (46 samples, 0.17%)</title><rect x="28.5947%" y="85" width="0.1668%" height="15" fill="rgb(233,213,13)" fg:x="7885" fg:w="46"/><text x="28.8447%" y="95.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt; &gt;::deallocate (46 samples, 0.17%)</title><rect x="28.5947%" y="69" width="0.1668%" height="15" fill="rgb(233,141,41)" fg:x="7885" fg:w="46"/><text x="28.8447%" y="79.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;long const, swoole::Coroutine*&gt;, false&gt; &gt;::deallocate (46 samples, 0.17%)</title><rect x="28.5947%" y="53" width="0.1668%" height="15" fill="rgb(239,167,4)" fg:x="7885" fg:w="46"/><text x="28.8447%" y="63.50"></text></g><g><title>operator delete (46 samples, 0.17%)</title><rect x="28.5947%" y="37" width="0.1668%" height="15" fill="rgb(209,217,16)" fg:x="7885" fg:w="46"/><text x="28.8447%" y="47.50"></text></g><g><title>std::unordered_map&lt;long, swoole::Coroutine*, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt; &gt;::erase (72 samples, 0.26%)</title><rect x="28.5549%" y="165" width="0.2611%" height="15" fill="rgb(219,88,35)" fg:x="7874" fg:w="72"/><text x="28.8049%" y="175.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (72 samples, 0.26%)</title><rect x="28.5549%" y="149" width="0.2611%" height="15" fill="rgb(220,193,23)" fg:x="7874" fg:w="72"/><text x="28.8049%" y="159.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (72 samples, 0.26%)</title><rect x="28.5549%" y="133" width="0.2611%" height="15" fill="rgb(230,90,52)" fg:x="7874" fg:w="72"/><text x="28.8049%" y="143.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::allocator&lt;std::pair&lt;long const, swoole::Coroutine*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.05%)</title><rect x="28.7616%" y="117" width="0.0544%" height="15" fill="rgb(252,106,19)" fg:x="7931" fg:w="15"/><text x="29.0116%" y="127.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;long, std::pair&lt;long const, swoole::Coroutine*&gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (5 samples, 0.02%)</title><rect x="28.7978%" y="101" width="0.0181%" height="15" fill="rgb(206,74,20)" fg:x="7941" fg:w="5"/><text x="29.0478%" y="111.50"></text></g><g><title>std::equal_to&lt;long&gt;::operator (5 samples, 0.02%)</title><rect x="28.7978%" y="85" width="0.0181%" height="15" fill="rgb(230,138,44)" fg:x="7941" fg:w="5"/><text x="29.0478%" y="95.50"></text></g><g><title>swoole::PHPCoroutine::restore_task (5 samples, 0.02%)</title><rect x="29.0190%" y="149" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="8002" fg:w="5"/><text x="29.2690%" y="159.50"></text></g><g><title>swoole::PHPCoroutine::restore_vm_stack (4 samples, 0.01%)</title><rect x="29.0227%" y="133" width="0.0145%" height="15" fill="rgb(242,16,51)" fg:x="8003" fg:w="4"/><text x="29.2727%" y="143.50"></text></g><g><title>_efree (21 samples, 0.08%)</title><rect x="29.0626%" y="133" width="0.0762%" height="15" fill="rgb(248,9,4)" fg:x="8014" fg:w="21"/><text x="29.3126%" y="143.50"></text></g><g><title>zend_mm_free_heap (18 samples, 0.07%)</title><rect x="29.0734%" y="117" width="0.0653%" height="15" fill="rgb(210,31,22)" fg:x="8017" fg:w="18"/><text x="29.3234%" y="127.50"></text></g><g><title>swoole::PHPCoroutine::vm_stack_destroy (107 samples, 0.39%)</title><rect x="29.0372%" y="149" width="0.3880%" height="15" fill="rgb(239,54,39)" fg:x="8007" fg:w="107"/><text x="29.2872%" y="159.50"></text></g><g><title>zend_mm_free_pages (79 samples, 0.29%)</title><rect x="29.1387%" y="133" width="0.2865%" height="15" fill="rgb(230,99,41)" fg:x="8035" fg:w="79"/><text x="29.3887%" y="143.50"></text></g><g><title>zend_mm_free_pages_ex (79 samples, 0.29%)</title><rect x="29.1387%" y="117" width="0.2865%" height="15" fill="rgb(253,106,12)" fg:x="8035" fg:w="79"/><text x="29.3887%" y="127.50"></text></g><g><title>zend_mm_bitset_reset_range (38 samples, 0.14%)</title><rect x="29.2874%" y="101" width="0.1378%" height="15" fill="rgb(213,46,41)" fg:x="8076" fg:w="38"/><text x="29.5374%" y="111.50"></text></g><g><title>swoole::PHPCoroutine::on_close (170 samples, 0.62%)</title><rect x="28.8160%" y="165" width="0.6165%" height="15" fill="rgb(215,133,35)" fg:x="7946" fg:w="170"/><text x="29.0660%" y="175.50"></text></g><g><title>sw_free (23 samples, 0.08%)</title><rect x="29.5340%" y="133" width="0.0834%" height="15" fill="rgb(213,28,5)" fg:x="8144" fg:w="23"/><text x="29.7840%" y="143.50"></text></g><g><title>swoole::Coroutine::close (329 samples, 1.19%)</title><rect x="28.4642%" y="181" width="1.1931%" height="15" fill="rgb(215,77,49)" fg:x="7849" fg:w="329"/><text x="28.7142%" y="191.50"></text></g><g><title>~Coroutine (62 samples, 0.22%)</title><rect x="29.4325%" y="165" width="0.2248%" height="15" fill="rgb(248,100,22)" fg:x="8116" fg:w="62"/><text x="29.6825%" y="175.50"></text></g><g><title>~Context (62 samples, 0.22%)</title><rect x="29.4325%" y="149" width="0.2248%" height="15" fill="rgb(208,67,9)" fg:x="8116" fg:w="62"/><text x="29.6825%" y="159.50"></text></g><g><title>~_Function_base (11 samples, 0.04%)</title><rect x="29.6174%" y="133" width="0.0399%" height="15" fill="rgb(219,133,21)" fg:x="8167" fg:w="11"/><text x="29.8674%" y="143.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_manager (11 samples, 0.04%)</title><rect x="29.6174%" y="117" width="0.0399%" height="15" fill="rgb(246,46,29)" fg:x="8167" fg:w="11"/><text x="29.8674%" y="127.50"></text></g><g><title>swoole::Coroutine::check_end (359 samples, 1.30%)</title><rect x="28.3699%" y="197" width="1.3019%" height="15" fill="rgb(246,185,52)" fg:x="7823" fg:w="359"/><text x="28.6199%" y="207.50"></text></g><g><title>swoole::coroutine::Context::is_end (4 samples, 0.01%)</title><rect x="29.6573%" y="181" width="0.0145%" height="15" fill="rgb(252,136,11)" fg:x="8178" fg:w="4"/><text x="29.9073%" y="191.50"></text></g><g><title>swoole::Coroutine::create (1,176 samples, 4.26%)</title><rect x="25.4107%" y="229" width="4.2647%" height="15" fill="rgb(219,138,53)" fg:x="7007" fg:w="1176"/><text x="25.6607%" y="239.50">swool..</text></g><g><title>swoole::Coroutine::run (383 samples, 1.39%)</title><rect x="28.2865%" y="213" width="1.3889%" height="15" fill="rgb(211,51,23)" fg:x="7800" fg:w="383"/><text x="28.5365%" y="223.50"></text></g><g><title>swoole::PHPCoroutine::save_og (5 samples, 0.02%)</title><rect x="29.6754%" y="213" width="0.0181%" height="15" fill="rgb(247,221,28)" fg:x="8183" fg:w="5"/><text x="29.9254%" y="223.50"></text></g><g><title>swoole::PHPCoroutine::save_task (25 samples, 0.09%)</title><rect x="29.6754%" y="229" width="0.0907%" height="15" fill="rgb(251,222,45)" fg:x="8183" fg:w="25"/><text x="29.9254%" y="239.50"></text></g><g><title>swoole::PHPCoroutine::save_vm_stack (20 samples, 0.07%)</title><rect x="29.6936%" y="213" width="0.0725%" height="15" fill="rgb(217,162,53)" fg:x="8188" fg:w="20"/><text x="29.9436%" y="223.50"></text></g><g><title>http_server_process_request (1,396 samples, 5.06%)</title><rect x="24.7072%" y="277" width="5.0626%" height="15" fill="rgb(229,93,14)" fg:x="6813" fg:w="1396"/><text x="24.9572%" y="287.50">http_s..</text></g><g><title>zend::function::call (1,353 samples, 4.91%)</title><rect x="24.8631%" y="261" width="4.9066%" height="15" fill="rgb(209,67,49)" fg:x="6856" fg:w="1353"/><text x="25.1131%" y="271.50">zend::..</text></g><g><title>swoole::PHPCoroutine::create (1,308 samples, 4.74%)</title><rect x="25.0263%" y="245" width="4.7434%" height="15" fill="rgb(213,87,29)" fg:x="6901" fg:w="1308"/><text x="25.2763%" y="255.50">swoole..</text></g><g><title>php_swoole_get_recv_data (12 samples, 0.04%)</title><rect x="29.7697%" y="277" width="0.0435%" height="15" fill="rgb(205,151,52)" fg:x="8209" fg:w="12"/><text x="30.0197%" y="287.50"></text></g><g><title>zend_string_init (4 samples, 0.01%)</title><rect x="29.7987%" y="261" width="0.0145%" height="15" fill="rgb(253,215,39)" fg:x="8217" fg:w="4"/><text x="30.0487%" y="271.50"></text></g><g><title>zend_string_alloc (4 samples, 0.01%)</title><rect x="29.7987%" y="245" width="0.0145%" height="15" fill="rgb(221,220,41)" fg:x="8217" fg:w="4"/><text x="30.0487%" y="255.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="29.8024%" y="229" width="0.0109%" height="15" fill="rgb(218,133,21)" fg:x="8218" fg:w="3"/><text x="30.0524%" y="239.50"></text></g><g><title>zend_mm_alloc_heap (3 samples, 0.01%)</title><rect x="29.8024%" y="213" width="0.0109%" height="15" fill="rgb(221,193,43)" fg:x="8218" fg:w="3"/><text x="30.0524%" y="223.50"></text></g><g><title>php_swoole_server_get_fci_cache (94 samples, 0.34%)</title><rect x="29.8132%" y="277" width="0.3409%" height="15" fill="rgb(240,128,52)" fg:x="8221" fg:w="94"/><text x="30.0632%" y="287.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (30 samples, 0.11%)</title><rect x="30.0453%" y="261" width="0.1088%" height="15" fill="rgb(253,114,12)" fg:x="8285" fg:w="30"/><text x="30.2953%" y="271.50"></text></g><g><title>php_swoole_server_isset_callback (28 samples, 0.10%)</title><rect x="30.1541%" y="277" width="0.1015%" height="15" fill="rgb(215,223,47)" fg:x="8315" fg:w="28"/><text x="30.4041%" y="287.50"></text></g><g><title>swoole::ServerObject::isset_callback (28 samples, 0.10%)</title><rect x="30.1541%" y="261" width="0.1015%" height="15" fill="rgb(248,225,23)" fg:x="8315" fg:w="28"/><text x="30.4041%" y="271.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (12 samples, 0.04%)</title><rect x="30.2665%" y="277" width="0.0435%" height="15" fill="rgb(250,108,0)" fg:x="8346" fg:w="12"/><text x="30.5165%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (35 samples, 0.13%)</title><rect x="30.5131%" y="213" width="0.1269%" height="15" fill="rgb(228,208,7)" fg:x="8414" fg:w="35"/><text x="30.7631%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (99 samples, 0.36%)</title><rect x="30.3318%" y="261" width="0.3590%" height="15" fill="rgb(244,45,10)" fg:x="8364" fg:w="99"/><text x="30.5818%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (99 samples, 0.36%)</title><rect x="30.3318%" y="245" width="0.3590%" height="15" fill="rgb(207,125,25)" fg:x="8364" fg:w="99"/><text x="30.5818%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (99 samples, 0.36%)</title><rect x="30.3318%" y="229" width="0.3590%" height="15" fill="rgb(210,195,18)" fg:x="8364" fg:w="99"/><text x="30.5818%" y="239.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (14 samples, 0.05%)</title><rect x="30.6401%" y="213" width="0.0508%" height="15" fill="rgb(249,80,12)" fg:x="8449" fg:w="14"/><text x="30.8901%" y="223.50"></text></g><g><title>std::shared_ptr&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator= (5 samples, 0.02%)</title><rect x="30.6908%" y="261" width="0.0181%" height="15" fill="rgb(221,65,9)" fg:x="8463" fg:w="5"/><text x="30.9408%" y="271.50"></text></g><g><title>std::__shared_ptr&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::operator= (5 samples, 0.02%)</title><rect x="30.6908%" y="245" width="0.0181%" height="15" fill="rgb(235,49,36)" fg:x="8463" fg:w="5"/><text x="30.9408%" y="255.50"></text></g><g><title>swoole::http::Context::init (116 samples, 0.42%)</title><rect x="30.3101%" y="277" width="0.4207%" height="15" fill="rgb(225,32,20)" fg:x="8358" fg:w="116"/><text x="30.5601%" y="287.50"></text></g><g><title>swoole::http::Context::bind (6 samples, 0.02%)</title><rect x="30.7090%" y="261" width="0.0218%" height="15" fill="rgb(215,141,46)" fg:x="8468" fg:w="6"/><text x="30.9590%" y="271.50"></text></g><g><title>swoole::http::Context::parse (31 samples, 0.11%)</title><rect x="30.7307%" y="277" width="0.1124%" height="15" fill="rgb(250,160,47)" fg:x="8474" fg:w="31"/><text x="30.9807%" y="287.50"></text></g><g><title>swoole::network::Address::get_ip (8 samples, 0.03%)</title><rect x="30.8432%" y="277" width="0.0290%" height="15" fill="rgb(216,222,40)" fg:x="8505" fg:w="8"/><text x="31.0932%" y="287.50"></text></g><g><title>swoole::network::Address::get_addr (8 samples, 0.03%)</title><rect x="30.8432%" y="261" width="0.0290%" height="15" fill="rgb(234,217,39)" fg:x="8505" fg:w="8"/><text x="31.0932%" y="271.50"></text></g><g><title>swoole::network::Address::get_port (53 samples, 0.19%)</title><rect x="30.8722%" y="277" width="0.1922%" height="15" fill="rgb(207,178,40)" fg:x="8513" fg:w="53"/><text x="31.1222%" y="287.50"></text></g><g><title>object_properties_init (47 samples, 0.17%)</title><rect x="31.2747%" y="213" width="0.1704%" height="15" fill="rgb(221,136,13)" fg:x="8624" fg:w="47"/><text x="31.5247%" y="223.50"></text></g><g><title>_object_properties_init (42 samples, 0.15%)</title><rect x="31.2928%" y="197" width="0.1523%" height="15" fill="rgb(249,199,10)" fg:x="8629" fg:w="42"/><text x="31.5428%" y="207.50"></text></g><g><title>zend_mm_alloc_small (3 samples, 0.01%)</title><rect x="31.4742%" y="165" width="0.0109%" height="15" fill="rgb(249,222,13)" fg:x="8679" fg:w="3"/><text x="31.7242%" y="175.50"></text></g><g><title>_emalloc (9 samples, 0.03%)</title><rect x="31.4560%" y="197" width="0.0326%" height="15" fill="rgb(244,185,38)" fg:x="8674" fg:w="9"/><text x="31.7060%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (4 samples, 0.01%)</title><rect x="31.4742%" y="181" width="0.0145%" height="15" fill="rgb(236,202,9)" fg:x="8679" fg:w="4"/><text x="31.7242%" y="191.50"></text></g><g><title>zend_object_alloc (13 samples, 0.05%)</title><rect x="31.4451%" y="213" width="0.0471%" height="15" fill="rgb(250,229,37)" fg:x="8671" fg:w="13"/><text x="31.6951%" y="223.50"></text></g><g><title>php_swoole_http_request_create_object (99 samples, 0.36%)</title><rect x="31.2747%" y="229" width="0.3590%" height="15" fill="rgb(206,174,23)" fg:x="8624" fg:w="99"/><text x="31.5247%" y="239.50"></text></g><g><title>zend_object_std_init (39 samples, 0.14%)</title><rect x="31.4923%" y="213" width="0.1414%" height="15" fill="rgb(211,33,43)" fg:x="8684" fg:w="39"/><text x="31.7423%" y="223.50"></text></g><g><title>_zend_object_std_init (39 samples, 0.14%)</title><rect x="31.4923%" y="197" width="0.1414%" height="15" fill="rgb(245,58,50)" fg:x="8684" fg:w="39"/><text x="31.7423%" y="207.50"></text></g><g><title>zend_objects_store_put (37 samples, 0.13%)</title><rect x="31.4995%" y="181" width="0.1342%" height="15" fill="rgb(244,68,36)" fg:x="8686" fg:w="37"/><text x="31.7495%" y="191.50"></text></g><g><title>object_properties_init (39 samples, 0.14%)</title><rect x="31.6337%" y="213" width="0.1414%" height="15" fill="rgb(232,229,15)" fg:x="8723" fg:w="39"/><text x="31.8837%" y="223.50"></text></g><g><title>_object_properties_init (39 samples, 0.14%)</title><rect x="31.6337%" y="197" width="0.1414%" height="15" fill="rgb(254,30,23)" fg:x="8723" fg:w="39"/><text x="31.8837%" y="207.50"></text></g><g><title>object_init_ex (185 samples, 0.67%)</title><rect x="31.1151%" y="261" width="0.6709%" height="15" fill="rgb(235,160,14)" fg:x="8580" fg:w="185"/><text x="31.3651%" y="271.50"></text></g><g><title>_object_and_properties_init (185 samples, 0.67%)</title><rect x="31.1151%" y="245" width="0.6709%" height="15" fill="rgb(212,155,44)" fg:x="8580" fg:w="185"/><text x="31.3651%" y="255.50"></text></g><g><title>php_swoole_http_response_create_object (42 samples, 0.15%)</title><rect x="31.6337%" y="229" width="0.1523%" height="15" fill="rgb(226,2,50)" fg:x="8723" fg:w="42"/><text x="31.8837%" y="239.50"></text></g><g><title>php_swoole_http_request_set_context (38 samples, 0.14%)</title><rect x="31.7860%" y="261" width="0.1378%" height="15" fill="rgb(234,177,6)" fg:x="8765" fg:w="38"/><text x="32.0360%" y="271.50"></text></g><g><title>php_swoole_http_response_set_context (11 samples, 0.04%)</title><rect x="31.9238%" y="261" width="0.0399%" height="15" fill="rgb(217,24,9)" fg:x="8803" fg:w="11"/><text x="32.1738%" y="271.50"></text></g><g><title>_emalloc_56 (33 samples, 0.12%)</title><rect x="31.9674%" y="229" width="0.1197%" height="15" fill="rgb(220,13,46)" fg:x="8815" fg:w="33"/><text x="32.2174%" y="239.50"></text></g><g><title>zend_mm_alloc_small (3 samples, 0.01%)</title><rect x="32.0762%" y="213" width="0.0109%" height="15" fill="rgb(239,221,27)" fg:x="8845" fg:w="3"/><text x="32.3262%" y="223.50"></text></g><g><title>_zend_new_array_0 (65 samples, 0.24%)</title><rect x="31.9674%" y="245" width="0.2357%" height="15" fill="rgb(222,198,25)" fg:x="8815" fg:w="65"/><text x="32.2174%" y="255.50"></text></g><g><title>_zend_hash_init_int (32 samples, 0.12%)</title><rect x="32.0870%" y="229" width="0.1160%" height="15" fill="rgb(211,99,13)" fg:x="8848" fg:w="32"/><text x="32.3370%" y="239.50"></text></g><g><title>zend_gc_set_refcount (14 samples, 0.05%)</title><rect x="32.1523%" y="213" width="0.0508%" height="15" fill="rgb(232,111,31)" fg:x="8866" fg:w="14"/><text x="32.4023%" y="223.50"></text></g><g><title>zend_string_equal_content (20 samples, 0.07%)</title><rect x="32.2756%" y="149" width="0.0725%" height="15" fill="rgb(245,82,37)" fg:x="8900" fg:w="20"/><text x="32.5256%" y="159.50"></text></g><g><title>zend_read_property_ex (41 samples, 0.15%)</title><rect x="32.2031%" y="229" width="0.1487%" height="15" fill="rgb(227,149,46)" fg:x="8880" fg:w="41"/><text x="32.4531%" y="239.50"></text></g><g><title>zend_std_read_property (41 samples, 0.15%)</title><rect x="32.2031%" y="213" width="0.1487%" height="15" fill="rgb(218,36,50)" fg:x="8880" fg:w="41"/><text x="32.4531%" y="223.50"></text></g><g><title>zend_get_property_offset (39 samples, 0.14%)</title><rect x="32.2103%" y="197" width="0.1414%" height="15" fill="rgb(226,80,48)" fg:x="8882" fg:w="39"/><text x="32.4603%" y="207.50"></text></g><g><title>zend_hash_find (23 samples, 0.08%)</title><rect x="32.2684%" y="181" width="0.0834%" height="15" fill="rgb(238,224,15)" fg:x="8898" fg:w="23"/><text x="32.5184%" y="191.50"></text></g><g><title>zend_hash_find_bucket (23 samples, 0.08%)</title><rect x="32.2684%" y="165" width="0.0834%" height="15" fill="rgb(241,136,10)" fg:x="8898" fg:w="23"/><text x="32.5184%" y="175.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="32.3518%" y="229" width="0.0109%" height="15" fill="rgb(208,32,45)" fg:x="8921" fg:w="3"/><text x="32.6018%" y="239.50"></text></g><g><title>swoole_http_init_and_read_property (111 samples, 0.40%)</title><rect x="31.9637%" y="261" width="0.4025%" height="15" fill="rgb(207,135,9)" fg:x="8814" fg:w="111"/><text x="32.2137%" y="271.50"></text></g><g><title>zend_read_property (45 samples, 0.16%)</title><rect x="32.2031%" y="245" width="0.1632%" height="15" fill="rgb(206,86,44)" fg:x="8880" fg:w="45"/><text x="32.4531%" y="255.50"></text></g><g><title>property_uses_strict_types (15 samples, 0.05%)</title><rect x="32.4170%" y="213" width="0.0544%" height="15" fill="rgb(245,177,15)" fg:x="8939" fg:w="15"/><text x="32.6670%" y="223.50"></text></g><g><title>zend_string_equal_content (46 samples, 0.17%)</title><rect x="32.8522%" y="165" width="0.1668%" height="15" fill="rgb(206,64,50)" fg:x="9059" fg:w="46"/><text x="33.1022%" y="175.50"></text></g><g><title>zend_string_equal_val (16 samples, 0.06%)</title><rect x="32.9610%" y="149" width="0.0580%" height="15" fill="rgb(234,36,40)" fg:x="9089" fg:w="16"/><text x="33.2110%" y="159.50"></text></g><g><title>zend_std_write_property (179 samples, 0.65%)</title><rect x="32.4062%" y="229" width="0.6491%" height="15" fill="rgb(213,64,8)" fg:x="8936" fg:w="179"/><text x="32.6562%" y="239.50"></text></g><g><title>zend_get_property_offset (160 samples, 0.58%)</title><rect x="32.4751%" y="213" width="0.5802%" height="15" fill="rgb(210,75,36)" fg:x="8955" fg:w="160"/><text x="32.7251%" y="223.50"></text></g><g><title>zend_hash_find (93 samples, 0.34%)</title><rect x="32.7180%" y="197" width="0.3373%" height="15" fill="rgb(229,88,21)" fg:x="9022" fg:w="93"/><text x="32.9680%" y="207.50"></text></g><g><title>zend_hash_find_bucket (92 samples, 0.33%)</title><rect x="32.7217%" y="181" width="0.3336%" height="15" fill="rgb(252,204,47)" fg:x="9023" fg:w="92"/><text x="32.9717%" y="191.50"></text></g><g><title>zend_string_hash_val (10 samples, 0.04%)</title><rect x="33.0190%" y="165" width="0.0363%" height="15" fill="rgb(208,77,27)" fg:x="9105" fg:w="10"/><text x="33.2690%" y="175.50"></text></g><g><title>zend_string_hash_func (10 samples, 0.04%)</title><rect x="33.0190%" y="149" width="0.0363%" height="15" fill="rgb(221,76,26)" fg:x="9105" fg:w="10"/><text x="33.2690%" y="159.50"></text></g><g><title>zend_hash_func (10 samples, 0.04%)</title><rect x="33.0190%" y="133" width="0.0363%" height="15" fill="rgb(225,139,18)" fg:x="9105" fg:w="10"/><text x="33.2690%" y="143.50"></text></g><g><title>zend_inline_hash_func (10 samples, 0.04%)</title><rect x="33.0190%" y="117" width="0.0363%" height="15" fill="rgb(230,137,11)" fg:x="9105" fg:w="10"/><text x="33.2690%" y="127.50"></text></g><g><title>zend_string_init (4 samples, 0.01%)</title><rect x="33.0553%" y="229" width="0.0145%" height="15" fill="rgb(212,28,1)" fg:x="9115" fg:w="4"/><text x="33.3053%" y="239.50"></text></g><g><title>zend_string_alloc (3 samples, 0.01%)</title><rect x="33.0589%" y="213" width="0.0109%" height="15" fill="rgb(248,164,17)" fg:x="9116" fg:w="3"/><text x="33.3089%" y="223.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="33.0589%" y="197" width="0.0109%" height="15" fill="rgb(222,171,42)" fg:x="9116" fg:w="3"/><text x="33.3089%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (3 samples, 0.01%)</title><rect x="33.0589%" y="181" width="0.0109%" height="15" fill="rgb(243,84,45)" fg:x="9116" fg:w="3"/><text x="33.3089%" y="191.50"></text></g><g><title>swoole_http_context_new (555 samples, 2.01%)</title><rect x="31.0644%" y="277" width="2.0127%" height="15" fill="rgb(252,49,23)" fg:x="8566" fg:w="555"/><text x="31.3144%" y="287.50">s..</text></g><g><title>zend_update_property_long (196 samples, 0.71%)</title><rect x="32.3663%" y="261" width="0.7108%" height="15" fill="rgb(215,19,7)" fg:x="8925" fg:w="196"/><text x="32.6163%" y="271.50"></text></g><g><title>zend_update_property (191 samples, 0.69%)</title><rect x="32.3844%" y="245" width="0.6927%" height="15" fill="rgb(238,81,41)" fg:x="8930" fg:w="191"/><text x="32.6344%" y="255.50"></text></g><g><title>http_request_message_complete (39 samples, 0.14%)</title><rect x="35.6047%" y="261" width="0.1414%" height="15" fill="rgb(210,199,37)" fg:x="9818" fg:w="39"/><text x="35.8547%" y="271.50"></text></g><g><title>http_request_on_header_field (5 samples, 0.02%)</title><rect x="35.7461%" y="261" width="0.0181%" height="15" fill="rgb(244,192,49)" fg:x="9857" fg:w="5"/><text x="35.9961%" y="271.50"></text></g><g><title>zend_hash_real_init_mixed (29 samples, 0.11%)</title><rect x="36.0145%" y="181" width="0.1052%" height="15" fill="rgb(226,211,11)" fg:x="9931" fg:w="29"/><text x="36.2645%" y="191.50"></text></g><g><title>zend_hash_real_init_mixed_ex (29 samples, 0.11%)</title><rect x="36.0145%" y="165" width="0.1052%" height="15" fill="rgb(236,162,54)" fg:x="9931" fg:w="29"/><text x="36.2645%" y="175.50"></text></g><g><title>_emalloc_320 (25 samples, 0.09%)</title><rect x="36.0290%" y="149" width="0.0907%" height="15" fill="rgb(220,229,9)" fg:x="9935" fg:w="25"/><text x="36.2790%" y="159.50"></text></g><g><title>zend_mm_alloc_small (13 samples, 0.05%)</title><rect x="36.0725%" y="133" width="0.0471%" height="15" fill="rgb(250,87,22)" fg:x="9947" fg:w="13"/><text x="36.3225%" y="143.50"></text></g><g><title>add_assoc_stringl_ex (39 samples, 0.14%)</title><rect x="35.9891%" y="245" width="0.1414%" height="15" fill="rgb(239,43,17)" fg:x="9924" fg:w="39"/><text x="36.2391%" y="255.50"></text></g><g><title>zend_symtable_str_update (37 samples, 0.13%)</title><rect x="35.9964%" y="229" width="0.1342%" height="15" fill="rgb(231,177,25)" fg:x="9926" fg:w="37"/><text x="36.2464%" y="239.50"></text></g><g><title>zend_hash_str_update (36 samples, 0.13%)</title><rect x="36.0000%" y="213" width="0.1306%" height="15" fill="rgb(219,179,1)" fg:x="9927" fg:w="36"/><text x="36.2500%" y="223.50"></text></g><g><title>_zend_hash_str_add_or_update_i (36 samples, 0.13%)</title><rect x="36.0000%" y="197" width="0.1306%" height="15" fill="rgb(238,219,53)" fg:x="9927" fg:w="36"/><text x="36.2500%" y="207.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="36.1197%" y="181" width="0.0109%" height="15" fill="rgb(232,167,36)" fg:x="9960" fg:w="3"/><text x="36.3697%" y="191.50"></text></g><g><title>zend_string_alloc (3 samples, 0.01%)</title><rect x="36.1197%" y="165" width="0.0109%" height="15" fill="rgb(244,19,51)" fg:x="9960" fg:w="3"/><text x="36.3697%" y="175.50"></text></g><g><title>swoole_streq (10 samples, 0.04%)</title><rect x="36.1306%" y="245" width="0.0363%" height="15" fill="rgb(224,6,22)" fg:x="9963" fg:w="10"/><text x="36.3806%" y="255.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="36.1704%" y="229" width="0.0109%" height="15" fill="rgb(224,145,5)" fg:x="9974" fg:w="3"/><text x="36.4204%" y="239.50"></text></g><g><title>http_request_on_header_value (159 samples, 0.58%)</title><rect x="35.7643%" y="261" width="0.5766%" height="15" fill="rgb(234,130,49)" fg:x="9862" fg:w="159"/><text x="36.0143%" y="271.50"></text></g><g><title>zend_str_tolower_dup (48 samples, 0.17%)</title><rect x="36.1668%" y="245" width="0.1741%" height="15" fill="rgb(254,6,2)" fg:x="9973" fg:w="48"/><text x="36.4168%" y="255.50"></text></g><g><title>zend_str_tolower_copy (44 samples, 0.16%)</title><rect x="36.1813%" y="229" width="0.1596%" height="15" fill="rgb(208,96,46)" fg:x="9977" fg:w="44"/><text x="36.4313%" y="239.50"></text></g><g><title>zend_str_tolower_impl (42 samples, 0.15%)</title><rect x="36.1886%" y="213" width="0.1523%" height="15" fill="rgb(239,3,39)" fg:x="9979" fg:w="42"/><text x="36.4386%" y="223.50"></text></g><g><title>_zend_hash_str_add_or_update_i (4 samples, 0.01%)</title><rect x="36.5150%" y="197" width="0.0145%" height="15" fill="rgb(233,210,1)" fg:x="10069" fg:w="4"/><text x="36.7650%" y="207.50"></text></g><g><title>add_assoc_double_ex (34 samples, 0.12%)</title><rect x="36.4424%" y="245" width="0.1233%" height="15" fill="rgb(244,137,37)" fg:x="10049" fg:w="34"/><text x="36.6924%" y="255.50"></text></g><g><title>zend_symtable_str_update (33 samples, 0.12%)</title><rect x="36.4461%" y="229" width="0.1197%" height="15" fill="rgb(240,136,2)" fg:x="10050" fg:w="33"/><text x="36.6961%" y="239.50"></text></g><g><title>zend_hash_str_update (14 samples, 0.05%)</title><rect x="36.5150%" y="213" width="0.0508%" height="15" fill="rgb(239,18,37)" fg:x="10069" fg:w="14"/><text x="36.7650%" y="223.50"></text></g><g><title>zend_hash_func (10 samples, 0.04%)</title><rect x="36.5295%" y="197" width="0.0363%" height="15" fill="rgb(218,185,22)" fg:x="10073" fg:w="10"/><text x="36.7795%" y="207.50"></text></g><g><title>zend_inline_hash_func (10 samples, 0.04%)</title><rect x="36.5295%" y="181" width="0.0363%" height="15" fill="rgb(225,218,4)" fg:x="10073" fg:w="10"/><text x="36.7795%" y="191.50"></text></g><g><title>_zend_hash_str_add_or_update_i (4 samples, 0.01%)</title><rect x="36.5875%" y="197" width="0.0145%" height="15" fill="rgb(230,182,32)" fg:x="10089" fg:w="4"/><text x="36.8375%" y="207.50"></text></g><g><title>add_assoc_long_ex (11 samples, 0.04%)</title><rect x="36.5657%" y="245" width="0.0399%" height="15" fill="rgb(242,56,43)" fg:x="10083" fg:w="11"/><text x="36.8157%" y="255.50"></text></g><g><title>zend_symtable_str_update (7 samples, 0.03%)</title><rect x="36.5802%" y="229" width="0.0254%" height="15" fill="rgb(233,99,24)" fg:x="10087" fg:w="7"/><text x="36.8302%" y="239.50"></text></g><g><title>zend_hash_str_update (7 samples, 0.03%)</title><rect x="36.5802%" y="213" width="0.0254%" height="15" fill="rgb(234,209,42)" fg:x="10087" fg:w="7"/><text x="36.8302%" y="223.50"></text></g><g><title>add_assoc_str_ex (12 samples, 0.04%)</title><rect x="36.6056%" y="245" width="0.0435%" height="15" fill="rgb(227,7,12)" fg:x="10094" fg:w="12"/><text x="36.8556%" y="255.50"></text></g><g><title>zend_symtable_str_update (6 samples, 0.02%)</title><rect x="36.6274%" y="229" width="0.0218%" height="15" fill="rgb(245,203,43)" fg:x="10100" fg:w="6"/><text x="36.8774%" y="239.50"></text></g><g><title>zend_hash_str_update (6 samples, 0.02%)</title><rect x="36.6274%" y="213" width="0.0218%" height="15" fill="rgb(238,205,33)" fg:x="10100" fg:w="6"/><text x="36.8774%" y="223.50"></text></g><g><title>zend_hash_func (4 samples, 0.01%)</title><rect x="36.6346%" y="197" width="0.0145%" height="15" fill="rgb(231,56,7)" fg:x="10102" fg:w="4"/><text x="36.8846%" y="207.50"></text></g><g><title>zend_inline_hash_func (4 samples, 0.01%)</title><rect x="36.6346%" y="181" width="0.0145%" height="15" fill="rgb(244,186,29)" fg:x="10102" fg:w="4"/><text x="36.8846%" y="191.50"></text></g><g><title>zend_mm_alloc_small (6 samples, 0.02%)</title><rect x="36.7108%" y="165" width="0.0218%" height="15" fill="rgb(234,111,31)" fg:x="10123" fg:w="6"/><text x="36.9608%" y="175.50"></text></g><g><title>zend_string_init (9 samples, 0.03%)</title><rect x="36.7035%" y="229" width="0.0326%" height="15" fill="rgb(241,149,10)" fg:x="10121" fg:w="9"/><text x="36.9535%" y="239.50"></text></g><g><title>zend_string_alloc (8 samples, 0.03%)</title><rect x="36.7072%" y="213" width="0.0290%" height="15" fill="rgb(249,206,44)" fg:x="10122" fg:w="8"/><text x="36.9572%" y="223.50"></text></g><g><title>_emalloc (8 samples, 0.03%)</title><rect x="36.7072%" y="197" width="0.0290%" height="15" fill="rgb(251,153,30)" fg:x="10122" fg:w="8"/><text x="36.9572%" y="207.50"></text></g><g><title>zend_mm_alloc_heap (7 samples, 0.03%)</title><rect x="36.7108%" y="181" width="0.0254%" height="15" fill="rgb(239,152,38)" fg:x="10123" fg:w="7"/><text x="36.9608%" y="191.50"></text></g><g><title>_zend_handle_numeric_str (49 samples, 0.18%)</title><rect x="36.7362%" y="213" width="0.1777%" height="15" fill="rgb(249,139,47)" fg:x="10130" fg:w="49"/><text x="36.9862%" y="223.50"></text></g><g><title>_zend_hash_str_add_or_update_i (20 samples, 0.07%)</title><rect x="36.9139%" y="197" width="0.0725%" height="15" fill="rgb(244,64,35)" fg:x="10179" fg:w="20"/><text x="37.1639%" y="207.50"></text></g><g><title>zend_string_init (5 samples, 0.02%)</title><rect x="36.9683%" y="181" width="0.0181%" height="15" fill="rgb(216,46,15)" fg:x="10194" fg:w="5"/><text x="37.2183%" y="191.50"></text></g><g><title>zend_string_alloc (4 samples, 0.01%)</title><rect x="36.9719%" y="165" width="0.0145%" height="15" fill="rgb(250,74,19)" fg:x="10195" fg:w="4"/><text x="37.2219%" y="175.50"></text></g><g><title>add_assoc_string_ex (104 samples, 0.38%)</title><rect x="36.6491%" y="245" width="0.3772%" height="15" fill="rgb(249,42,33)" fg:x="10106" fg:w="104"/><text x="36.8991%" y="255.50"></text></g><g><title>zend_symtable_str_update (80 samples, 0.29%)</title><rect x="36.7362%" y="229" width="0.2901%" height="15" fill="rgb(242,149,17)" fg:x="10130" fg:w="80"/><text x="36.9862%" y="239.50"></text></g><g><title>zend_hash_str_update (31 samples, 0.11%)</title><rect x="36.9139%" y="213" width="0.1124%" height="15" fill="rgb(244,29,21)" fg:x="10179" fg:w="31"/><text x="37.1639%" y="223.50"></text></g><g><title>zend_hash_func (11 samples, 0.04%)</title><rect x="36.9864%" y="197" width="0.0399%" height="15" fill="rgb(220,130,37)" fg:x="10199" fg:w="11"/><text x="37.2364%" y="207.50"></text></g><g><title>zend_inline_hash_func (11 samples, 0.04%)</title><rect x="36.9864%" y="181" width="0.0399%" height="15" fill="rgb(211,67,2)" fg:x="10199" fg:w="11"/><text x="37.2364%" y="191.50"></text></g><g><title>zend_string_init (4 samples, 0.01%)</title><rect x="37.0263%" y="229" width="0.0145%" height="15" fill="rgb(235,68,52)" fg:x="10210" fg:w="4"/><text x="37.2763%" y="239.50"></text></g><g><title>_zend_hash_str_add_or_update_i (7 samples, 0.03%)</title><rect x="37.0408%" y="197" width="0.0254%" height="15" fill="rgb(246,142,3)" fg:x="10214" fg:w="7"/><text x="37.2908%" y="207.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="37.0553%" y="181" width="0.0109%" height="15" fill="rgb(241,25,7)" fg:x="10218" fg:w="3"/><text x="37.3053%" y="191.50"></text></g><g><title>zend_string_alloc (3 samples, 0.01%)</title><rect x="37.0553%" y="165" width="0.0109%" height="15" fill="rgb(242,119,39)" fg:x="10218" fg:w="3"/><text x="37.3053%" y="175.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="37.0553%" y="149" width="0.0109%" height="15" fill="rgb(241,98,45)" fg:x="10218" fg:w="3"/><text x="37.3053%" y="159.50"></text></g><g><title>zend_mm_alloc_heap (3 samples, 0.01%)</title><rect x="37.0553%" y="133" width="0.0109%" height="15" fill="rgb(254,28,30)" fg:x="10218" fg:w="3"/><text x="37.3053%" y="143.50"></text></g><g><title>zend_mm_alloc_small (3 samples, 0.01%)</title><rect x="37.0553%" y="117" width="0.0109%" height="15" fill="rgb(241,142,54)" fg:x="10218" fg:w="3"/><text x="37.3053%" y="127.50"></text></g><g><title>add_assoc_stringl_ex (17 samples, 0.06%)</title><rect x="37.0263%" y="245" width="0.0617%" height="15" fill="rgb(222,85,15)" fg:x="10210" fg:w="17"/><text x="37.2763%" y="255.50"></text></g><g><title>zend_symtable_str_update (13 samples, 0.05%)</title><rect x="37.0408%" y="229" width="0.0471%" height="15" fill="rgb(210,85,47)" fg:x="10214" fg:w="13"/><text x="37.2908%" y="239.50"></text></g><g><title>zend_hash_str_update (13 samples, 0.05%)</title><rect x="37.0408%" y="213" width="0.0471%" height="15" fill="rgb(224,206,25)" fg:x="10214" fg:w="13"/><text x="37.2908%" y="223.50"></text></g><g><title>zend_hash_func (6 samples, 0.02%)</title><rect x="37.0662%" y="197" width="0.0218%" height="15" fill="rgb(243,201,19)" fg:x="10221" fg:w="6"/><text x="37.3162%" y="207.50"></text></g><g><title>zend_inline_hash_func (6 samples, 0.02%)</title><rect x="37.0662%" y="181" width="0.0218%" height="15" fill="rgb(236,59,4)" fg:x="10221" fg:w="6"/><text x="37.3162%" y="191.50"></text></g><g><title>php_url_decode (14 samples, 0.05%)</title><rect x="37.0879%" y="245" width="0.0508%" height="15" fill="rgb(254,179,45)" fg:x="10227" fg:w="14"/><text x="37.3379%" y="255.50"></text></g><g><title>swoole::microtime (5 samples, 0.02%)</title><rect x="37.1387%" y="245" width="0.0181%" height="15" fill="rgb(226,14,10)" fg:x="10241" fg:w="5"/><text x="37.3887%" y="255.50"></text></g><g><title>http_request_on_headers_complete (228 samples, 0.83%)</title><rect x="36.3409%" y="261" width="0.8268%" height="15" fill="rgb(244,27,41)" fg:x="10021" fg:w="228"/><text x="36.5909%" y="271.50"></text></g><g><title>zend_string_init (3 samples, 0.01%)</title><rect x="37.1568%" y="245" width="0.0109%" height="15" fill="rgb(235,35,32)" fg:x="10246" fg:w="3"/><text x="37.4068%" y="255.50"></text></g><g><title>zend_string_alloc (3 samples, 0.01%)</title><rect x="37.1568%" y="229" width="0.0109%" height="15" fill="rgb(218,68,31)" fg:x="10246" fg:w="3"/><text x="37.4068%" y="239.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="37.1568%" y="213" width="0.0109%" height="15" fill="rgb(207,120,37)" fg:x="10246" fg:w="3"/><text x="37.4068%" y="223.50"></text></g><g><title>zend_mm_alloc_heap (3 samples, 0.01%)</title><rect x="37.1568%" y="197" width="0.0109%" height="15" fill="rgb(227,98,0)" fg:x="10246" fg:w="3"/><text x="37.4068%" y="207.50"></text></g><g><title>swoole_http_parser_execute (1,146 samples, 4.16%)</title><rect x="33.0771%" y="277" width="4.1559%" height="15" fill="rgb(207,7,3)" fg:x="9121" fg:w="1146"/><text x="33.3271%" y="287.50">swool..</text></g><g><title>http_request_on_path (18 samples, 0.07%)</title><rect x="37.1677%" y="261" width="0.0653%" height="15" fill="rgb(206,98,19)" fg:x="10249" fg:w="18"/><text x="37.4177%" y="271.50"></text></g><g><title>_estrndup (16 samples, 0.06%)</title><rect x="37.1750%" y="245" width="0.0580%" height="15" fill="rgb(217,5,26)" fg:x="10251" fg:w="16"/><text x="37.4250%" y="255.50"></text></g><g><title>_emalloc (3 samples, 0.01%)</title><rect x="37.2221%" y="229" width="0.0109%" height="15" fill="rgb(235,190,38)" fg:x="10264" fg:w="3"/><text x="37.4721%" y="239.50"></text></g><g><title>swoole_http_parser_init (21 samples, 0.08%)</title><rect x="37.2330%" y="277" width="0.0762%" height="15" fill="rgb(247,86,24)" fg:x="10267" fg:w="21"/><text x="37.4830%" y="287.50"></text></g><g><title>swoole_http_server_onBeforeRequest (67 samples, 0.24%)</title><rect x="37.3092%" y="277" width="0.2430%" height="15" fill="rgb(205,101,16)" fg:x="10288" fg:w="67"/><text x="37.5592%" y="287.50"></text></g><g><title>_efree (57 samples, 0.21%)</title><rect x="38.0598%" y="261" width="0.2067%" height="15" fill="rgb(246,168,33)" fg:x="10495" fg:w="57"/><text x="38.3098%" y="271.50"></text></g><g><title>zend_mm_free_heap (56 samples, 0.20%)</title><rect x="38.0635%" y="245" width="0.2031%" height="15" fill="rgb(231,114,1)" fg:x="10496" fg:w="56"/><text x="38.3135%" y="255.50"></text></g><g><title>gc_remove_from_buffer (220 samples, 0.80%)</title><rect x="38.2665%" y="261" width="0.7978%" height="15" fill="rgb(207,184,53)" fg:x="10552" fg:w="220"/><text x="38.5165%" y="271.50"></text></g><g><title>gc_remove_from_roots (115 samples, 0.42%)</title><rect x="38.6473%" y="245" width="0.4170%" height="15" fill="rgb(224,95,51)" fg:x="10657" fg:w="115"/><text x="38.8973%" y="255.50"></text></g><g><title>gc_link_unused (113 samples, 0.41%)</title><rect x="38.6546%" y="229" width="0.4098%" height="15" fill="rgb(212,188,45)" fg:x="10659" fg:w="113"/><text x="38.9046%" y="239.50"></text></g><g><title>zend_get_property_offset (232 samples, 0.84%)</title><rect x="39.4887%" y="197" width="0.8413%" height="15" fill="rgb(223,154,38)" fg:x="10889" fg:w="232"/><text x="39.7387%" y="207.50"></text></g><g><title>zend_hash_find (112 samples, 0.41%)</title><rect x="39.9238%" y="181" width="0.4062%" height="15" fill="rgb(251,22,52)" fg:x="11009" fg:w="112"/><text x="40.1738%" y="191.50"></text></g><g><title>zend_hash_find_bucket (112 samples, 0.41%)</title><rect x="39.9238%" y="165" width="0.4062%" height="15" fill="rgb(229,209,22)" fg:x="11009" fg:w="112"/><text x="40.1738%" y="175.50"></text></g><g><title>zend_string_hash_val (9 samples, 0.03%)</title><rect x="40.2974%" y="149" width="0.0326%" height="15" fill="rgb(234,138,34)" fg:x="11112" fg:w="9"/><text x="40.5474%" y="159.50"></text></g><g><title>sw_zend_read_property_ex (252 samples, 0.91%)</title><rect x="39.4778%" y="245" width="0.9139%" height="15" fill="rgb(212,95,11)" fg:x="10886" fg:w="252"/><text x="39.7278%" y="255.50"></text></g><g><title>zend_read_property_ex (252 samples, 0.91%)</title><rect x="39.4778%" y="229" width="0.9139%" height="15" fill="rgb(240,179,47)" fg:x="10886" fg:w="252"/><text x="39.7278%" y="239.50"></text></g><g><title>zend_std_read_property (251 samples, 0.91%)</title><rect x="39.4814%" y="213" width="0.9102%" height="15" fill="rgb(240,163,11)" fg:x="10887" fg:w="251"/><text x="39.7314%" y="223.50"></text></g><g><title>zval_get_type (17 samples, 0.06%)</title><rect x="40.3300%" y="197" width="0.0617%" height="15" fill="rgb(236,37,12)" fg:x="11121" fg:w="17"/><text x="40.5800%" y="207.50"></text></g><g><title>swoole::http::Context::free (5 samples, 0.02%)</title><rect x="40.3917%" y="245" width="0.0181%" height="15" fill="rgb(232,164,16)" fg:x="11138" fg:w="5"/><text x="40.6417%" y="255.50"></text></g><g><title>_efree_56 (20 samples, 0.07%)</title><rect x="40.7761%" y="213" width="0.0725%" height="15" fill="rgb(244,205,15)" fg:x="11244" fg:w="20"/><text x="41.0261%" y="223.50"></text></g><g><title>_efree (102 samples, 0.37%)</title><rect x="41.2004%" y="197" width="0.3699%" height="15" fill="rgb(223,117,47)" fg:x="11361" fg:w="102"/><text x="41.4504%" y="207.50"></text></g><g><title>zend_mm_free_heap (102 samples, 0.37%)</title><rect x="41.2004%" y="181" width="0.3699%" height="15" fill="rgb(244,107,35)" fg:x="11361" fg:w="102"/><text x="41.4504%" y="191.50"></text></g><g><title>zend_mm_free_small (38 samples, 0.14%)</title><rect x="41.4325%" y="165" width="0.1378%" height="15" fill="rgb(205,140,8)" fg:x="11425" fg:w="38"/><text x="41.6825%" y="175.50"></text></g><g><title>_efree (119 samples, 0.43%)</title><rect x="42.2665%" y="181" width="0.4316%" height="15" fill="rgb(228,84,46)" fg:x="11655" fg:w="119"/><text x="42.5165%" y="191.50"></text></g><g><title>zend_mm_free_heap (85 samples, 0.31%)</title><rect x="42.3898%" y="165" width="0.3083%" height="15" fill="rgb(254,188,9)" fg:x="11689" fg:w="85"/><text x="42.6398%" y="175.50"></text></g><g><title>zend_mm_free_small (54 samples, 0.20%)</title><rect x="42.5023%" y="149" width="0.1958%" height="15" fill="rgb(206,112,54)" fg:x="11720" fg:w="54"/><text x="42.7523%" y="159.50"></text></g><g><title>i_zval_ptr_dtor (581 samples, 2.11%)</title><rect x="41.5703%" y="197" width="2.1070%" height="15" fill="rgb(216,84,49)" fg:x="11463" fg:w="581"/><text x="41.8203%" y="207.50">i..</text></g><g><title>zend_gc_delref (268 samples, 0.97%)</title><rect x="42.7053%" y="181" width="0.9719%" height="15" fill="rgb(214,194,35)" fg:x="11776" fg:w="268"/><text x="42.9553%" y="191.50"></text></g><g><title>_efree (55 samples, 0.20%)</title><rect x="44.5694%" y="181" width="0.1995%" height="15" fill="rgb(249,28,3)" fg:x="12290" fg:w="55"/><text x="44.8194%" y="191.50"></text></g><g><title>zend_mm_free_heap (51 samples, 0.18%)</title><rect x="44.5839%" y="165" width="0.1850%" height="15" fill="rgb(222,56,52)" fg:x="12294" fg:w="51"/><text x="44.8339%" y="175.50"></text></g><g><title>zend_array_destroy (1,082 samples, 3.92%)</title><rect x="40.8486%" y="213" width="3.9238%" height="15" fill="rgb(245,217,50)" fg:x="11264" fg:w="1082"/><text x="41.0986%" y="223.50">zend..</text></g><g><title>zend_string_release_ex (302 samples, 1.10%)</title><rect x="43.6772%" y="197" width="1.0952%" height="15" fill="rgb(213,201,24)" fg:x="12044" fg:w="302"/><text x="43.9272%" y="207.50"></text></g><g><title>php_swoole_http_request_free_object (1,624 samples, 5.89%)</title><rect x="39.0644%" y="261" width="5.8894%" height="15" fill="rgb(248,116,28)" fg:x="10772" fg:w="1624"/><text x="39.3144%" y="271.50">php_swo..</text></g><g><title>zend_object_std_dtor (1,253 samples, 4.54%)</title><rect x="40.4098%" y="245" width="4.5440%" height="15" fill="rgb(219,72,43)" fg:x="11143" fg:w="1253"/><text x="40.6598%" y="255.50">zend_..</text></g><g><title>i_zval_ptr_dtor (1,152 samples, 4.18%)</title><rect x="40.7761%" y="229" width="4.1777%" height="15" fill="rgb(209,138,14)" fg:x="11244" fg:w="1152"/><text x="41.0261%" y="239.50">i_zva..</text></g><g><title>zend_gc_delref (50 samples, 0.18%)</title><rect x="44.7724%" y="213" width="0.1813%" height="15" fill="rgb(222,18,33)" fg:x="12346" fg:w="50"/><text x="45.0224%" y="223.50"></text></g><g><title>zend_string_release (127 samples, 0.46%)</title><rect x="45.3672%" y="229" width="0.4606%" height="15" fill="rgb(213,199,7)" fg:x="12510" fg:w="127"/><text x="45.6172%" y="239.50"></text></g><g><title>__gnu_cxx::__exchange_and_add_dispatch (102 samples, 0.37%)</title><rect x="46.0272%" y="165" width="0.3699%" height="15" fill="rgb(250,110,10)" fg:x="12692" fg:w="102"/><text x="46.2772%" y="175.50"></text></g><g><title>__gnu_cxx::__exchange_and_add (102 samples, 0.37%)</title><rect x="46.0272%" y="149" width="0.3699%" height="15" fill="rgb(248,123,6)" fg:x="12692" fg:w="102"/><text x="46.2772%" y="159.50"></text></g><g><title>~__shared_ptr (160 samples, 0.58%)</title><rect x="45.8277%" y="213" width="0.5802%" height="15" fill="rgb(206,91,31)" fg:x="12637" fg:w="160"/><text x="46.0777%" y="223.50"></text></g><g><title>~__shared_count (160 samples, 0.58%)</title><rect x="45.8277%" y="197" width="0.5802%" height="15" fill="rgb(211,154,13)" fg:x="12637" fg:w="160"/><text x="46.0777%" y="207.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (109 samples, 0.40%)</title><rect x="46.0127%" y="181" width="0.3953%" height="15" fill="rgb(225,148,7)" fg:x="12688" fg:w="109"/><text x="46.2627%" y="191.50"></text></g><g><title>swoole::http::Context::free (354 samples, 1.28%)</title><rect x="45.1496%" y="245" width="1.2838%" height="15" fill="rgb(220,160,43)" fg:x="12450" fg:w="354"/><text x="45.3996%" y="255.50"></text></g><g><title>~Context (167 samples, 0.61%)</title><rect x="45.8277%" y="229" width="0.6056%" height="15" fill="rgb(213,52,39)" fg:x="12637" fg:w="167"/><text x="46.0777%" y="239.50"></text></g><g><title>~basic_string (7 samples, 0.03%)</title><rect x="46.4080%" y="213" width="0.0254%" height="15" fill="rgb(243,137,7)" fg:x="12797" fg:w="7"/><text x="46.6580%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (7 samples, 0.03%)</title><rect x="46.4080%" y="197" width="0.0254%" height="15" fill="rgb(230,79,13)" fg:x="12797" fg:w="7"/><text x="46.6580%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (7 samples, 0.03%)</title><rect x="46.4080%" y="181" width="0.0254%" height="15" fill="rgb(247,105,23)" fg:x="12797" fg:w="7"/><text x="46.6580%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6 samples, 0.02%)</title><rect x="46.4116%" y="165" width="0.0218%" height="15" fill="rgb(223,179,41)" fg:x="12798" fg:w="6"/><text x="46.6616%" y="175.50"></text></g><g><title>_efree (4 samples, 0.01%)</title><rect x="46.6219%" y="197" width="0.0145%" height="15" fill="rgb(218,9,34)" fg:x="12856" fg:w="4"/><text x="46.8719%" y="207.50"></text></g><g><title>zend_mm_free_heap (4 samples, 0.01%)</title><rect x="46.6219%" y="181" width="0.0145%" height="15" fill="rgb(222,106,8)" fg:x="12856" fg:w="4"/><text x="46.8719%" y="191.50"></text></g><g><title>i_zval_ptr_dtor (18 samples, 0.07%)</title><rect x="46.6364%" y="197" width="0.0653%" height="15" fill="rgb(211,220,0)" fg:x="12860" fg:w="18"/><text x="46.8864%" y="207.50"></text></g><g><title>zend_array_destroy (30 samples, 0.11%)</title><rect x="46.6074%" y="213" width="0.1088%" height="15" fill="rgb(229,52,16)" fg:x="12852" fg:w="30"/><text x="46.8574%" y="223.50"></text></g><g><title>zend_string_release_ex (4 samples, 0.01%)</title><rect x="46.7017%" y="197" width="0.0145%" height="15" fill="rgb(212,155,18)" fg:x="12878" fg:w="4"/><text x="46.9517%" y="207.50"></text></g><g><title>_efree (3 samples, 0.01%)</title><rect x="46.7053%" y="181" width="0.0109%" height="15" fill="rgb(242,21,14)" fg:x="12879" fg:w="3"/><text x="46.9553%" y="191.50"></text></g><g><title>php_swoole_http_response_free_object (491 samples, 1.78%)</title><rect x="44.9538%" y="261" width="1.7806%" height="15" fill="rgb(222,19,48)" fg:x="12396" fg:w="491"/><text x="45.2038%" y="271.50">p..</text></g><g><title>zend_object_std_dtor (83 samples, 0.30%)</title><rect x="46.4334%" y="245" width="0.3010%" height="15" fill="rgb(232,45,27)" fg:x="12804" fg:w="83"/><text x="46.6834%" y="255.50"></text></g><g><title>i_zval_ptr_dtor (37 samples, 0.13%)</title><rect x="46.6002%" y="229" width="0.1342%" height="15" fill="rgb(249,103,42)" fg:x="12850" fg:w="37"/><text x="46.8502%" y="239.50"></text></g><g><title>zend_gc_delref (5 samples, 0.02%)</title><rect x="46.7162%" y="213" width="0.0181%" height="15" fill="rgb(246,81,33)" fg:x="12882" fg:w="5"/><text x="46.9662%" y="223.50"></text></g><g><title>zend_fiber_switch_block (80 samples, 0.29%)</title><rect x="46.7344%" y="261" width="0.2901%" height="15" fill="rgb(252,33,42)" fg:x="12887" fg:w="80"/><text x="46.9844%" y="271.50"></text></g><g><title>zend_vm_stack_free_call_frame (7 samples, 0.03%)</title><rect x="48.3880%" y="181" width="0.0254%" height="15" fill="rgb(209,212,41)" fg:x="13343" fg:w="7"/><text x="48.6380%" y="191.50"></text></g><g><title>zend_vm_stack_free_call_frame_ex (7 samples, 0.03%)</title><rect x="48.3880%" y="165" width="0.0254%" height="15" fill="rgb(207,154,6)" fg:x="13343" fg:w="7"/><text x="48.6380%" y="175.50"></text></g><g><title>zend_call_known_instance_method_with_0_params (290 samples, 1.05%)</title><rect x="47.4306%" y="245" width="1.0517%" height="15" fill="rgb(223,64,47)" fg:x="13079" fg:w="290"/><text x="47.6806%" y="255.50"></text></g><g><title>zend_call_known_instance_method (290 samples, 1.05%)</title><rect x="47.4306%" y="229" width="1.0517%" height="15" fill="rgb(211,161,38)" fg:x="13079" fg:w="290"/><text x="47.6806%" y="239.50"></text></g><g><title>zend_call_known_function (252 samples, 0.91%)</title><rect x="47.5684%" y="213" width="0.9139%" height="15" fill="rgb(219,138,40)" fg:x="13117" fg:w="252"/><text x="47.8184%" y="223.50"></text></g><g><title>zend_call_function (239 samples, 0.87%)</title><rect x="47.6156%" y="197" width="0.8667%" height="15" fill="rgb(241,228,46)" fg:x="13130" fg:w="239"/><text x="47.8656%" y="207.50"></text></g><g><title>zend_vm_stack_push_call_frame (19 samples, 0.07%)</title><rect x="48.4134%" y="181" width="0.0689%" height="15" fill="rgb(223,209,38)" fg:x="13350" fg:w="19"/><text x="48.6634%" y="191.50"></text></g><g><title>zend_vm_stack_push_call_frame_ex (19 samples, 0.07%)</title><rect x="48.4134%" y="165" width="0.0689%" height="15" fill="rgb(236,164,45)" fg:x="13350" fg:w="19"/><text x="48.6634%" y="175.50"></text></g><g><title>zend_gc_addref (9 samples, 0.03%)</title><rect x="48.4823%" y="245" width="0.0326%" height="15" fill="rgb(231,15,5)" fg:x="13369" fg:w="9"/><text x="48.7323%" y="255.50"></text></g><g><title>zend_objects_store_del (3,022 samples, 10.96%)</title><rect x="37.5594%" y="277" width="10.9592%" height="15" fill="rgb(252,35,15)" fg:x="10357" fg:w="3022"/><text x="37.8094%" y="287.50">zend_objects_sto..</text></g><g><title>zend_objects_destroy_object (410 samples, 1.49%)</title><rect x="47.0317%" y="261" width="1.4869%" height="15" fill="rgb(248,181,18)" fg:x="12969" fg:w="410"/><text x="47.2817%" y="271.50"></text></g><g><title>rc_dtor_func (80 samples, 0.29%)</title><rect x="48.8776%" y="245" width="0.2901%" height="15" fill="rgb(233,39,42)" fg:x="13478" fg:w="80"/><text x="49.1276%" y="255.50"></text></g><g><title>php_swoole_http_server_onReceive (7,028 samples, 25.49%)</title><rect x="23.7607%" y="293" width="25.4869%" height="15" fill="rgb(238,110,33)" fg:x="6552" fg:w="7028"/><text x="24.0107%" y="303.50">php_swoole_http_server_onReceive</text></g><g><title>zval_ptr_dtor (201 samples, 0.73%)</title><rect x="48.5186%" y="277" width="0.7289%" height="15" fill="rgb(233,195,10)" fg:x="13379" fg:w="201"/><text x="48.7686%" y="287.50"></text></g><g><title>i_zval_ptr_dtor (201 samples, 0.73%)</title><rect x="48.5186%" y="261" width="0.7289%" height="15" fill="rgb(254,105,3)" fg:x="13379" fg:w="201"/><text x="48.7686%" y="271.50"></text></g><g><title>zend_gc_delref (22 samples, 0.08%)</title><rect x="49.1677%" y="245" width="0.0798%" height="15" fill="rgb(221,225,9)" fg:x="13558" fg:w="22"/><text x="49.4177%" y="255.50"></text></g><g><title>std::_Function_base::_M_empty (22 samples, 0.08%)</title><rect x="49.2475%" y="293" width="0.0798%" height="15" fill="rgb(224,227,45)" fg:x="13580" fg:w="22"/><text x="49.4975%" y="303.50"></text></g><g><title>swoole::BaseFactory::dispatch (7,523 samples, 27.28%)</title><rect x="22.0997%" y="357" width="27.2820%" height="15" fill="rgb(229,198,43)" fg:x="6094" fg:w="7523"/><text x="22.3497%" y="367.50">swoole::BaseFactory::dispatch</text></g><g><title>swoole::Server::worker_accept_event (7,361 samples, 26.69%)</title><rect x="22.6872%" y="341" width="26.6945%" height="15" fill="rgb(206,209,35)" fg:x="6256" fg:w="7361"/><text x="22.9372%" y="351.50">swoole::Server::worker_accept_event</text></g><g><title>swoole::Worker_do_task (7,065 samples, 25.62%)</title><rect x="23.7607%" y="325" width="25.6210%" height="15" fill="rgb(245,195,53)" fg:x="6552" fg:w="7065"/><text x="24.0107%" y="335.50">swoole::Worker_do_task</text></g><g><title>std::function&lt;int (swoole::Server*, swoole::RecvData*)&gt;::operator (7,065 samples, 25.62%)</title><rect x="23.7607%" y="309" width="25.6210%" height="15" fill="rgb(240,92,26)" fg:x="6552" fg:w="7065"/><text x="24.0107%" y="319.50">std::function&lt;int (swoole::Server*, swool..</text></g><g><title>std::_Function_handler&lt;int (swoole::Server*, swoole::RecvData*), int (*)(swoole::Server*, swoole::RecvData*)&gt;::_M_invoke (15 samples, 0.05%)</title><rect x="49.3273%" y="293" width="0.0544%" height="15" fill="rgb(207,40,23)" fg:x="13602" fg:w="15"/><text x="49.5773%" y="303.50"></text></g><g><title>std::__invoke_r&lt;int, int (*&amp;)(swoole::Server*, swoole::RecvData*), swoole::Server*, swoole::RecvData*&gt; (15 samples, 0.05%)</title><rect x="49.3273%" y="277" width="0.0544%" height="15" fill="rgb(223,111,35)" fg:x="13602" fg:w="15"/><text x="49.5773%" y="287.50"></text></g><g><title>std::__invoke_impl&lt;int, int (*&amp;)(swoole::Server*, swoole::RecvData*), swoole::Server*, swoole::RecvData*&gt; (15 samples, 0.05%)</title><rect x="49.3273%" y="261" width="0.0544%" height="15" fill="rgb(229,147,28)" fg:x="13602" fg:w="15"/><text x="49.5773%" y="271.50"></text></g><g><title>swoole::Server::get_port_by_fd (9 samples, 0.03%)</title><rect x="49.3817%" y="357" width="0.0326%" height="15" fill="rgb(211,29,28)" fg:x="13617" fg:w="9"/><text x="49.6317%" y="367.50"></text></g><g><title>swoole::Server::is_process_mode (5 samples, 0.02%)</title><rect x="49.4143%" y="357" width="0.0181%" height="15" fill="rgb(228,72,33)" fg:x="13626" fg:w="5"/><text x="49.6643%" y="367.50"></text></g><g><title>swoole::Server::dispatch_task (7,689 samples, 27.88%)</title><rect x="21.5594%" y="373" width="27.8840%" height="15" fill="rgb(205,214,31)" fg:x="5945" fg:w="7689"/><text x="21.8094%" y="383.50">swoole::Server::dispatch_task</text></g><g><title>swoole::Server::worker_accept_event (3 samples, 0.01%)</title><rect x="49.4325%" y="357" width="0.0109%" height="15" fill="rgb(224,111,15)" fg:x="13631" fg:w="3"/><text x="49.6825%" y="367.50"></text></g><g><title>swoole::Server::get_recv_buffer (5 samples, 0.02%)</title><rect x="49.4433%" y="373" width="0.0181%" height="15" fill="rgb(253,21,26)" fg:x="13634" fg:w="5"/><text x="49.6933%" y="383.50"></text></g><g><title>swoole::http_server::Request::get_header_length (48 samples, 0.17%)</title><rect x="49.4615%" y="373" width="0.1741%" height="15" fill="rgb(245,139,43)" fg:x="13639" fg:w="48"/><text x="49.7115%" y="383.50"></text></g><g><title>swoole::http_server::Request::get_protocol (76 samples, 0.28%)</title><rect x="49.6355%" y="373" width="0.2756%" height="15" fill="rgb(252,170,7)" fg:x="13687" fg:w="76"/><text x="49.8855%" y="383.50"></text></g><g><title>swoole::http_server::Request::parse_header_info (25 samples, 0.09%)</title><rect x="49.9112%" y="373" width="0.0907%" height="15" fill="rgb(231,118,14)" fg:x="13763" fg:w="25"/><text x="50.1612%" y="383.50"></text></g><g><title>swoole_strcasect (5 samples, 0.02%)</title><rect x="49.9837%" y="357" width="0.0181%" height="15" fill="rgb(238,83,0)" fg:x="13783" fg:w="5"/><text x="50.2337%" y="367.50"></text></g><g><title>swoole::http_server::dispatch_request (3 samples, 0.01%)</title><rect x="50.0018%" y="373" width="0.0109%" height="15" fill="rgb(221,39,39)" fg:x="13788" fg:w="3"/><text x="50.2518%" y="383.50"></text></g><g><title>swoole::Server::is_unavailable (3 samples, 0.01%)</title><rect x="50.0018%" y="357" width="0.0109%" height="15" fill="rgb(222,119,46)" fg:x="13788" fg:w="3"/><text x="50.2518%" y="367.50"></text></g><g><title>swoole::Port_onRead_http (8,256 samples, 29.94%)</title><rect x="20.0870%" y="389" width="29.9402%" height="15" fill="rgb(222,165,49)" fg:x="5539" fg:w="8256"/><text x="20.3370%" y="399.50">swoole::Port_onRead_http</text></g><g><title>swoole::network::Socket::recv (4 samples, 0.01%)</title><rect x="50.0127%" y="373" width="0.0145%" height="15" fill="rgb(219,113,52)" fg:x="13791" fg:w="4"/><text x="50.2627%" y="383.50"></text></g><g><title>swoole::Server::get_port_by_fd (37 samples, 0.13%)</title><rect x="50.0308%" y="389" width="0.1342%" height="15" fill="rgb(214,7,15)" fg:x="13796" fg:w="37"/><text x="50.2808%" y="399.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (37 samples, 0.13%)</title><rect x="50.0308%" y="373" width="0.1342%" height="15" fill="rgb(235,32,4)" fg:x="13796" fg:w="37"/><text x="50.2808%" y="383.50"></text></g><g><title>swoole::ReactorThread_onRead (8,560 samples, 31.04%)</title><rect x="19.1550%" y="405" width="31.0426%" height="15" fill="rgb(238,90,54)" fg:x="5282" fg:w="8560"/><text x="19.4050%" y="415.50">swoole::ReactorThread_onRead</text></g><g><title>swoole::microtime (9 samples, 0.03%)</title><rect x="50.1650%" y="389" width="0.0326%" height="15" fill="rgb(213,208,19)" fg:x="13833" fg:w="9"/><text x="50.4150%" y="399.50"></text></g><g><title>php_execute_script (8,906 samples, 32.30%)</title><rect x="17.9039%" y="581" width="32.2974%" height="15" fill="rgb(233,156,4)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="591.50">php_execute_script</text></g><g><title>zend_execute_scripts (8,906 samples, 32.30%)</title><rect x="17.9039%" y="565" width="32.2974%" height="15" fill="rgb(207,194,5)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="575.50">zend_execute_scripts</text></g><g><title>zend_execute (8,906 samples, 32.30%)</title><rect x="17.9039%" y="549" width="32.2974%" height="15" fill="rgb(206,111,30)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="559.50">zend_execute</text></g><g><title>execute_ex (8,906 samples, 32.30%)</title><rect x="17.9039%" y="533" width="32.2974%" height="15" fill="rgb(243,70,54)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="543.50">execute_ex</text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (8,906 samples, 32.30%)</title><rect x="17.9039%" y="517" width="32.2974%" height="15" fill="rgb(242,28,8)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="527.50">ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER</text></g><g><title>zim_swoole_server_start (8,906 samples, 32.30%)</title><rect x="17.9039%" y="501" width="32.2974%" height="15" fill="rgb(219,106,18)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="511.50">zim_swoole_server_start</text></g><g><title>swoole::Server::start (8,906 samples, 32.30%)</title><rect x="17.9039%" y="485" width="32.2974%" height="15" fill="rgb(244,222,10)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="495.50">swoole::Server::start</text></g><g><title>swoole::Server::start_reactor_processes (8,906 samples, 32.30%)</title><rect x="17.9039%" y="469" width="32.2974%" height="15" fill="rgb(236,179,52)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="479.50">swoole::Server::start_reactor_processes</text></g><g><title>swoole::ReactorProcess_loop (8,906 samples, 32.30%)</title><rect x="17.9039%" y="453" width="32.2974%" height="15" fill="rgb(213,23,39)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="463.50">swoole::ReactorProcess_loop</text></g><g><title>swoole::Reactor::wait (8,906 samples, 32.30%)</title><rect x="17.9039%" y="437" width="32.2974%" height="15" fill="rgb(238,48,10)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="447.50">swoole::Reactor::wait</text></g><g><title>swoole::ReactorEpoll::wait (8,906 samples, 32.30%)</title><rect x="17.9039%" y="421" width="32.2974%" height="15" fill="rgb(251,196,23)" fg:x="4937" fg:w="8906"/><text x="18.1539%" y="431.50">swoole::ReactorEpoll::wait</text></g><g><title>php_swoole_get_recv_data (39 samples, 0.14%)</title><rect x="50.2013%" y="581" width="0.1414%" height="15" fill="rgb(250,152,24)" fg:x="13843" fg:w="39"/><text x="50.4513%" y="591.50"></text></g><g><title>php_swoole_http_request_set_context (10 samples, 0.04%)</title><rect x="50.3463%" y="581" width="0.0363%" height="15" fill="rgb(209,150,17)" fg:x="13883" fg:w="10"/><text x="50.5963%" y="591.50"></text></g><g><title>pop_arg (185 samples, 0.67%)</title><rect x="50.3826%" y="581" width="0.6709%" height="15" fill="rgb(234,202,34)" fg:x="13893" fg:w="185"/><text x="50.6326%" y="591.50"></text></g><g><title>printf_core (584 samples, 2.12%)</title><rect x="51.0535%" y="581" width="2.1179%" height="15" fill="rgb(253,148,53)" fg:x="14078" fg:w="584"/><text x="51.3035%" y="591.50">p..</text></g><g><title>sn_write (57 samples, 0.21%)</title><rect x="53.1714%" y="581" width="0.2067%" height="15" fill="rgb(218,129,16)" fg:x="14662" fg:w="57"/><text x="53.4214%" y="591.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (5 samples, 0.02%)</title><rect x="53.3781%" y="581" width="0.0181%" height="15" fill="rgb(216,85,19)" fg:x="14719" fg:w="5"/><text x="53.6281%" y="591.50"></text></g><g><title>strnlen (36 samples, 0.13%)</title><rect x="53.4071%" y="581" width="0.1306%" height="15" fill="rgb(235,228,7)" fg:x="14727" fg:w="36"/><text x="53.6571%" y="591.50"></text></g><g><title>swoole::BaseFactory::dispatch (3 samples, 0.01%)</title><rect x="53.5413%" y="581" width="0.0109%" height="15" fill="rgb(245,175,0)" fg:x="14764" fg:w="3"/><text x="53.7913%" y="591.50"></text></g><g><title>swoole::ProcessPool::get_worker (145 samples, 0.53%)</title><rect x="53.9039%" y="565" width="0.5258%" height="15" fill="rgb(208,168,36)" fg:x="14864" fg:w="145"/><text x="54.1539%" y="575.50"></text></g><g><title>swoole::Server::get_session (9 samples, 0.03%)</title><rect x="54.4297%" y="565" width="0.0326%" height="15" fill="rgb(246,171,24)" fg:x="15009" fg:w="9"/><text x="54.6797%" y="575.50"></text></g><g><title>swoole::Server::get_connection_verify (124 samples, 0.45%)</title><rect x="55.1188%" y="549" width="0.4497%" height="15" fill="rgb(215,142,24)" fg:x="15199" fg:w="124"/><text x="55.3688%" y="559.50"></text></g><g><title>swoole::Server::get_connection_verify_no_ssl (124 samples, 0.45%)</title><rect x="55.1188%" y="533" width="0.4497%" height="15" fill="rgb(250,187,7)" fg:x="15199" fg:w="124"/><text x="55.3688%" y="543.50"></text></g><g><title>swoole::Server::get_port_by_server_fd (83 samples, 0.30%)</title><rect x="55.5684%" y="549" width="0.3010%" height="15" fill="rgb(228,66,33)" fg:x="15323" fg:w="83"/><text x="55.8184%" y="559.50"></text></g><g><title>swoole::microtime (250 samples, 0.91%)</title><rect x="55.8694%" y="549" width="0.9066%" height="15" fill="rgb(234,215,21)" fg:x="15406" fg:w="250"/><text x="56.1194%" y="559.50"></text></g><g><title>swoole::network::Socket::send (146 samples, 0.53%)</title><rect x="56.2466%" y="533" width="0.5295%" height="15" fill="rgb(222,191,20)" fg:x="15510" fg:w="146"/><text x="56.4966%" y="543.50"></text></g><g><title>__clock_gettime (146 samples, 0.53%)</title><rect x="56.2466%" y="517" width="0.5295%" height="15" fill="rgb(245,79,54)" fg:x="15510" fg:w="146"/><text x="56.4966%" y="527.50"></text></g><g><title>__vdso_clock_gettime (140 samples, 0.51%)</title><rect x="56.2684%" y="501" width="0.5077%" height="15" fill="rgb(240,10,37)" fg:x="15516" fg:w="140"/><text x="56.5184%" y="511.50"></text></g><g><title>swoole::BaseFactory::finish (960 samples, 3.48%)</title><rect x="53.5521%" y="581" width="3.4814%" height="15" fill="rgb(214,192,32)" fg:x="14767" fg:w="960"/><text x="53.8021%" y="591.50">swo..</text></g><g><title>swoole::Server::send_to_connection (709 samples, 2.57%)</title><rect x="54.4624%" y="565" width="2.5712%" height="15" fill="rgb(209,36,54)" fg:x="15018" fg:w="709"/><text x="54.7124%" y="575.50">sw..</text></g><g><title>swoole::network::Socket::send (71 samples, 0.26%)</title><rect x="56.7761%" y="549" width="0.2575%" height="15" fill="rgb(220,10,11)" fg:x="15656" fg:w="71"/><text x="57.0261%" y="559.50"></text></g><g><title>swoole::Coroutine::close (55 samples, 0.20%)</title><rect x="57.0335%" y="581" width="0.1995%" height="15" fill="rgb(221,106,17)" fg:x="15727" fg:w="55"/><text x="57.2835%" y="591.50"></text></g><g><title>swoole::PHPCoroutine::main_func (55 samples, 0.20%)</title><rect x="57.2330%" y="581" width="0.1995%" height="15" fill="rgb(251,142,44)" fg:x="15782" fg:w="55"/><text x="57.4830%" y="591.50"></text></g><g><title>swoole::Server::dispatch_task (75 samples, 0.27%)</title><rect x="57.4361%" y="581" width="0.2720%" height="15" fill="rgb(238,13,15)" fg:x="15838" fg:w="75"/><text x="57.6861%" y="591.50"></text></g><g><title>swoole::Server::send_to_connection (18 samples, 0.07%)</title><rect x="57.7081%" y="581" width="0.0653%" height="15" fill="rgb(208,107,27)" fg:x="15913" fg:w="18"/><text x="57.9581%" y="591.50"></text></g><g><title>swoole::Server::worker_accept_event (6 samples, 0.02%)</title><rect x="57.7733%" y="581" width="0.0218%" height="15" fill="rgb(205,136,37)" fg:x="15931" fg:w="6"/><text x="58.0233%" y="591.50"></text></g><g><title>swoole::String::append (9 samples, 0.03%)</title><rect x="57.7951%" y="581" width="0.0326%" height="15" fill="rgb(250,205,27)" fg:x="15937" fg:w="9"/><text x="58.0451%" y="591.50"></text></g><g><title>swoole::coroutine::Context::context_func (18 samples, 0.07%)</title><rect x="57.8277%" y="581" width="0.0653%" height="15" fill="rgb(210,80,43)" fg:x="15946" fg:w="18"/><text x="58.0777%" y="591.50"></text></g><g><title>swoole::coroutine::Context::swap_in (11 samples, 0.04%)</title><rect x="57.8930%" y="581" width="0.0399%" height="15" fill="rgb(247,160,36)" fg:x="15964" fg:w="11"/><text x="58.1430%" y="591.50"></text></g><g><title>swoole::http::Context::compress (24 samples, 0.09%)</title><rect x="57.9329%" y="581" width="0.0870%" height="15" fill="rgb(234,13,49)" fg:x="15975" fg:w="24"/><text x="58.1829%" y="591.50"></text></g><g><title>swoole::http::Context::get_write_buffer (4 samples, 0.01%)</title><rect x="58.0199%" y="581" width="0.0145%" height="15" fill="rgb(234,122,0)" fg:x="15999" fg:w="4"/><text x="58.2699%" y="591.50"></text></g><g><title>swoole::http_server::Request::get_protocol (25 samples, 0.09%)</title><rect x="58.0417%" y="581" width="0.0907%" height="15" fill="rgb(207,146,38)" fg:x="16005" fg:w="25"/><text x="58.2917%" y="591.50"></text></g><g><title>swoole::network::Address::get_port (38 samples, 0.14%)</title><rect x="58.1360%" y="581" width="0.1378%" height="15" fill="rgb(207,177,25)" fg:x="16031" fg:w="38"/><text x="58.3860%" y="591.50"></text></g><g><title>swoole::network::Socket::recv (17 samples, 0.06%)</title><rect x="58.2738%" y="581" width="0.0617%" height="15" fill="rgb(211,178,42)" fg:x="16069" fg:w="17"/><text x="58.5238%" y="591.50"></text></g><g><title>swoole::network::Socket::send (4 samples, 0.01%)</title><rect x="58.3354%" y="581" width="0.0145%" height="15" fill="rgb(230,69,54)" fg:x="16086" fg:w="4"/><text x="58.5854%" y="591.50"></text></g><g><title>swoole_http_parser_execute (3 samples, 0.01%)</title><rect x="58.3536%" y="581" width="0.0109%" height="15" fill="rgb(214,135,41)" fg:x="16091" fg:w="3"/><text x="58.6036%" y="591.50"></text></g><g><title>swoole_isset_hook (28 samples, 0.10%)</title><rect x="58.3645%" y="581" width="0.1015%" height="15" fill="rgb(237,67,25)" fg:x="16094" fg:w="28"/><text x="58.6145%" y="591.50"></text></g><g><title>vfprintf (84 samples, 0.30%)</title><rect x="58.4660%" y="581" width="0.3046%" height="15" fill="rgb(222,189,50)" fg:x="16122" fg:w="84"/><text x="58.7160%" y="591.50"></text></g><g><title>zend_array_destroy (84 samples, 0.30%)</title><rect x="58.7743%" y="581" width="0.3046%" height="15" fill="rgb(245,148,34)" fg:x="16207" fg:w="84"/><text x="59.0243%" y="591.50"></text></g><g><title>zend_string_release_ex (6 samples, 0.02%)</title><rect x="59.0571%" y="565" width="0.0218%" height="15" fill="rgb(222,29,6)" fg:x="16285" fg:w="6"/><text x="59.3071%" y="575.50"></text></g><g><title>zend_hash_find (25 samples, 0.09%)</title><rect x="59.0898%" y="581" width="0.0907%" height="15" fill="rgb(221,189,43)" fg:x="16294" fg:w="25"/><text x="59.3398%" y="591.50"></text></g><g><title>zend_hash_str_update (3 samples, 0.01%)</title><rect x="59.1840%" y="581" width="0.0109%" height="15" fill="rgb(207,36,27)" fg:x="16320" fg:w="3"/><text x="59.4340%" y="591.50"></text></g><g><title>zend_mm_free_pages (8 samples, 0.03%)</title><rect x="59.2058%" y="581" width="0.0290%" height="15" fill="rgb(217,90,24)" fg:x="16326" fg:w="8"/><text x="59.4558%" y="591.50"></text></g><g><title>zend_object_std_dtor (5 samples, 0.02%)</title><rect x="59.2348%" y="581" width="0.0181%" height="15" fill="rgb(224,66,35)" fg:x="16334" fg:w="5"/><text x="59.4848%" y="591.50"></text></g><g><title>zend_read_property (4 samples, 0.01%)</title><rect x="59.2602%" y="581" width="0.0145%" height="15" fill="rgb(221,13,50)" fg:x="16341" fg:w="4"/><text x="59.5102%" y="591.50"></text></g><g><title>zend_std_write_property (15 samples, 0.05%)</title><rect x="59.2820%" y="581" width="0.0544%" height="15" fill="rgb(236,68,49)" fg:x="16347" fg:w="15"/><text x="59.5320%" y="591.50"></text></g><g><title>zend_str_tolower_dup (32 samples, 0.12%)</title><rect x="59.3364%" y="581" width="0.1160%" height="15" fill="rgb(229,146,28)" fg:x="16362" fg:w="32"/><text x="59.5864%" y="591.50"></text></g><g><title>zend_update_property (23 samples, 0.08%)</title><rect x="59.4560%" y="581" width="0.0834%" height="15" fill="rgb(225,31,38)" fg:x="16395" fg:w="23"/><text x="59.7060%" y="591.50"></text></g><g><title>zend_update_property_long (15 samples, 0.05%)</title><rect x="59.5394%" y="581" width="0.0544%" height="15" fill="rgb(250,208,3)" fg:x="16418" fg:w="15"/><text x="59.7894%" y="591.50"></text></g><g><title>[unknown] (12,764 samples, 46.29%)</title><rect x="13.3092%" y="597" width="46.2883%" height="15" fill="rgb(246,54,23)" fg:x="3670" fg:w="12764"/><text x="13.5592%" y="607.50">[unknown]</text></g><g><title>__clock_gettime (91 samples, 0.33%)</title><rect x="59.5975%" y="597" width="0.3300%" height="15" fill="rgb(243,76,11)" fg:x="16434" fg:w="91"/><text x="59.8475%" y="607.50"></text></g><g><title>__cp_begin (57 samples, 0.21%)</title><rect x="59.9275%" y="597" width="0.2067%" height="15" fill="rgb(245,21,50)" fg:x="16525" fg:w="57"/><text x="60.1775%" y="607.50"></text></g><g><title>__cp_end (25 samples, 0.09%)</title><rect x="60.1342%" y="597" width="0.0907%" height="15" fill="rgb(228,9,43)" fg:x="16582" fg:w="25"/><text x="60.3842%" y="607.50"></text></g><g><title>get_nominal_size (79 samples, 0.29%)</title><rect x="60.7362%" y="581" width="0.2865%" height="15" fill="rgb(208,100,47)" fg:x="16748" fg:w="79"/><text x="60.9862%" y="591.50"></text></g><g><title>__libc_free (229 samples, 0.83%)</title><rect x="60.2248%" y="597" width="0.8305%" height="15" fill="rgb(232,26,8)" fg:x="16607" fg:w="229"/><text x="60.4748%" y="607.50"></text></g><g><title>wrlock (7 samples, 0.03%)</title><rect x="61.0299%" y="581" width="0.0254%" height="15" fill="rgb(216,166,38)" fg:x="16829" fg:w="7"/><text x="61.2799%" y="591.50"></text></g><g><title>a_ctz_32 (69 samples, 0.25%)</title><rect x="62.7851%" y="581" width="0.2502%" height="15" fill="rgb(251,202,51)" fg:x="17313" fg:w="69"/><text x="63.0351%" y="591.50"></text></g><g><title>__libc_malloc_impl (591 samples, 2.14%)</title><rect x="61.0553%" y="597" width="2.1432%" height="15" fill="rgb(254,216,34)" fg:x="16836" fg:w="591"/><text x="61.3053%" y="607.50">_..</text></g><g><title>size_overflows (45 samples, 0.16%)</title><rect x="63.0354%" y="581" width="0.1632%" height="15" fill="rgb(251,32,27)" fg:x="17382" fg:w="45"/><text x="63.2854%" y="591.50"></text></g><g><title>__madvise (89 samples, 0.32%)</title><rect x="63.2022%" y="597" width="0.3228%" height="15" fill="rgb(208,127,28)" fg:x="17428" fg:w="89"/><text x="63.4522%" y="607.50"></text></g><g><title>__syscall3 (15 samples, 0.05%)</title><rect x="63.4705%" y="581" width="0.0544%" height="15" fill="rgb(224,137,22)" fg:x="17502" fg:w="15"/><text x="63.7205%" y="591.50"></text></g><g><title>__malloc_alloc_meta (17 samples, 0.06%)</title><rect x="63.5358%" y="581" width="0.0617%" height="15" fill="rgb(254,70,32)" fg:x="17520" fg:w="17"/><text x="63.7858%" y="591.50"></text></g><g><title>__malloc_alloc_meta (24 samples, 0.09%)</title><rect x="63.5249%" y="597" width="0.0870%" height="15" fill="rgb(229,75,37)" fg:x="17517" fg:w="24"/><text x="63.7749%" y="607.50"></text></g><g><title>dequeue_head (4 samples, 0.01%)</title><rect x="63.5975%" y="581" width="0.0145%" height="15" fill="rgb(252,64,23)" fg:x="17537" fg:w="4"/><text x="63.8475%" y="591.50"></text></g><g><title>dequeue (3 samples, 0.01%)</title><rect x="63.6011%" y="565" width="0.0109%" height="15" fill="rgb(232,162,48)" fg:x="17538" fg:w="3"/><text x="63.8511%" y="575.50"></text></g><g><title>__memcpy_fwd (748 samples, 2.71%)</title><rect x="63.6120%" y="597" width="2.7126%" height="15" fill="rgb(246,160,12)" fg:x="17541" fg:w="748"/><text x="63.8620%" y="607.50">__..</text></g><g><title>__mmap (29 samples, 0.11%)</title><rect x="66.3246%" y="597" width="0.1052%" height="15" fill="rgb(247,166,0)" fg:x="18289" fg:w="29"/><text x="66.5746%" y="607.50"></text></g><g><title>__mmap (20 samples, 0.07%)</title><rect x="66.3572%" y="581" width="0.0725%" height="15" fill="rgb(249,219,21)" fg:x="18298" fg:w="20"/><text x="66.6072%" y="591.50"></text></g><g><title>__syscall6 (16 samples, 0.06%)</title><rect x="66.3717%" y="565" width="0.0580%" height="15" fill="rgb(205,209,3)" fg:x="18302" fg:w="16"/><text x="66.6217%" y="575.50"></text></g><g><title>__munmap (121 samples, 0.44%)</title><rect x="66.4297%" y="597" width="0.4388%" height="15" fill="rgb(243,44,1)" fg:x="18318" fg:w="121"/><text x="66.6797%" y="607.50"></text></g><g><title>__syscall2 (27 samples, 0.10%)</title><rect x="66.7706%" y="581" width="0.0979%" height="15" fill="rgb(206,159,16)" fg:x="18412" fg:w="27"/><text x="67.0206%" y="591.50"></text></g><g><title>__syscall_cp (6 samples, 0.02%)</title><rect x="66.8794%" y="597" width="0.0218%" height="15" fill="rgb(244,77,30)" fg:x="18442" fg:w="6"/><text x="67.1294%" y="607.50"></text></g><g><title>__syscall_cp_c (89 samples, 0.32%)</title><rect x="66.9012%" y="597" width="0.3228%" height="15" fill="rgb(218,69,12)" fg:x="18448" fg:w="89"/><text x="67.1512%" y="607.50"></text></g><g><title>__get_tp (5 samples, 0.02%)</title><rect x="67.2058%" y="581" width="0.0181%" height="15" fill="rgb(212,87,7)" fg:x="18532" fg:w="5"/><text x="67.4558%" y="591.50"></text></g><g><title>__syscall_ret (92 samples, 0.33%)</title><rect x="67.2239%" y="597" width="0.3336%" height="15" fill="rgb(245,114,25)" fg:x="18537" fg:w="92"/><text x="67.4739%" y="607.50"></text></g><g><title>__unlock (31 samples, 0.11%)</title><rect x="67.5576%" y="597" width="0.1124%" height="15" fill="rgb(210,61,42)" fg:x="18629" fg:w="31"/><text x="67.8076%" y="607.50"></text></g><g><title>__vm_wait (89 samples, 0.32%)</title><rect x="67.6700%" y="597" width="0.3228%" height="15" fill="rgb(211,52,33)" fg:x="18660" fg:w="89"/><text x="67.9200%" y="607.50"></text></g><g><title>_setjmp (48 samples, 0.17%)</title><rect x="67.9927%" y="597" width="0.1741%" height="15" fill="rgb(234,58,33)" fg:x="18749" fg:w="48"/><text x="68.2427%" y="607.50"></text></g><g><title>_start (7 samples, 0.03%)</title><rect x="68.1668%" y="597" width="0.0254%" height="15" fill="rgb(220,115,36)" fg:x="18797" fg:w="7"/><text x="68.4168%" y="607.50"></text></g><g><title>a_ctz_32 (7 samples, 0.03%)</title><rect x="68.3191%" y="581" width="0.0254%" height="15" fill="rgb(243,153,54)" fg:x="18839" fg:w="7"/><text x="68.5691%" y="591.50"></text></g><g><title>alloc_group (9 samples, 0.03%)</title><rect x="68.3445%" y="581" width="0.0326%" height="15" fill="rgb(251,47,18)" fg:x="18846" fg:w="9"/><text x="68.5945%" y="591.50"></text></g><g><title>activate_group (24 samples, 0.09%)</title><rect x="68.9610%" y="565" width="0.0870%" height="15" fill="rgb(242,102,42)" fg:x="19016" fg:w="24"/><text x="69.2110%" y="575.50"></text></g><g><title>a_cas (23 samples, 0.08%)</title><rect x="68.9646%" y="549" width="0.0834%" height="15" fill="rgb(234,31,38)" fg:x="19017" fg:w="23"/><text x="69.2146%" y="559.50"></text></g><g><title>decay_bounces (3 samples, 0.01%)</title><rect x="69.0481%" y="565" width="0.0109%" height="15" fill="rgb(221,117,51)" fg:x="19040" fg:w="3"/><text x="69.2981%" y="575.50"></text></g><g><title>alloc_slot (240 samples, 0.87%)</title><rect x="68.1922%" y="597" width="0.8704%" height="15" fill="rgb(212,20,18)" fg:x="18804" fg:w="240"/><text x="68.4422%" y="607.50"></text></g><g><title>try_avail (189 samples, 0.69%)</title><rect x="68.3772%" y="581" width="0.6854%" height="15" fill="rgb(245,133,36)" fg:x="18855" fg:w="189"/><text x="68.6272%" y="591.50"></text></g><g><title>default_malloc (24 samples, 0.09%)</title><rect x="69.0626%" y="597" width="0.0870%" height="15" fill="rgb(212,6,19)" fg:x="19044" fg:w="24"/><text x="69.3126%" y="607.50"></text></g><g><title>enframe (525 samples, 1.90%)</title><rect x="69.1532%" y="597" width="1.9039%" height="15" fill="rgb(218,1,36)" fg:x="19069" fg:w="525"/><text x="69.4032%" y="607.50">e..</text></g><g><title>set_size (279 samples, 1.01%)</title><rect x="70.0453%" y="581" width="1.0118%" height="15" fill="rgb(246,84,54)" fg:x="19315" fg:w="279"/><text x="70.2953%" y="591.50"></text></g><g><title>free (39 samples, 0.14%)</title><rect x="71.0607%" y="597" width="0.1414%" height="15" fill="rgb(242,110,6)" fg:x="19595" fg:w="39"/><text x="71.3107%" y="607.50"></text></g><g><title>get_meta (617 samples, 2.24%)</title><rect x="71.2022%" y="597" width="2.2375%" height="15" fill="rgb(214,47,5)" fg:x="19634" fg:w="617"/><text x="71.4522%" y="607.50">g..</text></g><g><title>get_stride (55 samples, 0.20%)</title><rect x="73.4397%" y="597" width="0.1995%" height="15" fill="rgb(218,159,25)" fg:x="20251" fg:w="55"/><text x="73.6897%" y="607.50"></text></g><g><title>getint (26 samples, 0.09%)</title><rect x="73.6392%" y="597" width="0.0943%" height="15" fill="rgb(215,211,28)" fg:x="20306" fg:w="26"/><text x="73.8892%" y="607.50"></text></g><g><title>gettimeofday (11 samples, 0.04%)</title><rect x="73.7335%" y="597" width="0.0399%" height="15" fill="rgb(238,59,32)" fg:x="20332" fg:w="11"/><text x="73.9835%" y="607.50"></text></g><g><title>inet_ntop (57 samples, 0.21%)</title><rect x="73.7733%" y="597" width="0.2067%" height="15" fill="rgb(226,82,3)" fg:x="20343" fg:w="57"/><text x="74.0233%" y="607.50"></text></g><g><title>isspace (15 samples, 0.05%)</title><rect x="73.9801%" y="597" width="0.0544%" height="15" fill="rgb(240,164,32)" fg:x="20400" fg:w="15"/><text x="74.2301%" y="607.50"></text></g><g><title>zend_compile_func_decl (7 samples, 0.03%)</title><rect x="74.0417%" y="309" width="0.0254%" height="15" fill="rgb(232,46,7)" fg:x="20417" fg:w="7"/><text x="74.2917%" y="319.50"></text></g><g><title>zend_compile_class_decl (9 samples, 0.03%)</title><rect x="74.0381%" y="373" width="0.0326%" height="15" fill="rgb(229,129,53)" fg:x="20416" fg:w="9"/><text x="74.2881%" y="383.50"></text></g><g><title>zend_compile_stmt (9 samples, 0.03%)</title><rect x="74.0381%" y="357" width="0.0326%" height="15" fill="rgb(234,188,29)" fg:x="20416" fg:w="9"/><text x="74.2881%" y="367.50"></text></g><g><title>zend_compile_stmt_list (9 samples, 0.03%)</title><rect x="74.0381%" y="341" width="0.0326%" height="15" fill="rgb(246,141,4)" fg:x="20416" fg:w="9"/><text x="74.2881%" y="351.50"></text></g><g><title>zend_compile_stmt (9 samples, 0.03%)</title><rect x="74.0381%" y="325" width="0.0326%" height="15" fill="rgb(229,23,39)" fg:x="20416" fg:w="9"/><text x="74.2881%" y="335.50"></text></g><g><title>do_cli (12 samples, 0.04%)</title><rect x="74.0345%" y="565" width="0.0435%" height="15" fill="rgb(206,12,3)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="575.50"></text></g><g><title>php_request_startup (12 samples, 0.04%)</title><rect x="74.0345%" y="549" width="0.0435%" height="15" fill="rgb(252,226,20)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="559.50"></text></g><g><title>zend_activate_modules (12 samples, 0.04%)</title><rect x="74.0345%" y="533" width="0.0435%" height="15" fill="rgb(216,123,35)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="543.50"></text></g><g><title>zm_activate_swoole (12 samples, 0.04%)</title><rect x="74.0345%" y="517" width="0.0435%" height="15" fill="rgb(212,68,40)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="527.50"></text></g><g><title>php_swoole_load_library (12 samples, 0.04%)</title><rect x="74.0345%" y="501" width="0.0435%" height="15" fill="rgb(254,125,32)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="511.50"></text></g><g><title>zend::eval (12 samples, 0.04%)</title><rect x="74.0345%" y="485" width="0.0435%" height="15" fill="rgb(253,97,22)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="495.50"></text></g><g><title>zend_eval_stringl (12 samples, 0.04%)</title><rect x="74.0345%" y="469" width="0.0435%" height="15" fill="rgb(241,101,14)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="479.50"></text></g><g><title>swoole_compile_string (12 samples, 0.04%)</title><rect x="74.0345%" y="453" width="0.0435%" height="15" fill="rgb(238,103,29)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="463.50"></text></g><g><title>compile_string (12 samples, 0.04%)</title><rect x="74.0345%" y="437" width="0.0435%" height="15" fill="rgb(233,195,47)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="447.50"></text></g><g><title>zend_compile (12 samples, 0.04%)</title><rect x="74.0345%" y="421" width="0.0435%" height="15" fill="rgb(246,218,30)" fg:x="20415" fg:w="12"/><text x="74.2845%" y="431.50"></text></g><g><title>zend_compile_top_stmt (11 samples, 0.04%)</title><rect x="74.0381%" y="405" width="0.0399%" height="15" fill="rgb(219,145,47)" fg:x="20416" fg:w="11"/><text x="74.2881%" y="415.50"></text></g><g><title>zend_compile_top_stmt (11 samples, 0.04%)</title><rect x="74.0381%" y="389" width="0.0399%" height="15" fill="rgb(243,12,26)" fg:x="20416" fg:w="11"/><text x="74.2881%" y="399.50"></text></g><g><title>php_register_extensions (4 samples, 0.01%)</title><rect x="74.0816%" y="533" width="0.0145%" height="15" fill="rgb(214,87,16)" fg:x="20428" fg:w="4"/><text x="74.3316%" y="543.50"></text></g><g><title>zend_register_module_ex (4 samples, 0.01%)</title><rect x="74.0816%" y="517" width="0.0145%" height="15" fill="rgb(208,99,42)" fg:x="20428" fg:w="4"/><text x="74.3316%" y="527.50"></text></g><g><title>zend_register_functions (4 samples, 0.01%)</title><rect x="74.0816%" y="501" width="0.0145%" height="15" fill="rgb(253,99,2)" fg:x="20428" fg:w="4"/><text x="74.3316%" y="511.50"></text></g><g><title>zend_hash_apply (22 samples, 0.08%)</title><rect x="74.0997%" y="533" width="0.0798%" height="15" fill="rgb(220,168,23)" fg:x="20433" fg:w="22"/><text x="74.3497%" y="543.50"></text></g><g><title>zend_startup_module_zval (22 samples, 0.08%)</title><rect x="74.0997%" y="517" width="0.0798%" height="15" fill="rgb(242,38,24)" fg:x="20433" fg:w="22"/><text x="74.3497%" y="527.50"></text></g><g><title>zend_startup_module_ex (22 samples, 0.08%)</title><rect x="74.0997%" y="501" width="0.0798%" height="15" fill="rgb(225,182,9)" fg:x="20433" fg:w="22"/><text x="74.3497%" y="511.50"></text></g><g><title>zm_startup_swoole (8 samples, 0.03%)</title><rect x="74.1505%" y="485" width="0.0290%" height="15" fill="rgb(243,178,37)" fg:x="20447" fg:w="8"/><text x="74.4005%" y="495.50"></text></g><g><title>libc_start_main_stage2 (42 samples, 0.15%)</title><rect x="74.0345%" y="597" width="0.1523%" height="15" fill="rgb(232,139,19)" fg:x="20415" fg:w="42"/><text x="74.2845%" y="607.50"></text></g><g><title>main (42 samples, 0.15%)</title><rect x="74.0345%" y="581" width="0.1523%" height="15" fill="rgb(225,201,24)" fg:x="20415" fg:w="42"/><text x="74.2845%" y="591.50"></text></g><g><title>php_cli_startup (30 samples, 0.11%)</title><rect x="74.0780%" y="565" width="0.1088%" height="15" fill="rgb(221,47,46)" fg:x="20427" fg:w="30"/><text x="74.3280%" y="575.50"></text></g><g><title>php_module_startup (30 samples, 0.11%)</title><rect x="74.0780%" y="549" width="0.1088%" height="15" fill="rgb(249,23,13)" fg:x="20427" fg:w="30"/><text x="74.3280%" y="559.50"></text></g><g><title>memset (31 samples, 0.11%)</title><rect x="74.1940%" y="597" width="0.1124%" height="15" fill="rgb(219,9,5)" fg:x="20459" fg:w="31"/><text x="74.4440%" y="607.50"></text></g><g><title>a_or (13 samples, 0.05%)</title><rect x="74.3463%" y="581" width="0.0471%" height="15" fill="rgb(254,171,16)" fg:x="20501" fg:w="13"/><text x="74.5963%" y="591.50"></text></g><g><title>free_meta (5 samples, 0.02%)</title><rect x="74.4225%" y="565" width="0.0181%" height="15" fill="rgb(230,171,20)" fg:x="20522" fg:w="5"/><text x="74.6725%" y="575.50"></text></g><g><title>free_group (19 samples, 0.07%)</title><rect x="74.3935%" y="581" width="0.0689%" height="15" fill="rgb(210,71,41)" fg:x="20514" fg:w="19"/><text x="74.6435%" y="591.50"></text></g><g><title>step_seq (6 samples, 0.02%)</title><rect x="74.4406%" y="565" width="0.0218%" height="15" fill="rgb(206,173,20)" fg:x="20527" fg:w="6"/><text x="74.6906%" y="575.50"></text></g><g><title>nontrivial_free (121 samples, 0.44%)</title><rect x="74.3064%" y="597" width="0.4388%" height="15" fill="rgb(233,88,34)" fg:x="20490" fg:w="121"/><text x="74.5564%" y="607.50"></text></g><g><title>okay_to_free (78 samples, 0.28%)</title><rect x="74.4624%" y="581" width="0.2829%" height="15" fill="rgb(223,209,46)" fg:x="20533" fg:w="78"/><text x="74.7124%" y="591.50"></text></g><g><title>is_bouncing (11 samples, 0.04%)</title><rect x="74.7053%" y="565" width="0.0399%" height="15" fill="rgb(250,43,18)" fg:x="20600" fg:w="11"/><text x="74.9553%" y="575.50"></text></g><g><title>printf_core (580 samples, 2.10%)</title><rect x="74.7561%" y="597" width="2.1034%" height="15" fill="rgb(208,13,10)" fg:x="20614" fg:w="580"/><text x="75.0061%" y="607.50">p..</text></g><g><title>queue (8 samples, 0.03%)</title><rect x="76.8595%" y="597" width="0.0290%" height="15" fill="rgb(212,200,36)" fg:x="21194" fg:w="8"/><text x="77.1095%" y="607.50"></text></g><g><title>rdlock (101 samples, 0.37%)</title><rect x="76.8885%" y="597" width="0.3663%" height="15" fill="rgb(225,90,30)" fg:x="21202" fg:w="101"/><text x="77.1385%" y="607.50"></text></g><g><title>recv (59 samples, 0.21%)</title><rect x="77.2548%" y="597" width="0.2140%" height="15" fill="rgb(236,182,39)" fg:x="21303" fg:w="59"/><text x="77.5048%" y="607.50"></text></g><g><title>send (45 samples, 0.16%)</title><rect x="77.4723%" y="597" width="0.1632%" height="15" fill="rgb(212,144,35)" fg:x="21363" fg:w="45"/><text x="77.7223%" y="607.50"></text></g><g><title>sendto (40 samples, 0.15%)</title><rect x="77.6355%" y="597" width="0.1451%" height="15" fill="rgb(228,63,44)" fg:x="21408" fg:w="40"/><text x="77.8855%" y="607.50"></text></g><g><title>__alt_socketcall (15 samples, 0.05%)</title><rect x="77.7262%" y="581" width="0.0544%" height="15" fill="rgb(228,109,6)" fg:x="21433" fg:w="15"/><text x="77.9762%" y="591.50"></text></g><g><title>sigsetjmp (95 samples, 0.34%)</title><rect x="77.7806%" y="597" width="0.3445%" height="15" fill="rgb(238,117,24)" fg:x="21448" fg:w="95"/><text x="78.0306%" y="607.50"></text></g><g><title>size_to_class (47 samples, 0.17%)</title><rect x="78.1251%" y="597" width="0.1704%" height="15" fill="rgb(242,26,26)" fg:x="21543" fg:w="47"/><text x="78.3751%" y="607.50"></text></g><g><title>a_clz_32 (11 samples, 0.04%)</title><rect x="78.2557%" y="581" width="0.0399%" height="15" fill="rgb(221,92,48)" fg:x="21579" fg:w="11"/><text x="78.5057%" y="591.50"></text></g><g><title>sn_write (33 samples, 0.12%)</title><rect x="78.2956%" y="597" width="0.1197%" height="15" fill="rgb(209,209,32)" fg:x="21590" fg:w="33"/><text x="78.5456%" y="607.50"></text></g><g><title>snprintf (88 samples, 0.32%)</title><rect x="78.4152%" y="597" width="0.3191%" height="15" fill="rgb(221,70,22)" fg:x="21623" fg:w="88"/><text x="78.6652%" y="607.50"></text></g><g><title>step_seq (5 samples, 0.02%)</title><rect x="78.7344%" y="597" width="0.0181%" height="15" fill="rgb(248,145,5)" fg:x="21711" fg:w="5"/><text x="78.9844%" y="607.50"></text></g><g><title>strlen (95 samples, 0.34%)</title><rect x="78.7525%" y="597" width="0.3445%" height="15" fill="rgb(226,116,26)" fg:x="21716" fg:w="95"/><text x="79.0025%" y="607.50"></text></g><g><title>strncasecmp (238 samples, 0.86%)</title><rect x="79.0970%" y="597" width="0.8631%" height="15" fill="rgb(244,5,17)" fg:x="21811" fg:w="238"/><text x="79.3470%" y="607.50"></text></g><g><title>swoole_isset_hook (48 samples, 0.17%)</title><rect x="79.9637%" y="597" width="0.1741%" height="15" fill="rgb(252,159,33)" fg:x="22050" fg:w="48"/><text x="80.2137%" y="607.50"></text></g><g><title>swoole_jump_fcontext (19 samples, 0.07%)</title><rect x="80.1378%" y="597" width="0.0689%" height="15" fill="rgb(206,71,0)" fg:x="22098" fg:w="19"/><text x="80.3878%" y="607.50"></text></g><g><title>std::_Function_handler&lt;void (void*), void (*)(void*)&gt;::_M_invoke (112 samples, 0.41%)</title><rect x="80.2937%" y="549" width="0.4062%" height="15" fill="rgb(233,118,54)" fg:x="22141" fg:w="112"/><text x="80.5437%" y="559.50"></text></g><g><title>i_zval_ptr_dtor (11 samples, 0.04%)</title><rect x="82.2520%" y="501" width="0.0399%" height="15" fill="rgb(234,83,48)" fg:x="22681" fg:w="11"/><text x="82.5020%" y="511.50"></text></g><g><title>swoole::Server::get_connection_by_session_id (5 samples, 0.02%)</title><rect x="84.0254%" y="437" width="0.0181%" height="15" fill="rgb(228,3,54)" fg:x="23170" fg:w="5"/><text x="84.2754%" y="447.50"></text></g><g><title>swoole::Server::get_connection_fd (3 samples, 0.01%)</title><rect x="84.0326%" y="421" width="0.0109%" height="15" fill="rgb(226,155,13)" fg:x="23172" fg:w="3"/><text x="84.2826%" y="431.50"></text></g><g><title>http_context_send_data (390 samples, 1.41%)</title><rect x="82.6328%" y="485" width="1.4143%" height="15" fill="rgb(241,28,37)" fg:x="22786" fg:w="390"/><text x="82.8828%" y="495.50"></text></g><g><title>swoole::Server::send (373 samples, 1.35%)</title><rect x="82.6945%" y="469" width="1.3527%" height="15" fill="rgb(233,93,10)" fg:x="22803" fg:w="373"/><text x="82.9445%" y="479.50"></text></g><g><title>swoole::Server::get_port_by_session_id (8 samples, 0.03%)</title><rect x="84.0181%" y="453" width="0.0290%" height="15" fill="rgb(225,113,19)" fg:x="23168" fg:w="8"/><text x="84.2681%" y="463.50"></text></g><g><title>php_swoole_get_send_data (35 samples, 0.13%)</title><rect x="84.0471%" y="485" width="0.1269%" height="15" fill="rgb(241,2,18)" fg:x="23176" fg:w="35"/><text x="84.2971%" y="495.50"></text></g><g><title>ap_php_slprintf (4 samples, 0.01%)</title><rect x="85.5775%" y="405" width="0.0145%" height="15" fill="rgb(228,207,21)" fg:x="23598" fg:w="4"/><text x="85.8275%" y="415.50"></text></g><g><title>strx_printv (4 samples, 0.01%)</title><rect x="85.5775%" y="389" width="0.0145%" height="15" fill="rgb(213,211,35)" fg:x="23598" fg:w="4"/><text x="85.8275%" y="399.50"></text></g><g><title>format_converter (4 samples, 0.01%)</title><rect x="85.5775%" y="373" width="0.0145%" height="15" fill="rgb(209,83,10)" fg:x="23598" fg:w="4"/><text x="85.8275%" y="383.50"></text></g><g><title>php_swoole_format_date (7 samples, 0.03%)</title><rect x="85.5703%" y="453" width="0.0254%" height="15" fill="rgb(209,164,1)" fg:x="23596" fg:w="7"/><text x="85.8203%" y="463.50"></text></g><g><title>php_format_date (7 samples, 0.03%)</title><rect x="85.5703%" y="437" width="0.0254%" height="15" fill="rgb(213,184,43)" fg:x="23596" fg:w="7"/><text x="85.8203%" y="447.50"></text></g><g><title>date_format (7 samples, 0.03%)</title><rect x="85.5703%" y="421" width="0.0254%" height="15" fill="rgb(231,61,34)" fg:x="23596" fg:w="7"/><text x="85.8203%" y="431.50"></text></g><g><title>http_set_date_header (126 samples, 0.46%)</title><rect x="85.1423%" y="469" width="0.4569%" height="15" fill="rgb(235,75,3)" fg:x="23478" fg:w="126"/><text x="85.3923%" y="479.50"></text></g><g><title>String (73 samples, 0.26%)</title><rect x="85.6754%" y="453" width="0.2647%" height="15" fill="rgb(220,106,47)" fg:x="23625" fg:w="73"/><text x="85.9254%" y="463.50"></text></g><g><title>zval_get_string (73 samples, 0.26%)</title><rect x="85.6754%" y="437" width="0.2647%" height="15" fill="rgb(210,196,33)" fg:x="23625" fg:w="73"/><text x="85.9254%" y="447.50"></text></g><g><title>zend_string_copy (73 samples, 0.26%)</title><rect x="85.6754%" y="421" width="0.2647%" height="15" fill="rgb(229,154,42)" fg:x="23625" fg:w="73"/><text x="85.9254%" y="431.50"></text></g><g><title>swoole_http_has_crlf (8 samples, 0.03%)</title><rect x="85.9474%" y="453" width="0.0290%" height="15" fill="rgb(228,114,26)" fg:x="23700" fg:w="8"/><text x="86.1974%" y="463.50"></text></g><g><title>swoole::rtrim (60 samples, 0.22%)</title><rect x="85.9837%" y="437" width="0.2176%" height="15" fill="rgb(208,144,1)" fg:x="23710" fg:w="60"/><text x="86.2337%" y="447.50"></text></g><g><title>operator (167 samples, 0.61%)</title><rect x="85.5993%" y="469" width="0.6056%" height="15" fill="rgb(239,112,37)" fg:x="23604" fg:w="167"/><text x="85.8493%" y="479.50"></text></g><g><title>zend::String::rtrim (63 samples, 0.23%)</title><rect x="85.9764%" y="453" width="0.2285%" height="15" fill="rgb(210,96,50)" fg:x="23708" fg:w="63"/><text x="86.2264%" y="463.50"></text></g><g><title>parse_header_name (93 samples, 0.34%)</title><rect x="86.2049%" y="469" width="0.3373%" height="15" fill="rgb(222,178,2)" fg:x="23771" fg:w="93"/><text x="86.4549%" y="479.50"></text></g><g><title>swoole_strcaseeq (18 samples, 0.07%)</title><rect x="86.4769%" y="453" width="0.0653%" height="15" fill="rgb(226,74,18)" fg:x="23846" fg:w="18"/><text x="86.7269%" y="463.50"></text></g><g><title>sw_snprintf (41 samples, 0.15%)</title><rect x="86.5422%" y="469" width="0.1487%" height="15" fill="rgb(225,67,54)" fg:x="23864" fg:w="41"/><text x="86.7922%" y="479.50"></text></g><g><title>sw_zend_read_property_ex (106 samples, 0.38%)</title><rect x="86.6908%" y="469" width="0.3844%" height="15" fill="rgb(251,92,32)" fg:x="23905" fg:w="106"/><text x="86.9408%" y="479.50"></text></g><g><title>zend_read_property_ex (105 samples, 0.38%)</title><rect x="86.6945%" y="453" width="0.3808%" height="15" fill="rgb(228,149,22)" fg:x="23906" fg:w="105"/><text x="86.9445%" y="463.50"></text></g><g><title>zend_std_read_property (103 samples, 0.37%)</title><rect x="86.7017%" y="437" width="0.3735%" height="15" fill="rgb(243,54,13)" fg:x="23908" fg:w="103"/><text x="86.9517%" y="447.50"></text></g><g><title>zend_get_property_offset (100 samples, 0.36%)</title><rect x="86.7126%" y="421" width="0.3626%" height="15" fill="rgb(243,180,28)" fg:x="23911" fg:w="100"/><text x="86.9626%" y="431.50"></text></g><g><title>zend_hash_find (93 samples, 0.34%)</title><rect x="86.7380%" y="405" width="0.3373%" height="15" fill="rgb(208,167,24)" fg:x="23918" fg:w="93"/><text x="86.9880%" y="415.50"></text></g><g><title>zend_hash_find_bucket (89 samples, 0.32%)</title><rect x="86.7525%" y="389" width="0.3228%" height="15" fill="rgb(245,73,45)" fg:x="23922" fg:w="89"/><text x="87.0025%" y="399.50"></text></g><g><title>zend_string_hash_val (82 samples, 0.30%)</title><rect x="86.7779%" y="373" width="0.2974%" height="15" fill="rgb(237,203,48)" fg:x="23929" fg:w="82"/><text x="87.0279%" y="383.50"></text></g><g><title>swoole::String::append (13 samples, 0.05%)</title><rect x="87.0752%" y="469" width="0.0471%" height="15" fill="rgb(211,197,16)" fg:x="24011" fg:w="13"/><text x="87.3252%" y="479.50"></text></g><g><title>swoole::http::Context::compress (80 samples, 0.29%)</title><rect x="87.1224%" y="469" width="0.2901%" height="15" fill="rgb(243,99,51)" fg:x="24024" fg:w="80"/><text x="87.3724%" y="479.50"></text></g><g><title>swoole::http::Context::build_header (938 samples, 3.40%)</title><rect x="84.1741%" y="485" width="3.4016%" height="15" fill="rgb(215,123,29)" fg:x="23211" fg:w="938"/><text x="84.4241%" y="495.50">swo..</text></g><g><title>swoole::http_server::get_status_message (45 samples, 0.16%)</title><rect x="87.4125%" y="469" width="0.1632%" height="15" fill="rgb(239,186,37)" fg:x="24104" fg:w="45"/><text x="87.6625%" y="479.50"></text></g><g><title>_Sp_counted_ptr_inplace&lt;int&gt; (75 samples, 0.27%)</title><rect x="87.5793%" y="389" width="0.2720%" height="15" fill="rgb(252,136,39)" fg:x="24150" fg:w="75"/><text x="87.8293%" y="399.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;swoole::String&gt; &gt;::construct&lt;swoole::String, int&gt; (75 samples, 0.27%)</title><rect x="87.5793%" y="373" width="0.2720%" height="15" fill="rgb(223,213,32)" fg:x="24150" fg:w="75"/><text x="87.8293%" y="383.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;swoole::String&gt;::construct&lt;swoole::String, int&gt; (75 samples, 0.27%)</title><rect x="87.5793%" y="357" width="0.2720%" height="15" fill="rgb(233,115,5)" fg:x="24150" fg:w="75"/><text x="87.8293%" y="367.50"></text></g><g><title>String (75 samples, 0.27%)</title><rect x="87.5793%" y="341" width="0.2720%" height="15" fill="rgb(207,226,44)" fg:x="24150" fg:w="75"/><text x="87.8293%" y="351.50"></text></g><g><title>swoole::String::alloc (75 samples, 0.27%)</title><rect x="87.5793%" y="325" width="0.2720%" height="15" fill="rgb(208,126,0)" fg:x="24150" fg:w="75"/><text x="87.8293%" y="335.50"></text></g><g><title>std::make_shared&lt;swoole::String, int&gt; (78 samples, 0.28%)</title><rect x="87.5757%" y="469" width="0.2829%" height="15" fill="rgb(244,66,21)" fg:x="24149" fg:w="78"/><text x="87.8257%" y="479.50"></text></g><g><title>std::allocate_shared&lt;swoole::String, std::allocator&lt;swoole::String&gt;, int&gt; (78 samples, 0.28%)</title><rect x="87.5757%" y="453" width="0.2829%" height="15" fill="rgb(222,97,12)" fg:x="24149" fg:w="78"/><text x="87.8257%" y="463.50"></text></g><g><title>shared_ptr&lt;std::allocator&lt;swoole::String&gt;, int&gt; (78 samples, 0.28%)</title><rect x="87.5757%" y="437" width="0.2829%" height="15" fill="rgb(219,213,19)" fg:x="24149" fg:w="78"/><text x="87.8257%" y="447.50"></text></g><g><title>__shared_ptr&lt;std::allocator&lt;swoole::String&gt;, int&gt; (78 samples, 0.28%)</title><rect x="87.5757%" y="421" width="0.2829%" height="15" fill="rgb(252,169,30)" fg:x="24149" fg:w="78"/><text x="87.8257%" y="431.50"></text></g><g><title>__shared_count&lt;swoole::String, std::allocator&lt;swoole::String&gt;, int&gt; (77 samples, 0.28%)</title><rect x="87.5793%" y="405" width="0.2792%" height="15" fill="rgb(206,32,51)" fg:x="24150" fg:w="77"/><text x="87.8293%" y="415.50"></text></g><g><title>swoole::http::Context::get_write_buffer (79 samples, 0.29%)</title><rect x="87.5757%" y="485" width="0.2865%" height="15" fill="rgb(250,172,42)" fg:x="24149" fg:w="79"/><text x="87.8257%" y="495.50"></text></g><g><title>swoole::http::Context::end (1,595 samples, 5.78%)</title><rect x="82.2919%" y="501" width="5.7842%" height="15" fill="rgb(209,34,43)" fg:x="22692" fg:w="1595"/><text x="82.5419%" y="511.50">swoole:..</text></g><g><title>swoole_pagesize (59 samples, 0.21%)</title><rect x="87.8622%" y="485" width="0.2140%" height="15" fill="rgb(223,11,35)" fg:x="24228" fg:w="59"/><text x="88.1122%" y="495.50"></text></g><g><title>gc_possible_root (156 samples, 0.57%)</title><rect x="88.0762%" y="485" width="0.5657%" height="15" fill="rgb(251,219,26)" fg:x="24287" fg:w="156"/><text x="88.3262%" y="495.50"></text></g><g><title>gc_fetch_unused (34 samples, 0.12%)</title><rect x="88.5186%" y="469" width="0.1233%" height="15" fill="rgb(231,119,3)" fg:x="24409" fg:w="34"/><text x="88.7686%" y="479.50"></text></g><g><title>zend_object_release (158 samples, 0.57%)</title><rect x="88.0762%" y="501" width="0.5730%" height="15" fill="rgb(216,97,11)" fg:x="24287" fg:w="158"/><text x="88.3262%" y="511.50"></text></g><g><title>zend_vm_stack_free_args (4 samples, 0.01%)</title><rect x="88.6491%" y="501" width="0.0145%" height="15" fill="rgb(223,59,9)" fg:x="24445" fg:w="4"/><text x="88.8991%" y="511.50"></text></g><g><title>swoole_http_server_onAfterResponse (182 samples, 0.66%)</title><rect x="88.8486%" y="485" width="0.6600%" height="15" fill="rgb(233,93,31)" fg:x="24500" fg:w="182"/><text x="89.0986%" y="495.50"></text></g><g><title>zim_swoole_http_response_end (235 samples, 0.85%)</title><rect x="88.6636%" y="501" width="0.8522%" height="15" fill="rgb(239,81,33)" fg:x="24449" fg:w="235"/><text x="88.9136%" y="511.50"></text></g><g><title>php_swoole_http_response_get_and_check_context (123 samples, 0.45%)</title><rect x="89.5340%" y="485" width="0.4461%" height="15" fill="rgb(213,120,34)" fg:x="24689" fg:w="123"/><text x="89.7840%" y="495.50"></text></g><g><title>php_swoole_http_response_get_context (36 samples, 0.13%)</title><rect x="89.8495%" y="469" width="0.1306%" height="15" fill="rgb(243,49,53)" fg:x="24776" fg:w="36"/><text x="90.0995%" y="479.50"></text></g><g><title>php_swoole_http_response_fetch_object (20 samples, 0.07%)</title><rect x="89.9075%" y="453" width="0.0725%" height="15" fill="rgb(247,216,33)" fg:x="24792" fg:w="20"/><text x="90.1575%" y="463.50"></text></g><g><title>zend_hash_real_init_mixed (68 samples, 0.25%)</title><rect x="90.2665%" y="405" width="0.2466%" height="15" fill="rgb(226,26,14)" fg:x="24891" fg:w="68"/><text x="90.5165%" y="415.50"></text></g><g><title>zend_hash_real_init_mixed_ex (68 samples, 0.25%)</title><rect x="90.2665%" y="389" width="0.2466%" height="15" fill="rgb(215,49,53)" fg:x="24891" fg:w="68"/><text x="90.5165%" y="399.50"></text></g><g><title>_emalloc_320 (68 samples, 0.25%)</title><rect x="90.2665%" y="373" width="0.2466%" height="15" fill="rgb(245,162,40)" fg:x="24891" fg:w="68"/><text x="90.5165%" y="383.50"></text></g><g><title>zend_mm_alloc_small (33 samples, 0.12%)</title><rect x="90.3935%" y="357" width="0.1197%" height="15" fill="rgb(229,68,17)" fg:x="24926" fg:w="33"/><text x="90.6435%" y="367.50"></text></g><g><title>_zend_hash_str_add_or_update_i (124 samples, 0.45%)</title><rect x="90.2085%" y="421" width="0.4497%" height="15" fill="rgb(213,182,10)" fg:x="24875" fg:w="124"/><text x="90.4585%" y="431.50"></text></g><g><title>zend_string_init (40 samples, 0.15%)</title><rect x="90.5131%" y="405" width="0.1451%" height="15" fill="rgb(245,125,30)" fg:x="24959" fg:w="40"/><text x="90.7631%" y="415.50"></text></g><g><title>zend_string_alloc (24 samples, 0.09%)</title><rect x="90.5712%" y="389" width="0.0870%" height="15" fill="rgb(232,202,2)" fg:x="24975" fg:w="24"/><text x="90.8212%" y="399.50"></text></g><g><title>_emalloc (24 samples, 0.09%)</title><rect x="90.5712%" y="373" width="0.0870%" height="15" fill="rgb(237,140,51)" fg:x="24975" fg:w="24"/><text x="90.8212%" y="383.50"></text></g><g><title>zend_mm_alloc_heap (24 samples, 0.09%)</title><rect x="90.5712%" y="357" width="0.0870%" height="15" fill="rgb(236,157,25)" fg:x="24975" fg:w="24"/><text x="90.8212%" y="367.50"></text></g><g><title>zend_mm_alloc_small (24 samples, 0.09%)</title><rect x="90.5712%" y="341" width="0.0870%" height="15" fill="rgb(219,209,0)" fg:x="24975" fg:w="24"/><text x="90.8212%" y="351.50"></text></g><g><title>add_assoc_zval_ex (128 samples, 0.46%)</title><rect x="90.2049%" y="469" width="0.4642%" height="15" fill="rgb(240,116,54)" fg:x="24874" fg:w="128"/><text x="90.4549%" y="479.50"></text></g><g><title>zend_symtable_str_update (128 samples, 0.46%)</title><rect x="90.2049%" y="453" width="0.4642%" height="15" fill="rgb(216,10,36)" fg:x="24874" fg:w="128"/><text x="90.4549%" y="463.50"></text></g><g><title>zend_hash_str_update (128 samples, 0.46%)</title><rect x="90.2049%" y="437" width="0.4642%" height="15" fill="rgb(222,72,44)" fg:x="24874" fg:w="128"/><text x="90.4549%" y="447.50"></text></g><g><title>zend_hash_func (3 samples, 0.01%)</title><rect x="90.6582%" y="421" width="0.0109%" height="15" fill="rgb(232,159,9)" fg:x="24999" fg:w="3"/><text x="90.9082%" y="431.50"></text></g><g><title>zend_inline_hash_func (3 samples, 0.01%)</title><rect x="90.6582%" y="405" width="0.0109%" height="15" fill="rgb(210,39,32)" fg:x="24999" fg:w="3"/><text x="90.9082%" y="415.50"></text></g><g><title>http_header_key_format (37 samples, 0.13%)</title><rect x="90.6691%" y="469" width="0.1342%" height="15" fill="rgb(216,194,45)" fg:x="25002" fg:w="37"/><text x="90.9191%" y="479.50"></text></g><g><title>sw_tg_buffer (37 samples, 0.13%)</title><rect x="90.8033%" y="469" width="0.1342%" height="15" fill="rgb(218,18,35)" fg:x="25039" fg:w="37"/><text x="91.0533%" y="479.50"></text></g><g><title>swoole_http_has_crlf (20 samples, 0.07%)</title><rect x="90.9374%" y="469" width="0.0725%" height="15" fill="rgb(207,83,51)" fg:x="25076" fg:w="20"/><text x="91.1874%" y="479.50"></text></g><g><title>_emalloc_56 (171 samples, 0.62%)</title><rect x="91.3944%" y="437" width="0.6201%" height="15" fill="rgb(225,63,43)" fg:x="25202" fg:w="171"/><text x="91.6444%" y="447.50"></text></g><g><title>zend_mm_alloc_small (126 samples, 0.46%)</title><rect x="91.5576%" y="421" width="0.4569%" height="15" fill="rgb(207,57,36)" fg:x="25247" fg:w="126"/><text x="91.8076%" y="431.50"></text></g><g><title>_zend_new_array_0 (178 samples, 0.65%)</title><rect x="91.3944%" y="453" width="0.6455%" height="15" fill="rgb(216,99,33)" fg:x="25202" fg:w="178"/><text x="91.6444%" y="463.50"></text></g><g><title>_zend_hash_init_int (7 samples, 0.03%)</title><rect x="92.0145%" y="437" width="0.0254%" height="15" fill="rgb(225,42,16)" fg:x="25373" fg:w="7"/><text x="92.2645%" y="447.50"></text></g><g><title>zend_string_equal_content (67 samples, 0.24%)</title><rect x="92.8776%" y="357" width="0.2430%" height="15" fill="rgb(220,201,45)" fg:x="25611" fg:w="67"/><text x="93.1276%" y="367.50"></text></g><g><title>zend_get_property_offset (305 samples, 1.11%)</title><rect x="92.2357%" y="405" width="1.1061%" height="15" fill="rgb(225,33,4)" fg:x="25434" fg:w="305"/><text x="92.4857%" y="415.50"></text></g><g><title>zend_hash_find (256 samples, 0.93%)</title><rect x="92.4134%" y="389" width="0.9284%" height="15" fill="rgb(224,33,50)" fg:x="25483" fg:w="256"/><text x="92.6634%" y="399.50"></text></g><g><title>zend_hash_find_bucket (256 samples, 0.93%)</title><rect x="92.4134%" y="373" width="0.9284%" height="15" fill="rgb(246,198,51)" fg:x="25483" fg:w="256"/><text x="92.6634%" y="383.50"></text></g><g><title>zend_string_hash_val (61 samples, 0.22%)</title><rect x="93.1206%" y="357" width="0.2212%" height="15" fill="rgb(205,22,4)" fg:x="25678" fg:w="61"/><text x="93.3706%" y="367.50"></text></g><g><title>zend_string_hash_func (61 samples, 0.22%)</title><rect x="93.1206%" y="341" width="0.2212%" height="15" fill="rgb(206,3,8)" fg:x="25678" fg:w="61"/><text x="93.3706%" y="351.50"></text></g><g><title>zend_hash_func (61 samples, 0.22%)</title><rect x="93.1206%" y="325" width="0.2212%" height="15" fill="rgb(251,23,15)" fg:x="25678" fg:w="61"/><text x="93.3706%" y="335.50"></text></g><g><title>zend_inline_hash_func (60 samples, 0.22%)</title><rect x="93.1242%" y="309" width="0.2176%" height="15" fill="rgb(252,88,28)" fg:x="25679" fg:w="60"/><text x="93.3742%" y="319.50"></text></g><g><title>zend_read_property_ex (360 samples, 1.31%)</title><rect x="92.0399%" y="437" width="1.3055%" height="15" fill="rgb(212,127,14)" fg:x="25380" fg:w="360"/><text x="92.2899%" y="447.50"></text></g><g><title>zend_std_read_property (360 samples, 1.31%)</title><rect x="92.0399%" y="421" width="1.3055%" height="15" fill="rgb(247,145,37)" fg:x="25380" fg:w="360"/><text x="92.2899%" y="431.50"></text></g><g><title>zend_mm_alloc_small (61 samples, 0.22%)</title><rect x="93.5050%" y="373" width="0.2212%" height="15" fill="rgb(209,117,53)" fg:x="25784" fg:w="61"/><text x="93.7550%" y="383.50"></text></g><g><title>zend_string_init (121 samples, 0.44%)</title><rect x="93.3454%" y="437" width="0.4388%" height="15" fill="rgb(212,90,42)" fg:x="25740" fg:w="121"/><text x="93.5954%" y="447.50"></text></g><g><title>zend_string_alloc (121 samples, 0.44%)</title><rect x="93.3454%" y="421" width="0.4388%" height="15" fill="rgb(218,164,37)" fg:x="25740" fg:w="121"/><text x="93.5954%" y="431.50"></text></g><g><title>_emalloc (121 samples, 0.44%)</title><rect x="93.3454%" y="405" width="0.4388%" height="15" fill="rgb(246,65,34)" fg:x="25740" fg:w="121"/><text x="93.5954%" y="415.50"></text></g><g><title>zend_mm_alloc_heap (77 samples, 0.28%)</title><rect x="93.5050%" y="389" width="0.2792%" height="15" fill="rgb(231,100,33)" fg:x="25784" fg:w="77"/><text x="93.7550%" y="399.50"></text></g><g><title>zend_mm_small_size_to_bin (16 samples, 0.06%)</title><rect x="93.7262%" y="373" width="0.0580%" height="15" fill="rgb(228,126,14)" fg:x="25845" fg:w="16"/><text x="93.9762%" y="383.50"></text></g><g><title>swoole_http_init_and_read_property (790 samples, 2.86%)</title><rect x="91.0100%" y="469" width="2.8649%" height="15" fill="rgb(215,173,21)" fg:x="25096" fg:w="790"/><text x="91.2600%" y="479.50">sw..</text></g><g><title>zend_read_property (506 samples, 1.83%)</title><rect x="92.0399%" y="453" width="1.8350%" height="15" fill="rgb(210,6,40)" fg:x="25380" fg:w="506"/><text x="92.2899%" y="463.50">z..</text></g><g><title>zend_string_release_ex (25 samples, 0.09%)</title><rect x="93.7842%" y="437" width="0.0907%" height="15" fill="rgb(212,48,18)" fg:x="25861" fg:w="25"/><text x="94.0342%" y="447.50"></text></g><g><title>_efree (25 samples, 0.09%)</title><rect x="93.7842%" y="421" width="0.0907%" height="15" fill="rgb(230,214,11)" fg:x="25861" fg:w="25"/><text x="94.0342%" y="431.50"></text></g><g><title>zend_mm_free_heap (25 samples, 0.09%)</title><rect x="93.7842%" y="405" width="0.0907%" height="15" fill="rgb(254,105,39)" fg:x="25861" fg:w="25"/><text x="94.0342%" y="415.50"></text></g><g><title>swoole::http::Context::set_header (1,078 samples, 3.91%)</title><rect x="89.9801%" y="485" width="3.9093%" height="15" fill="rgb(245,158,5)" fg:x="24812" fg:w="1078"/><text x="90.2301%" y="495.50">swoo..</text></g><g><title>swoole_strlcpy (4 samples, 0.01%)</title><rect x="93.8749%" y="469" width="0.0145%" height="15" fill="rgb(249,208,11)" fg:x="25886" fg:w="4"/><text x="94.1249%" y="479.50"></text></g><g><title>ZEND_DO_FCALL_SPEC_RETVAL_UNUSED_HANDLER (3,311 samples, 12.01%)</title><rect x="81.9909%" y="517" width="12.0073%" height="15" fill="rgb(210,39,28)" fg:x="22609" fg:w="3311"/><text x="82.2409%" y="527.50">ZEND_DO_FCALL_SPEC..</text></g><g><title>zim_swoole_http_response_header (1,236 samples, 4.48%)</title><rect x="89.5159%" y="501" width="4.4823%" height="15" fill="rgb(211,56,53)" fg:x="24684" fg:w="1236"/><text x="89.7659%" y="511.50">zim_s..</text></g><g><title>zend_parse_arg_string (30 samples, 0.11%)</title><rect x="93.8894%" y="485" width="0.1088%" height="15" fill="rgb(226,201,30)" fg:x="25890" fg:w="30"/><text x="94.1394%" y="495.50"></text></g><g><title>ZEND_INIT_METHOD_CALL_SPEC_CV_CONST_HANDLER (69 samples, 0.25%)</title><rect x="93.9982%" y="517" width="0.2502%" height="15" fill="rgb(239,101,34)" fg:x="25920" fg:w="69"/><text x="94.2482%" y="527.50"></text></g><g><title>ZEND_RETURN_SPEC_CONST_HANDLER (62 samples, 0.22%)</title><rect x="94.2484%" y="517" width="0.2248%" height="15" fill="rgb(226,209,5)" fg:x="25989" fg:w="62"/><text x="94.4984%" y="527.50"></text></g><g><title>ZEND_SEND_VAL_EX_SPEC_CONST_UNUSED_QUICK_HANDLER (108 samples, 0.39%)</title><rect x="94.4733%" y="517" width="0.3917%" height="15" fill="rgb(250,105,47)" fg:x="26051" fg:w="108"/><text x="94.7233%" y="527.50"></text></g><g><title>gc_check_possible_root (25 samples, 0.09%)</title><rect x="95.4161%" y="469" width="0.0907%" height="15" fill="rgb(230,72,3)" fg:x="26311" fg:w="25"/><text x="95.6661%" y="479.50"></text></g><g><title>gc_possible_root (25 samples, 0.09%)</title><rect x="95.4161%" y="453" width="0.0907%" height="15" fill="rgb(232,218,39)" fg:x="26311" fg:w="25"/><text x="95.6661%" y="463.50"></text></g><g><title>gc_fetch_unused (3 samples, 0.01%)</title><rect x="95.4959%" y="437" width="0.0109%" height="15" fill="rgb(248,166,6)" fg:x="26333" fg:w="3"/><text x="95.7459%" y="447.50"></text></g><g><title>i_free_compiled_variables (42 samples, 0.15%)</title><rect x="95.3654%" y="501" width="0.1523%" height="15" fill="rgb(247,89,20)" fg:x="26297" fg:w="42"/><text x="95.6154%" y="511.50"></text></g><g><title>i_zval_ptr_dtor (29 samples, 0.11%)</title><rect x="95.4125%" y="485" width="0.1052%" height="15" fill="rgb(248,130,54)" fg:x="26310" fg:w="29"/><text x="95.6625%" y="495.50"></text></g><g><title>zend_gc_delref (3 samples, 0.01%)</title><rect x="95.5068%" y="469" width="0.0109%" height="15" fill="rgb(234,196,4)" fg:x="26336" fg:w="3"/><text x="95.7568%" y="479.50"></text></g><g><title>execute_ex (3,747 samples, 13.59%)</title><rect x="81.9547%" y="533" width="13.5884%" height="15" fill="rgb(250,143,31)" fg:x="22599" fg:w="3747"/><text x="82.2047%" y="543.50">execute_ex</text></g><g><title>zend_leave_helper_SPEC (187 samples, 0.68%)</title><rect x="94.8649%" y="517" width="0.6782%" height="15" fill="rgb(211,110,34)" fg:x="26159" fg:w="187"/><text x="95.1149%" y="527.50"></text></g><g><title>zend_object_release (7 samples, 0.03%)</title><rect x="95.5177%" y="501" width="0.0254%" height="15" fill="rgb(215,124,48)" fg:x="26339" fg:w="7"/><text x="95.7677%" y="511.50"></text></g><g><title>zend_gc_delref (7 samples, 0.03%)</title><rect x="95.5177%" y="485" width="0.0254%" height="15" fill="rgb(216,46,13)" fg:x="26339" fg:w="7"/><text x="95.7677%" y="495.50"></text></g><g><title>swoole::PHPCoroutine::catch_exception (4 samples, 0.01%)</title><rect x="95.5431%" y="533" width="0.0145%" height="15" fill="rgb(205,184,25)" fg:x="26346" fg:w="4"/><text x="95.7931%" y="543.50"></text></g><g><title>swoole::PHPCoroutine::record_last_msec (78 samples, 0.28%)</title><rect x="95.5576%" y="533" width="0.2829%" height="15" fill="rgb(228,1,10)" fg:x="26350" fg:w="78"/><text x="95.8076%" y="543.50"></text></g><g><title>swoole::PHPCoroutine::save_vm_stack (31 samples, 0.11%)</title><rect x="95.8404%" y="533" width="0.1124%" height="15" fill="rgb(213,116,27)" fg:x="26428" fg:w="31"/><text x="96.0904%" y="543.50"></text></g><g><title>swoole::PHPCoroutine::vm_stack_init (315 samples, 1.14%)</title><rect x="95.9529%" y="533" width="1.1423%" height="15" fill="rgb(241,95,50)" fg:x="26459" fg:w="315"/><text x="96.2029%" y="543.50"></text></g><g><title>_emalloc_large (314 samples, 1.14%)</title><rect x="95.9565%" y="517" width="1.1387%" height="15" fill="rgb(238,48,32)" fg:x="26460" fg:w="314"/><text x="96.2065%" y="527.50"></text></g><g><title>zend_mm_alloc_large_ex (194 samples, 0.70%)</title><rect x="96.3917%" y="501" width="0.7035%" height="15" fill="rgb(235,113,49)" fg:x="26580" fg:w="194"/><text x="96.6417%" y="511.50"></text></g><g><title>zend_mm_alloc_pages (192 samples, 0.70%)</title><rect x="96.3989%" y="485" width="0.6963%" height="15" fill="rgb(205,127,43)" fg:x="26582" fg:w="192"/><text x="96.6489%" y="495.50"></text></g><g><title>zend_mm_bitset_set_range (41 samples, 0.15%)</title><rect x="96.9465%" y="469" width="0.1487%" height="15" fill="rgb(250,162,2)" fg:x="26733" fg:w="41"/><text x="97.1965%" y="479.50"></text></g><g><title>swoole_isset_hook (49 samples, 0.18%)</title><rect x="97.0952%" y="533" width="0.1777%" height="15" fill="rgb(220,13,41)" fg:x="26774" fg:w="49"/><text x="97.3452%" y="543.50"></text></g><g><title>zend_gc_addref (135 samples, 0.49%)</title><rect x="97.2729%" y="533" width="0.4896%" height="15" fill="rgb(249,221,25)" fg:x="26823" fg:w="135"/><text x="97.5229%" y="543.50"></text></g><g><title>zend_init_func_execute_data (89 samples, 0.32%)</title><rect x="97.7625%" y="533" width="0.3228%" height="15" fill="rgb(215,208,19)" fg:x="26958" fg:w="89"/><text x="98.0125%" y="543.50"></text></g><g><title>zend_vm_calc_used_stack (19 samples, 0.07%)</title><rect x="98.0852%" y="517" width="0.0689%" height="15" fill="rgb(236,175,2)" fg:x="27047" fg:w="19"/><text x="98.3352%" y="527.50"></text></g><g><title>zend_vm_stack_push_call_frame (22 samples, 0.08%)</title><rect x="98.0852%" y="533" width="0.0798%" height="15" fill="rgb(241,52,2)" fg:x="27047" fg:w="22"/><text x="98.3352%" y="543.50"></text></g><g><title>zend_vm_stack_push_call_frame_ex (3 samples, 0.01%)</title><rect x="98.1541%" y="517" width="0.0109%" height="15" fill="rgb(248,140,14)" fg:x="27066" fg:w="3"/><text x="98.4041%" y="527.50"></text></g><g><title>zval_get_type (17 samples, 0.06%)</title><rect x="98.1650%" y="533" width="0.0617%" height="15" fill="rgb(253,22,42)" fg:x="27069" fg:w="17"/><text x="98.4150%" y="543.50"></text></g><g><title>std::function&lt;void (void*)&gt;::operator (5,000 samples, 18.13%)</title><rect x="80.2937%" y="565" width="18.1324%" height="15" fill="rgb(234,61,47)" fg:x="22141" fg:w="5000"/><text x="80.5437%" y="575.50">std::function&lt;void (void*)&gt;:..</text></g><g><title>swoole::PHPCoroutine::main_func (4,888 samples, 17.73%)</title><rect x="80.6999%" y="549" width="17.7262%" height="15" fill="rgb(208,226,15)" fg:x="22253" fg:w="4888"/><text x="80.9499%" y="559.50">swoole::PHPCoroutine::main_f..</text></g><g><title>zval_ptr_dtor (55 samples, 0.20%)</title><rect x="98.2267%" y="533" width="0.1995%" height="15" fill="rgb(217,221,4)" fg:x="27086" fg:w="55"/><text x="98.4767%" y="543.50"></text></g><g><title>i_zval_ptr_dtor (55 samples, 0.20%)</title><rect x="98.2267%" y="517" width="0.1995%" height="15" fill="rgb(212,174,34)" fg:x="27086" fg:w="55"/><text x="98.4767%" y="527.50"></text></g><g><title>swoole_make_fcontext (5,025 samples, 18.22%)</title><rect x="80.2067%" y="597" width="18.2230%" height="15" fill="rgb(253,83,4)" fg:x="22117" fg:w="5025"/><text x="80.4567%" y="607.50">swoole_make_fcontext</text></g><g><title>swoole::coroutine::Context::context_func (5,009 samples, 18.17%)</title><rect x="80.2647%" y="581" width="18.1650%" height="15" fill="rgb(250,195,49)" fg:x="22133" fg:w="5009"/><text x="80.5147%" y="591.50">swoole::coroutine::Context::..</text></g><g><title>time (91 samples, 0.33%)</title><rect x="98.4297%" y="597" width="0.3300%" height="15" fill="rgb(241,192,25)" fg:x="27142" fg:w="91"/><text x="98.6797%" y="607.50"></text></g><g><title>tolower (16 samples, 0.06%)</title><rect x="98.7597%" y="597" width="0.0580%" height="15" fill="rgb(208,124,10)" fg:x="27233" fg:w="16"/><text x="99.0097%" y="607.50"></text></g><g><title>vfprintf (76 samples, 0.28%)</title><rect x="98.8178%" y="597" width="0.2756%" height="15" fill="rgb(222,33,0)" fg:x="27249" fg:w="76"/><text x="99.0678%" y="607.50"></text></g><g><title>vsnprintf (150 samples, 0.54%)</title><rect x="99.0934%" y="597" width="0.5440%" height="15" fill="rgb(234,209,28)" fg:x="27325" fg:w="150"/><text x="99.3434%" y="607.50"></text></g><g><title>vtable for std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt; (70 samples, 0.25%)</title><rect x="99.6374%" y="597" width="0.2539%" height="15" fill="rgb(224,11,23)" fg:x="27475" fg:w="70"/><text x="99.8874%" y="607.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;swoole::String, std::allocator&lt;swoole::String&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (70 samples, 0.25%)</title><rect x="99.6374%" y="581" width="0.2539%" height="15" fill="rgb(232,99,1)" fg:x="27475" fg:w="70"/><text x="99.8874%" y="591.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;swoole::String&gt; &gt;::destroy&lt;swoole::String&gt; (3 samples, 0.01%)</title><rect x="99.8803%" y="565" width="0.0109%" height="15" fill="rgb(237,95,45)" fg:x="27542" fg:w="3"/><text x="100.1303%" y="575.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;swoole::String&gt;::destroy&lt;swoole::String&gt; (3 samples, 0.01%)</title><rect x="99.8803%" y="549" width="0.0109%" height="15" fill="rgb(208,109,11)" fg:x="27542" fg:w="3"/><text x="100.1303%" y="559.50"></text></g><g><title>~String (3 samples, 0.01%)</title><rect x="99.8803%" y="533" width="0.0109%" height="15" fill="rgb(216,190,48)" fg:x="27542" fg:w="3"/><text x="100.1303%" y="543.50"></text></g><g><title>all (27,575 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(251,171,36)" fg:x="0" fg:w="27575"/><text x="0.2500%" y="639.50"></text></g><g><title>swoole-cli (27,575 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(230,62,22)" fg:x="0" fg:w="27575"/><text x="0.2500%" y="623.50">swoole-cli</text></g><g><title>zend_read_property (30 samples, 0.11%)</title><rect x="99.8912%" y="597" width="0.1088%" height="15" fill="rgb(225,114,35)" fg:x="27545" fg:w="30"/><text x="100.1412%" y="607.50"></text></g></svg></svg>